[
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "Course GitHub organization\nüîó on GitHub\n\n\n\nRStudio containers\nüîó on Duke Container Manager\n\n\n\nOffice hours\nüîó on Google Sheets\n\n\n\nEd Discussion\nüîó on Canvas\n\n\n\nGradescope\nüîó on Canvas\n\n\n\nGradebook\nüîó on Canvas\n\n\n\nTexbooks\nüîó R for Data Science\nüîó Introduction to Modern Statistics\n\n\n\nPackage documentation\nüîó ggplot2: ggplot2.tidyverse.org\nüîó dplyr: dplyr.tidyverse.org\nüîó tidyr: tidyr.tidyverse.org\nüîó forcats: forcats.tidyverse.org\nüîó stringr: stringr.tidyverse.org\nüîó lubridate: lubridate.tidyverse.org\nüîó readr: readr.tidyverse.org\nüîó readxl: readxl.tidyverse.org",
    "crumbs": [
      "Course information",
      "Useful links"
    ]
  },
  {
    "objectID": "project/tips-resources.html",
    "href": "project/tips-resources.html",
    "title": "Project tips + resources",
    "section": "",
    "text": "The project is very open ended. For instance, in creating a compelling visualization(s) of your data in R, there is no limit on what tools or packages you may use. You do not need to visualize all of the data at once. A single high quality visualization will receive a much higher grade than a large number of poor quality visualizations.\nBefore you finalize your write up, make sure the printing of code chunks is turned off with the option echo: false. In addition to code chunks, ensure all messages are turned off with the options warning: false and message: false.\nFinally, pay attention to details in your write-up and presentation. Neatness, coherency, and clarity will count.",
    "crumbs": [
      "Project",
      "Tips + resources"
    ]
  },
  {
    "objectID": "project/tips-resources.html#suppress-code-and-warnings",
    "href": "project/tips-resources.html#suppress-code-and-warnings",
    "title": "Project tips + resources",
    "section": "Suppress code and warnings",
    "text": "Suppress code and warnings\n\nInclude the following in the YAML of your report.qmd to suppress all code, warnings, and other messages.\n\nexecute:\n  echo: false\n  warning: false",
    "crumbs": [
      "Project",
      "Tips + resources"
    ]
  },
  {
    "objectID": "project/tips-resources.html#headers",
    "href": "project/tips-resources.html#headers",
    "title": "Project tips + resources",
    "section": "Headers",
    "text": "Headers\nUse headers to clearly label each section. Make sure there is a space between the previous line and the header. Use appropriate header levels.",
    "crumbs": [
      "Project",
      "Tips + resources"
    ]
  },
  {
    "objectID": "project/tips-resources.html#references",
    "href": "project/tips-resources.html#references",
    "title": "Project tips + resources",
    "section": "References",
    "text": "References\nInclude all references in a section called ‚ÄúReferences‚Äù at the end of the report. This course does not have specific requirements for formatting citations and references. Optional: Use Quarto‚Äôs citation support for generating your reference. See Citations & Footnotes on the Quarto documentation for more on that.",
    "crumbs": [
      "Project",
      "Tips + resources"
    ]
  },
  {
    "objectID": "project/tips-resources.html#appendix",
    "href": "project/tips-resources.html#appendix",
    "title": "Project tips + resources",
    "section": "Appendix",
    "text": "Appendix\nIf you have additional work that does not fit or does not belong in the body of the report, you may put it at the end of the document in section called ‚ÄúAppendix‚Äù. The items in the appendix should be properly labeled. The appendix should only be for additional material. The reader should be able to fully understand your report without viewing content in the appendix. We will not grade your appendix.",
    "crumbs": [
      "Project",
      "Tips + resources"
    ]
  },
  {
    "objectID": "project/tips-resources.html#resize-figures",
    "href": "project/tips-resources.html#resize-figures",
    "title": "Project tips + resources",
    "section": "Resize figures",
    "text": "Resize figures\nResize plots and figures, so you have more space for the narrative. Resize individual figures: Set fig-width and fig-height in chunk options, e.g.,\n#| echo: fenced\n#| label: plot1\n#| fig-height: 3\n#| fig-width: 5\nreplacing plot1 with a meaningful label and the height and width with values appropriate for your write up.\nResize all figures: Include the fig-height and fig-width options in the YAML header as shown below:\nexecute:\n  fig-height: 3\n  fig-width: 5\nReplace the height and width values with values appropriate for your write up.",
    "crumbs": [
      "Project",
      "Tips + resources"
    ]
  },
  {
    "objectID": "project/tips-resources.html#arranging-plots",
    "href": "project/tips-resources.html#arranging-plots",
    "title": "Project tips + resources",
    "section": "Arranging plots",
    "text": "Arranging plots\nArrange plots in a grid, instead of one after the other. This is especially useful when displaying plots for exploratory data analysis and to check assumptions.\nIf you‚Äôre using ggplot2 functions, the patchwork package makes it easy to arrange plots in a grid.\nMore to be added soon‚Ä¶",
    "crumbs": [
      "Project",
      "Tips + resources"
    ]
  },
  {
    "objectID": "project/1-working-collaboratively.html",
    "href": "project/1-working-collaboratively.html",
    "title": "Working collaboratively",
    "section": "",
    "text": "Data science is a collaborative discipline. Pretty much no data scientist works alone, so neither should you! In this course you‚Äôll collaborate with teammates on the project.\nThe first milestone of the project, today‚Äôs activity, will introduce you to the technical aspects of collaborating on a reproducible data science project that is version controlled by Git and hosted on GitHub in a repository shared by all teammates.\nYes, this means you and all of your teammates will be pushing to the same repository! Sometimes things will go swimmingly, and sometimes you‚Äôll run into merge conflicts.",
    "crumbs": [
      "Project",
      "Milestone 1"
    ]
  },
  {
    "objectID": "project/1-working-collaboratively.html#activity",
    "href": "project/1-working-collaboratively.html#activity",
    "title": "Working collaboratively",
    "section": "Activity",
    "text": "Activity\n\nSetup\n\nClone the project repo and open the about.qmd file.\nAssign the numbers 1, 2, 3, 4, and 5 to each of the team members. If your team has fewer than 5 people, some people will need to have multiple numbers.\n\n\n\nLet‚Äôs cause a merge conflict!\nOur goal is to see two different types of merges: first we‚Äôll see a type of merge that git can‚Äôt figure out on its own how to do on its own (a merge conflict) and requires human intervention, then another type of where that git can figure out how to do without human intervention.\nDoing this will require some tight choreography, so pay attention!\nTake turns in completing the exercise, only one member at a time. Others should just watch, not doing anything on their own projects (this includes not even pulling changes!) until they are instructed to. If you feel like you won‚Äôt be able to resist the urge to touch your computer when it‚Äôs not your turn, we recommend putting your hands in your pockets or sitting on them!\n\nBefore starting\nEveryone should have the repo cloned and know which role number(s) they are.\n\n\nRole 1\n\nGo to about.qmd in your project repo. Change the [team name] to your actual team name.\nRender the project by clicking on Render in the Build tab, commit (all changed files), and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 2\n\nChange the team name to some other word.\nRender the project by clicking on Render in the Build tab, commit (all changed files), and push. You should get an error.\nPull. Take a look at the document (about.qmd) with the merge conflict.\nClear the merge conflict by editing the document to choose the correct/preferred change.\nRender the project by clicking on Render in the Build tab.\nClick the Stage checkbox for all files in your Git tab. Make sure they all have check marks, not filled-in boxes.\nCommit and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 3\n\nChange the name of the first team member.\nRender the project by clicking on Render in the Build tab, commit, and push. You should get an error.\nPull. No merge conflicts should occur, but you should see a message about merging.\nNow push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 4\n\nChange the name of the first team member to something other than what the previous team member did.\nRender the project by clicking on Render in the Build tab, commit, and push. You should get an error.\nPull. Take a look at the document with the merge conflict. Clear the merge conflict by choosing the correct/preferred change. Render the project by clicking on Render in the Build tab, commit, and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 5\n\nChange the name of the rest of the team members and add descriptions for each person with the help of your team members. Role 5 should be the only one typing; the others should help verbally.\nRender the project by clicking on Render in the Build tab and commit. Discuss as a team what you expect to happen when you hit push. Should there be a merge conflict error or not?\nIf there is a merge conflict, fix it. If not, push your changes.\n\n\n\nEveryone\nPull, and observe the changes in your project.",
    "crumbs": [
      "Project",
      "Milestone 1"
    ]
  },
  {
    "objectID": "project/1-working-collaboratively.html#tips-for-collaborating-via-github",
    "href": "project/1-working-collaboratively.html#tips-for-collaborating-via-github",
    "title": "Working collaboratively",
    "section": "Tips for collaborating via GitHub",
    "text": "Tips for collaborating via GitHub\n\nAlways pull first before you start working.\nResolve a merge conflict (render and push) before continuing your work. Never do new work while resolving a merge conflict.\nRender, commit, and push often to minimize merge conflicts and/or to make merge conflicts easier to resolve.\nIf you find yourself in a situation that is difficult to resolve, ask questions ASAP. Don‚Äôt let it linger and get bigger.",
    "crumbs": [
      "Project",
      "Milestone 1"
    ]
  },
  {
    "objectID": "project/3-improvement-progress.html",
    "href": "project/3-improvement-progress.html",
    "title": "Improvement and progress",
    "section": "",
    "text": "By this point you‚Äôve received feedback on your proposal and you should be working on incorporating that feedback to improve your project and making further progress on it. This milestone ensures you‚Äôre keeping on task and doing these things.\n\nGoals\nThe goals of this milestone are as follows:\n\nIncorporate feedback from your proposal\nMake progress on your project prior to the peer review\n\n\n\nInstructions\nMake some progress, evidenced by commits to your repo since project milestone 2. These commits should\n\nexplicitly closing issues opened as proposal feedback, and\nmake further progress on the project.\n\n\n\nGrading\nThis milestone will be graded for completion, not accuracy. We will check to see if the team has made commits to their repo since project milestone 2 and closed all issues that were opened as part of proposal feedback.\n\n0 points: No commits since project milestone 2\n1 point: Only a single commit since project milestone 2, regardless of how many issues closed\n2-4 points: More than 1 commit since project milestone 2 and but not all issues closed\n5 points: More than 1 commit since project milestone 2 and all issues closed\n\n\n\n\n\n\n\nNote\n\n\n\nThere won‚Äôt be a lab session dedicated to this milestone. You are to work with your team outside of class time to complete this task.",
    "crumbs": [
      "Project",
      "Milestone 3"
    ]
  },
  {
    "objectID": "project/description.html",
    "href": "project/description.html",
    "title": "Project description",
    "section": "",
    "text": "TL;DR: Ask a question you‚Äôre curious about and answer it with a dataset of your choice. This is your project in a nutshell.\nMay be too long, but please do read\nThe project for this course will consist of analysis on a dataset of your own choosing. The dataset may already exist, or you may collect your own data using a survey or by conducting an experiment. You can choose the data based on your teams‚Äô interests or based on work in other courses or research projects. The goal of this project is for you to demonstrate proficiency in the techniques we have covered in this course (and beyond, if you like) and apply them to a novel dataset in a meaningful way.\nThe goal is not to do an exhaustive data analysis i.e., do not calculate every statistic and procedure you have learned for every variable, but rather let me know that you are proficient at asking meaningful questions and answering them with results of data analysis, that you are proficient in using R, and that you are proficient at interpreting and presenting the results. Focus on methods that help you begin to answer your research questions. You do not have to apply every statistical procedure we learned. Also, critique your own methods and provide suggestions for improving your analysis. Issues pertaining to the reliability and validity of your data, and appropriateness of the statistical analysis should be discussed here.\nThe project is very open ended. You should create some kind of compelling visualization(s) of this data in R. There is no limit on what tools or packages you may use but sticking to packages we learned in the course is required. You do not need to visualize all of the data at once. A single high-quality visualization will receive a much higher grade than a large number of poor-quality visualizations. Also pay attention to your presentation. Neatness, coherency, and clarity will count. All analyses must be done in RStudio, using R, and all components of the project must be reproducible (with the exception of the slide deck).\nYou will work on the project with your lab teams.\nThe four milestones for the final project are\n\nMilestone 1 - Working collaboratively\nMilestone 2 - Proposals, with three dataset ideas\nMilestone 3 - Improvement and progress\nMilestone 4 - Peer review, on another team‚Äôs project\nMilestone 5 - Presentation with slides and a reproducible project write-up of your analysis, with a draft along the way.\n\nYou will not be submitting anything on Gradescope for the project. Submission of these deliverables will happen on GitHub and feedback will be provided as GitHub issues that you need to engage with and close. The collection of the documents in your GitHub repo will create a webpage for your project. To create the webpage go to the Build tab in RStudio, and click on Render Website.",
    "crumbs": [
      "Project",
      "Description"
    ]
  },
  {
    "objectID": "project/description.html#reproducibility-organization",
    "href": "project/description.html#reproducibility-organization",
    "title": "Project description",
    "section": "Reproducibility + organization",
    "text": "Reproducibility + organization\nAll written work (with exception of presentation slides) should be reproducible, and the GitHub repo should be neatly organized.\nPoints for reproducibility + organization will be based on the reproducibility of the write-up and the organization of the project GitHub repo. The repo should be neatly organized as described above, there should be no extraneous files, all text in the README should be easily readable.",
    "crumbs": [
      "Project",
      "Description"
    ]
  },
  {
    "objectID": "project/description.html#teamwork",
    "href": "project/description.html#teamwork",
    "title": "Project description",
    "section": "Teamwork",
    "text": "Teamwork\nYou will be asked to fill out a survey where you rate the contribution and teamwork of each team member by assigning a contribution percentage for each team member. Filling out the survey is a prerequisite for getting credit on the team member evaluation. If you are suggesting that an individual did less than half the expected contribution given your team size (e.g., for a team of four students, if a student contributed less than 12.5% of the total effort), please provide some explanation. If any individual gets an average peer score indicating that this was the case, their grade will be assessed accordingly and penalties may apply beyond the teamwork component of the grade.\nIf you have concerns with the teamwork and/or contribution from any team members, please email me by the project presentation deadline. You only need to email me if you have concerns. Otherwise, I will assume everyone on the team equally contributed and will receive full credit for the teamwork portion of the grade.",
    "crumbs": [
      "Project",
      "Description"
    ]
  },
  {
    "objectID": "project/description.html#grading-summary",
    "href": "project/description.html#grading-summary",
    "title": "Project description",
    "section": "Grading summary",
    "text": "Grading summary\nGrading of the project will take into account the following:\n\nContent - What is the quality of research and/or policy question and relevancy of data to those questions?\nCorrectness - Are statistical procedures carried out and explained correctly?\nWriting and Presentation - What is the quality of the statistical presentation, writing, and explanations?\nCreativity and Critical Thought - Is the project carefully thought out? Are the limitations carefully considered? Does it appear that time and effort went into the planning and implementation of the project?\n\nA general breakdown of scoring is as follows:\n\n90%-100%: Outstanding effort. Student understands how to apply all statistical concepts, can put the results into a cogent argument, can identify weaknesses in the argument, and can clearly communicate the results to others.\n80%-89%: Good effort. Student understands most of the concepts, puts together an adequate argument, identifies some weaknesses of their argument, and communicates most results clearly to others.\n70%-79%: Passing effort. Student has misunderstanding of concepts in several areas, has some trouble putting results together in a cogent argument, and communication of results is sometimes unclear.\n60%-69%: Struggling effort. Student is making some effort, but has misunderstanding of many concepts and is unable to put together a cogent argument. Communication of results is unclear.\nBelow 60%: Student is not making a sufficient effort.",
    "crumbs": [
      "Project",
      "Description"
    ]
  },
  {
    "objectID": "project/description.html#late-work-policy",
    "href": "project/description.html#late-work-policy",
    "title": "Project description",
    "section": "Late work policy",
    "text": "Late work policy\nThere is no late work accepted on this project. Be sure to turn in your work early to avoid any technological mishaps.",
    "crumbs": [
      "Project",
      "Description"
    ]
  },
  {
    "objectID": "ae/ae-06-majors-tidy-A.html",
    "href": "ae/ae-06-majors-tidy-A.html",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as a reference only; it‚Äôs not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-06-majors-tidy-A.html#getting-started",
    "href": "ae/ae-06-majors-tidy-A.html#getting-started",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\n\nData\nThe data are available in the data folder.\n\nstatsci &lt;- read_csv(\"data/statsci.csv\")\n\nRows: 4 Columns: 15\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr  (1): degree\ndbl (14): 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, ...\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAnd let‚Äôs take a look at the data.\n\nstatsci\n\n# A tibble: 4 √ó 15\n  degree   `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` `2019` `2020`\n  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Statist‚Ä¶     NA      1     NA     NA      4      4      1     NA     NA      1\n2 Statist‚Ä¶      2      2      4      1      3      6      3      4      4      1\n3 Statist‚Ä¶      2      6      1     NA      5      6      6      8      8     17\n4 Statist‚Ä¶      5      9      4     13     10     17     24     21     26     27\n# ‚Ñπ 4 more variables: `2021` &lt;dbl&gt;, `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;, `2024` &lt;dbl&gt;"
  },
  {
    "objectID": "ae/ae-06-majors-tidy-A.html#pivoting",
    "href": "ae/ae-06-majors-tidy-A.html#pivoting",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "Pivoting",
    "text": "Pivoting\nPivot the statsci data frame longer such that\n\neach row represents a degree type / year combination,\n\nyear and number of graduates for that year are columns,\n\nyear is numerical,\n\nNAs in counts are replaced with 0s,\n\ndegree_type has levels BS, BS2, AB, and AB2 (in this order), and\nthe resulting data frame is saved as statsci_longer.\n\nReview the code below with your neighbor and come up with at least one question about the code.\n\nstatsci_longer &lt;- statsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n)) |&gt;\n  separate(degree, sep = \" \\\\(\", into = c(\"major\", \"degree_type\")) |&gt;\n  mutate(\n    degree_type = str_remove(degree_type, \"\\\\)\"),\n    degree_type = fct_relevel(degree_type, \"BS\", \"BS2\", \"AB\", \"AB2\")\n  )\n\nstatsci_longer\n\n# A tibble: 56 √ó 4\n   major               degree_type  year     n\n   &lt;chr&gt;               &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt;\n 1 Statistical Science AB2          2011     0\n 2 Statistical Science AB2          2012     1\n 3 Statistical Science AB2          2013     0\n 4 Statistical Science AB2          2014     0\n 5 Statistical Science AB2          2015     4\n 6 Statistical Science AB2          2016     4\n 7 Statistical Science AB2          2017     1\n 8 Statistical Science AB2          2018     0\n 9 Statistical Science AB2          2019     0\n10 Statistical Science AB2          2020     1\n# ‚Ñπ 46 more rows"
  },
  {
    "objectID": "ae/ae-06-majors-tidy-A.html#plotting",
    "href": "ae/ae-06-majors-tidy-A.html#plotting",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "Plotting",
    "text": "Plotting\nStep 1: Basics\nLet‚Äôs start with a basic plot, nothing too fancy! Create a line plot of number of majors vs.¬†year, where lines are colored by degree type, and the data are also represented as points on the lines.\n\nggplot(statsci_longer, aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\n\n\nWhat aspects of the plot need to be updated to go from the draft you created above to the goal plot from the slides.\n\nx-axis scale: need to go from 2012 to 2024 in increments of 2 years\nline colors\naxis labels: title, subtitle, x, y, caption\ntheme\nlegend position and border\nStep 2: Scales\nUpdate x-axis scale such that the years displayed go from 2012 to 2024 in increments of 2 years. Do this by adding on to your ggplot call from earlier.\n\nggplot(statsci_longer, aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2))\n\n\n\n\n\n\n\nStep 3: Colors\nUpdate line colors using the following level / color assignments. Once again, do this by adding on to your ggplot call from earlier.\n\n‚ÄúBS‚Äù = ‚Äúcadetblue4‚Äù\n‚ÄúBS2‚Äù = ‚Äúcadetblue3‚Äù\n‚ÄúAB‚Äù = ‚Äúlightgoldenrod4‚Äù\n‚ÄúAB2‚Äù = ‚Äúlightgoldenrod3‚Äù\n\nNote: A handy reference for named colors in R is http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf, though you can use HEX color codes as well.\n\nggplot(statsci_longer, aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  )\n\n\n\n\n\n\n\nStep 4: Labels and themes\nUpdate the plot labels (title, subtitle, x, y, and caption) and use theme_minimal(). Once again, do this by adding on to your ggplot call from earlier. Note: The link in the caption is https://registrar.duke.edu/registration/enrollment-statistics.\n\nggplot(statsci_longer, aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  ) +\n  labs(\n    x = \"Graduation year\",\n    y = \"Number of majors graduating\",\n    color = \"Degree type\",\n    title = \"Statistical Science majors over the years\",\n    subtitle = \"Academic years 2011 - 2024\",\n    caption = \"Source: Office of the University Registrar\\nhttps://registrar.duke.edu/registration/enrollment-statistics\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nStep 5: Legends and figure sizing via cell options\nFinally, adding to your pipeline you‚Äôve developed so far, move the legend into the plot, make its background white, and its border gray. Additionally, in the cell options, set\n\n\nout-width: 100% ‚Äì Output should span 100% of the width\n\nfig-width: 8 ‚Äì Figure output should have a width of 8 inches\n\nfig-asp: 0.5 ‚Äì Figure output should have an aspect ratio of 0.5, resulting in a height of 8 * 0.5 = 4 inches\n\n\nggplot(statsci_longer, aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  ) +\n  labs(\n    x = \"Graduation year\",\n    y = \"Number of majors graduating\",\n    color = \"Degree type\",\n    title = \"Statistical Science majors over the years\",\n    subtitle = \"Academic years 2011 - 2024\",\n    caption = \"Source: Office of the University Registrar\\nhttps://registrar.duke.edu/registration/enrollment-statistics\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.1, 0.7),\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )"
  },
  {
    "objectID": "ae/ae-06-majors-tidy-A.html#render-commit-and-push",
    "href": "ae/ae-06-majors-tidy-A.html#render-commit-and-push",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "Render, commit, and push",
    "text": "Render, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html",
    "href": "ae/ae-02-bechdel-dataviz-A.html",
    "title": "AE 02: Bechdel + data visualization",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as a reference only; it‚Äôs not designed to be an exhaustive key.\nIn this mini-analysis, we use the data from the FiveThirtyEight story ‚ÄúThe Dollar-And-Cents Case Against Hollywood‚Äôs Exclusion of Women.‚Äù\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html#getting-started",
    "href": "ae/ae-02-bechdel-dataviz-A.html#getting-started",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\n\nData\nThe data are stored as a CSV (comma-separated values) file in your repository‚Äôs data folder. Let‚Äôs read it from there and save it as an object called bechdel.\n\nbechdel &lt;- read_csv(\"data/bechdel.csv\")\n\nGet to know the data\nWe can use the glimpse() function to get an overview (or ‚Äúglimpse‚Äù) of the data.\n\nglimpse(bechdel)\n\nRows: 1,615\nColumns: 7\n$ title       &lt;chr&gt; \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"42‚Ä¶\n$ year        &lt;dbl&gt; 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013‚Ä¶\n$ gross_2013  &lt;dbl&gt; 67878146, 55078343, 211714070, 208105475, 190040426, 18416‚Ä¶\n$ budget_2013 &lt;dbl&gt; 13000000, 45658735, 20000000, 61000000, 40000000, 22500000‚Ä¶\n$ roi         &lt;dbl&gt; 5.221396, 1.206305, 10.585703, 3.411565, 4.751011, 0.81851‚Ä¶\n$ binary      &lt;chr&gt; \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"P‚Ä¶\n$ clean_test  &lt;chr&gt; \"notalk\", \"ok\", \"notalk\", \"notalk\", \"men\", \"men\", \"notalk\"‚Ä¶\n\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a movie.\n\nHow many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are 7 columns in the dataset.\nVariables of interest\nThe variables we‚Äôll focus on are the following:\n\n\nroi: Return on investment, calculated as the ratio of the gross to budget.\n\nclean_test: Bechdel test result:\n\n\nok = passes test\ndubious\n\nmen = women only talk about men\n\nnotalk = women don‚Äôt talk to each other\n\nnowomen = fewer than two women\n\n\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nWe will also use the year of release in data prep and title of movie to take a deeper look at some outliers.\nThere are a few other variables in the dataset, but we won‚Äôt be using them in this analysis."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html#bechdel-test-results",
    "href": "ae/ae-02-bechdel-dataviz-A.html#bechdel-test-results",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Bechdel test results",
    "text": "Bechdel test results\nVisualizing data with ggplot2\n\nggplot2 is the package and ggplot() is the function in this package that is used to create a plot.\n\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel.\n\n\nggplot(data = bechdel)\n\n\n\n\n\n\n\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\nggplot(data = bechdel, mapping = aes(x = clean_test))\n\n\n\n\n\n\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you‚Äôll often see this written as:\n\nggplot(bechdel, aes(x = clean_test))\n\n\n\n\n\n\n\nNote that the result is exactly the same.\n\nThe geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we use geom_point which creates a plot where each observation is represented by a point.\n\n\nggplot(bechdel, aes(x = clean_test)) +\n  geom_bar()\n\n\n\n\n\n\n\nWhat types of movies are more common, those that pass or do not pass the test?\nRender, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html#return-on-investment",
    "href": "ae/ae-02-bechdel-dataviz-A.html#return-on-investment",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Return-on-investment",
    "text": "Return-on-investment\nLet‚Äôs take a look at return-on-investment (ROI) for movies that do and do not pass the Bechdel test.\nStep 1 - Your turn\nCreate side-by-side box plots of roi by clean_test where the boxes are colored by binary.\n\nggplot(bechdel, aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel result\",\n    y = \"Return-on-investment (gross / budget)\",\n    color = \"Bechdel\\nresult\"\n  )\n\nWarning: Removed 15 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nWhat are those movies with very high returns on investment?\n\nbechdel |&gt;\n  filter(roi &gt; 400) |&gt;\n  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n# A tibble: 3 √ó 6\n  title                     roi budget_2013 gross_2013  year clean_test\n  &lt;chr&gt;                   &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 Paranormal Activity      671.      505595  339424558  2007 dubious   \n2 The Blair Witch Project  648.      839077  543776715  1999 ok        \n3 El Mariachi              583.       11622    6778946  1992 nowomen   \n\n\nStep 2 - Demo\nExpand on your plot from the previous step to zoom in on movies with roi &lt; ___ to get a better view of how the medians across the categories compare.\n\nggplot(bechdel, aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel result\",\n    y = \"Return-on-investment (gross / budget)\",\n    color = \"Bechdel\\nresult\"\n  ) +\n  coord_cartesian(ylim = c(0, 16))\n\nWarning: Removed 15 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?\nRender, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II.html",
    "href": "ae/ae-05-gerrymander-explore-II.html",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "",
    "text": "We‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\nlibrary(usdata)\nlibrary(ggbeeswarm)\n\n\nThe data are availale in the usdata package.\n\nglimpse(gerrymander)\n\nRows: 435\nColumns: 12\n$ district   &lt;chr&gt; \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-05\", \"AL-0‚Ä¶\n$ last_name  &lt;chr&gt; \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"Brooks\", \"‚Ä¶\n$ first_name &lt;chr&gt; \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo\", \"Gary\",‚Ä¶\n$ party16    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ clinton16  &lt;dbl&gt; 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 30.2, 41.7,‚Ä¶\n$ trump16    &lt;dbl&gt; 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 65.0, 52.4,‚Ä¶\n$ dem16      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ state      &lt;chr&gt; \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AR\", \"AR\",‚Ä¶\n$ party18    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ dem18      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ flip18     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,‚Ä¶\n$ gerry      &lt;fct&gt; mid, high, high, high, high, high, high, high, mid, mid, mi‚Ä¶"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II.html#getting-started",
    "href": "ae/ae-05-gerrymander-explore-II.html#getting-started",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "",
    "text": "We‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\nlibrary(usdata)\nlibrary(ggbeeswarm)\n\n\nThe data are availale in the usdata package.\n\nglimpse(gerrymander)\n\nRows: 435\nColumns: 12\n$ district   &lt;chr&gt; \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-05\", \"AL-0‚Ä¶\n$ last_name  &lt;chr&gt; \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"Brooks\", \"‚Ä¶\n$ first_name &lt;chr&gt; \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo\", \"Gary\",‚Ä¶\n$ party16    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ clinton16  &lt;dbl&gt; 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 30.2, 41.7,‚Ä¶\n$ trump16    &lt;dbl&gt; 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 65.0, 52.4,‚Ä¶\n$ dem16      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ state      &lt;chr&gt; \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AR\", \"AR\",‚Ä¶\n$ party18    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ dem18      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ flip18     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,‚Ä¶\n$ gerry      &lt;fct&gt; mid, high, high, high, high, high, high, high, mid, mid, mi‚Ä¶"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II.html#congressional-districts-per-state",
    "href": "ae/ae-05-gerrymander-explore-II.html#congressional-districts-per-state",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Congressional districts per state",
    "text": "Congressional districts per state\nWhich state has the most congressional districts? How many congressional districts are there in this state?\nAdd your response here.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II.html#gerrymandering-and-flipping",
    "href": "ae/ae-05-gerrymander-explore-II.html#gerrymandering-and-flipping",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Gerrymandering and flipping",
    "text": "Gerrymandering and flipping\nIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering? Support your answer with a visualization and summary statistics.\nAdd your response here.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II.html#aesthetic-mappings",
    "href": "ae/ae-05-gerrymander-explore-II.html#aesthetic-mappings",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Aesthetic mappings",
    "text": "Aesthetic mappings\nRecreate the following visualization, and then improve it.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II.html#render-commit-and-push",
    "href": "ae/ae-05-gerrymander-explore-II.html#render-commit-and-push",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Render, commit, and push",
    "text": "Render, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-06-majors-tidy.html",
    "href": "ae/ae-06-majors-tidy.html",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "",
    "text": "We‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\n\n\nThe data are available in the data folder.\n\nstatsci &lt;- read_csv(\"data/statsci.csv\")\n\nRows: 4 Columns: 15\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr  (1): degree\ndbl (14): 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, ...\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAnd let‚Äôs take a look at the data.\n\nstatsci\n\n# A tibble: 4 √ó 15\n  degree   `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` `2019` `2020`\n  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Statist‚Ä¶     NA      1     NA     NA      4      4      1     NA     NA      1\n2 Statist‚Ä¶      2      2      4      1      3      6      3      4      4      1\n3 Statist‚Ä¶      2      6      1     NA      5      6      6      8      8     17\n4 Statist‚Ä¶      5      9      4     13     10     17     24     21     26     27\n# ‚Ñπ 4 more variables: `2021` &lt;dbl&gt;, `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;, `2024` &lt;dbl&gt;"
  },
  {
    "objectID": "ae/ae-06-majors-tidy.html#getting-started",
    "href": "ae/ae-06-majors-tidy.html#getting-started",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "",
    "text": "We‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\n\n\nThe data are available in the data folder.\n\nstatsci &lt;- read_csv(\"data/statsci.csv\")\n\nRows: 4 Columns: 15\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr  (1): degree\ndbl (14): 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, ...\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAnd let‚Äôs take a look at the data.\n\nstatsci\n\n# A tibble: 4 √ó 15\n  degree   `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` `2019` `2020`\n  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Statist‚Ä¶     NA      1     NA     NA      4      4      1     NA     NA      1\n2 Statist‚Ä¶      2      2      4      1      3      6      3      4      4      1\n3 Statist‚Ä¶      2      6      1     NA      5      6      6      8      8     17\n4 Statist‚Ä¶      5      9      4     13     10     17     24     21     26     27\n# ‚Ñπ 4 more variables: `2021` &lt;dbl&gt;, `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;, `2024` &lt;dbl&gt;"
  },
  {
    "objectID": "ae/ae-06-majors-tidy.html#pivoting",
    "href": "ae/ae-06-majors-tidy.html#pivoting",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "Pivoting",
    "text": "Pivoting\nPivot the statsci data frame longer such that\n\neach row represents a degree type / year combination,\n\nyear and number of graduates for that year are columns,\n\nyear is numerical,\n\nNAs in counts are replaced with 0s,\n\ndegree_type has levels BS, BS2, AB, and AB2 (in this order), and\nthe resulting data frame is saved as statsci_longer.\n\nReview the code below with your neighbor and come up with at least one question about the code.\n\nstatsci_longer &lt;- statsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n)) |&gt;\n  separate(degree, sep = \" \\\\(\", into = c(\"major\", \"degree_type\")) |&gt;\n  mutate(\n    degree_type = str_remove(degree_type, \"\\\\)\"),\n    degree_type = fct_relevel(degree_type, \"BS\", \"BS2\", \"AB\", \"AB2\")\n  )\n\nstatsci_longer\n\n# A tibble: 56 √ó 4\n   major               degree_type  year     n\n   &lt;chr&gt;               &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt;\n 1 Statistical Science AB2          2011     0\n 2 Statistical Science AB2          2012     1\n 3 Statistical Science AB2          2013     0\n 4 Statistical Science AB2          2014     0\n 5 Statistical Science AB2          2015     4\n 6 Statistical Science AB2          2016     4\n 7 Statistical Science AB2          2017     1\n 8 Statistical Science AB2          2018     0\n 9 Statistical Science AB2          2019     0\n10 Statistical Science AB2          2020     1\n# ‚Ñπ 46 more rows"
  },
  {
    "objectID": "ae/ae-06-majors-tidy.html#plotting",
    "href": "ae/ae-06-majors-tidy.html#plotting",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "Plotting",
    "text": "Plotting\nStep 1: Basics\nLet‚Äôs start with a basic plot, nothing too fancy! Create a line plot of number of majors vs.¬†year, where lines are colored by degree type, and the data are also represented as points on the lines.\n\n# add code here\n\nWhat aspects of the plot need to be updated to go from the draft you created above to the goal plot from the slides.\nAdd response here.\nStep 2: Scales\nUpdate x-axis scale such that the years displayed go from 2012 to 2024 in increments of 2 years. Do this by adding on to your ggplot call from earlier.\n\n# add code here\n\nStep 3: Colors\nUpdate line colors using the following level / color assignments. Once again, do this by adding on to your ggplot call from earlier.\n\n‚ÄúBS‚Äù = ‚Äúcadetblue4‚Äù\n‚ÄúBS2‚Äù = ‚Äúcadetblue3‚Äù\n‚ÄúAB‚Äù = ‚Äúlightgoldenrod4‚Äù\n‚ÄúAB2‚Äù = ‚Äúlightgoldenrod3‚Äù\n\nNote: A handy reference for named colors in R is http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf, though you can use HEX color codes as well.\n\n# add code here\n\nStep 4: Labels and themes\nUpdate the plot labels (title, subtitle, x, y, and caption) and use theme_minimal(). Once again, do this by adding on to your ggplot call from earlier. Note: The link in the caption is https://registrar.duke.edu/registration/enrollment-statistics.\n\n# add code here\n\nStep 5: Legends and figure sizing via cell options\nFinally, adding to your pipeline you‚Äôve developed so far, move the legend into the plot, make its background white, and its border gray. Additionally, in the cell options, set\n\n\nout-width: 100% ‚Äì Output should span 100% of the width\n\nfig-width: 8 ‚Äì Figure output should have a width of 8 inches\n\nfig-asp: 0.5 ‚Äì Figure output should have an aspect ratio of 0.5, resulting in a height of 8 * 0.5 = 4 inches\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-06-majors-tidy.html#render-commit-and-push",
    "href": "ae/ae-06-majors-tidy.html#render-commit-and-push",
    "title": "AE 06: StatSci majors + data tidying",
    "section": "Render, commit, and push",
    "text": "Render, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-03-bechdel-data-viz-transform-A.html",
    "href": "ae/ae-03-bechdel-data-viz-transform-A.html",
    "title": "AE 03: Bechdel + data visualization and transformation",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as a reference only; it‚Äôs not designed to be an exhaustive key.\nIn this mini-analysis, we‚Äôll continue our exploration of the bechdel dataset, which contains information on whether the movies in the data pass the Bechdel test (a measure of the representation of women in fiction)."
  },
  {
    "objectID": "ae/ae-03-bechdel-data-viz-transform-A.html#getting-started",
    "href": "ae/ae-03-bechdel-data-viz-transform-A.html#getting-started",
    "title": "AE 03: Bechdel + data visualization and transformation",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\n\nData\nThe data are stored as a CSV (comma-separated values) file in your repository‚Äôs data folder. Let‚Äôs read it from there and save it as an object called bechdel.\n\nbechdel &lt;- read_csv(\"data/bechdel.csv\")\n\nGet to know the data\nWe can use the glimpse() function to get an overview (or ‚Äúglimpse‚Äù) of the data.\n\nglimpse(bechdel)\n\nRows: 1,615\nColumns: 7\n$ title       &lt;chr&gt; \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"42‚Ä¶\n$ year        &lt;dbl&gt; 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013‚Ä¶\n$ gross_2013  &lt;dbl&gt; 67878146, 55078343, 211714070, 208105475, 190040426, 18416‚Ä¶\n$ budget_2013 &lt;dbl&gt; 13000000, 45658735, 20000000, 61000000, 40000000, 22500000‚Ä¶\n$ roi         &lt;dbl&gt; 5.221396, 1.206305, 10.585703, 3.411565, 4.751011, 0.81851‚Ä¶\n$ binary      &lt;chr&gt; \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"P‚Ä¶\n$ clean_test  &lt;chr&gt; \"notalk\", \"ok\", \"notalk\", \"notalk\", \"men\", \"men\", \"notalk\"‚Ä¶\n\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a movie.\n\nHow many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are 7 columns in the dataset."
  },
  {
    "objectID": "ae/ae-03-bechdel-data-viz-transform-A.html#bechdel-test-results",
    "href": "ae/ae-03-bechdel-data-viz-transform-A.html#bechdel-test-results",
    "title": "AE 03: Bechdel + data visualization and transformation",
    "section": "Bechdel test results",
    "text": "Bechdel test results\nVisualizing data with ggplot2\n\nCreate a bar plot of the clean_test variable:\n\n\nok = passes test\ndubious\n\nmen = women only talk about men\n\nnotalk = women don‚Äôt talk to each other\n\nnowomen = fewer than two women\n\n\nggplot(bechdel, aes(x = clean_test)) +\n  geom_bar() +\n  labs(\n    x = \"Bechdel test result\",\n    y = \"Count\"\n  )\n\n\n\n\n\n\n\nWhat types of movies are more common, those that pass or do not pass the test?\nIf we consider ‚Äúdubious‚Äù to be no, movies that don‚Äôt pass the test are more common.\nRender, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-03-bechdel-data-viz-transform-A.html#return-on-investment",
    "href": "ae/ae-03-bechdel-data-viz-transform-A.html#return-on-investment",
    "title": "AE 03: Bechdel + data visualization and transformation",
    "section": "Return-on-investment",
    "text": "Return-on-investment\nLet‚Äôs take a look at return-on-investment (ROI) for movies that do and do not pass the Bechdel test.\nStep 1 - Your turn\nCreate side-by-side box plots of roi by clean_test where the boxes are colored by binary.\n\nggplot(bechdel, aes(x = roi, y = clean_test, color = binary)) +\n  geom_boxplot() +\n  labs(\n    x = \"Return on investment\",\n    y = \"Bechdel test result\",\n    color = \"Pass / Fail\"\n  )\n\n\n\n\n\n\n\nStep 2 - Demo\nWhat are the movies with very high returns on investment?\n\nbechdel |&gt;\n  filter(roi &gt; 400)\n\n# A tibble: 3 √ó 7\n  title                    year gross_2013 budget_2013   roi binary clean_test\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;     \n1 Paranormal Activity      2007  339424558      505595  671. FAIL   dubious   \n2 The Blair Witch Project  1999  543776715      839077  648. PASS   ok        \n3 El Mariachi              1992    6778946       11622  583. FAIL   nowomen   \n\n\nStep 3 - Demo\nExpand on your plot from the previous step to zoom in on movies with roi &lt; ___ to get a better view of how the medians across the categories compare.\n\nggplot(bechdel, aes(x = roi, y = clean_test, color = binary)) +\n  geom_boxplot() +\n  labs(\n    x = \"Return on investment\",\n    y = \"Bechdel test result\",\n    color = \"Pass / Fail\"\n  ) +\n  coord_cartesian(xlim = c(0, 16))\n\nWarning: Removed 15 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?\nMovies that pass the Bechdel test typically have an higher return-on-investment than those that do not.\nRender, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-10-chronicle-scrape.html",
    "href": "ae/ae-10-chronicle-scrape.html",
    "title": "AE 10: Opinion articles in The Chronicle",
    "section": "",
    "text": "This will be done in the chronicle-scrape.R R script. Save the resulting data frame in the data folder."
  },
  {
    "objectID": "ae/ae-10-chronicle-scrape.html#part-1---data-scraping",
    "href": "ae/ae-10-chronicle-scrape.html#part-1---data-scraping",
    "title": "AE 10: Opinion articles in The Chronicle",
    "section": "",
    "text": "This will be done in the chronicle-scrape.R R script. Save the resulting data frame in the data folder."
  },
  {
    "objectID": "ae/ae-10-chronicle-scrape.html#part-2---data-analysis",
    "href": "ae/ae-10-chronicle-scrape.html#part-2---data-analysis",
    "title": "AE 10: Opinion articles in The Chronicle",
    "section": "Part 2 - Data analysis",
    "text": "Part 2 - Data analysis\nLet‚Äôs start by loading the packages we will need:\n\nlibrary(tidyverse)\n\n\nLoad the data you saved into the data folder and name it chronicle.\n\n\n# add code here\n\n\nWho are the most prolific authors of the 100 most recent opinion articles in The Chronicle?\n\n\n# add code here\n\n\nDraw a line plot of the number of opinion articles published per day in The Chronicle.\n\n\n# add code here\n\n\nWhat percent of the most recent 100 opinion articles in The Chronicle mention ‚Äúclimate‚Äù in their title?\n\n\n# add code here\n\n\nWhat percent of the most recent 100 opinion articles in The Chronicle mention ‚Äúclimate‚Äù in their title or abstract?\n\n\n# add code here\n\n\nCome up with another question and try to answer it using the data.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-07-taxes-join.html",
    "href": "ae/ae-07-taxes-join.html",
    "title": "AE 07: Sales taxes + data joining",
    "section": "",
    "text": "We‚Äôll use the tidyverse package for this analysis.\n\n# add code here\n\n\nThe data are available in the data folder:\n\nsales-taxes.csv\nus-regions.csv\n\n\n# add code here\n\nAnd let‚Äôs take a look at the data.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-07-taxes-join.html#getting-started",
    "href": "ae/ae-07-taxes-join.html#getting-started",
    "title": "AE 07: Sales taxes + data joining",
    "section": "",
    "text": "We‚Äôll use the tidyverse package for this analysis.\n\n# add code here\n\n\nThe data are available in the data folder:\n\nsales-taxes.csv\nus-regions.csv\n\n\n# add code here\n\nAnd let‚Äôs take a look at the data.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-07-taxes-join.html#joining",
    "href": "ae/ae-07-taxes-join.html#joining",
    "title": "AE 07: Sales taxes + data joining",
    "section": "Joining",
    "text": "Joining\nJoin the sales tax data with region data and save the joined data frame as a new data frame, not overwriting either data frame that goes into the join.\n\n# add code here\n\nCalculate the average sales tax of states in each region. What is surprising in the output?\n\n# add code here\n\nIdentify the state with NA for region.\n\n# add code here\n\nApply a fix for the NA in region, and calculate the mean sales taxes for regions again. Display the results in ascending order of mean sales tax.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-07-taxes-join.html#render-commit-and-push",
    "href": "ae/ae-07-taxes-join.html#render-commit-and-push",
    "title": "AE 07: Sales taxes + data joining",
    "section": "Render, commit, and push",
    "text": "Render, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors.html",
    "href": "ae/ae-08-durham-climate-factors.html",
    "title": "AE 08: Durham climate + factors",
    "section": "",
    "text": "We will use the tidyverse package in this application exercise.\n\nlibrary(tidyverse)\n\n\nThe data come from https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192 and are stored as durham-climate.csv in the data folder.\n\ndurham_climate &lt;- read_csv(\"data/durham-climate.csv\")\n\nAnd let‚Äôs take a look at the data.\n\ndurham_climate\n\n# A tibble: 12 √ó 4\n   month     avg_high_f avg_low_f precipitation_in\n   &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;            &lt;dbl&gt;\n 1 January           49        28             4.45\n 2 February          53        29             3.7 \n 3 March             62        37             4.69\n 4 April             71        46             3.43\n 5 May               79        56             4.61\n 6 June              85        65             4.02\n 7 July              89        70             3.94\n 8 August            87        68             4.37\n 9 September         81        60             4.37\n10 October           71        47             3.7 \n11 November          62        37             3.39\n12 December          53        30             3.43"
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors.html#getting-started",
    "href": "ae/ae-08-durham-climate-factors.html#getting-started",
    "title": "AE 08: Durham climate + factors",
    "section": "",
    "text": "We will use the tidyverse package in this application exercise.\n\nlibrary(tidyverse)\n\n\nThe data come from https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192 and are stored as durham-climate.csv in the data folder.\n\ndurham_climate &lt;- read_csv(\"data/durham-climate.csv\")\n\nAnd let‚Äôs take a look at the data.\n\ndurham_climate\n\n# A tibble: 12 √ó 4\n   month     avg_high_f avg_low_f precipitation_in\n   &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;            &lt;dbl&gt;\n 1 January           49        28             4.45\n 2 February          53        29             3.7 \n 3 March             62        37             4.69\n 4 April             71        46             3.43\n 5 May               79        56             4.61\n 6 June              85        65             4.02\n 7 July              89        70             3.94\n 8 August            87        68             4.37\n 9 September         81        60             4.37\n10 October           71        47             3.7 \n11 November          62        37             3.39\n12 December          53        30             3.43"
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors.html#reorder",
    "href": "ae/ae-08-durham-climate-factors.html#reorder",
    "title": "AE 08: Durham climate + factors",
    "section": "Reorder",
    "text": "Reorder\nWhat‚Äôs wrong with the following plot?\nAdd your response here.\n\nggplot(\n  durham_climate, \n  aes(x = month, y = avg_high_f, group = 1)\n  ) +\n  geom_line() +\n  geom_point(\n    shape = \"circle filled\", size = 2,\n    color = \"black\", fill = \"white\", stroke = 1\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average high temperature (F)\",\n    title = \"Durham climate\"\n  )\n\n\n\n\n\n\n\nFix the plot.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors.html#recode-and-reorder",
    "href": "ae/ae-08-durham-climate-factors.html#recode-and-reorder",
    "title": "AE 08: Durham climate + factors",
    "section": "Recode and reorder",
    "text": "Recode and reorder\nUpdate the plot above, coloring points based on season. Additionally:\n\nMake sure the legend is on top of the plot and the seasons appear in the legend in the order they appear in the plot (Winter, Spring, Summer, Fall).\n\nUse \"circle filled\" as the shape for points, set their size to 3 points, outline (stroke) to 1 point, and fill them in with the following colors:\n\nWinter: lightskyblue1\n\nSpring: chartreuse3\n\nSummer: gold2\n\nFall: lightsalmon4\n\n\n\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors.html#pivot",
    "href": "ae/ae-08-durham-climate-factors.html#pivot",
    "title": "AE 08: Durham climate + factors",
    "section": "Pivot",
    "text": "Pivot\nOverlay lines for both high and low temperatures on the same plot. Additionally, use different colors for the two lines ‚Äì a darker color for high and a lighter color for low temperatures.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II-A.html",
    "href": "ae/ae-05-gerrymander-explore-II-A.html",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as a reference only; it‚Äôs not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II-A.html#getting-started",
    "href": "ae/ae-05-gerrymander-explore-II-A.html#getting-started",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\nlibrary(usdata)\nlibrary(ggbeeswarm)\n\nData\nThe data are availale in the usdata package.\n\nglimpse(gerrymander)\n\nRows: 435\nColumns: 12\n$ district   &lt;chr&gt; \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-05\", \"AL-0‚Ä¶\n$ last_name  &lt;chr&gt; \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"Brooks\", \"‚Ä¶\n$ first_name &lt;chr&gt; \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo\", \"Gary\",‚Ä¶\n$ party16    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ clinton16  &lt;dbl&gt; 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 30.2, 41.7,‚Ä¶\n$ trump16    &lt;dbl&gt; 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 65.0, 52.4,‚Ä¶\n$ dem16      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ state      &lt;chr&gt; \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AR\", \"AR\",‚Ä¶\n$ party18    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ dem18      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ flip18     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,‚Ä¶\n$ gerry      &lt;fct&gt; mid, high, high, high, high, high, high, high, mid, mid, mi‚Ä¶"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II-A.html#congressional-districts-per-state",
    "href": "ae/ae-05-gerrymander-explore-II-A.html#congressional-districts-per-state",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Congressional districts per state",
    "text": "Congressional districts per state\nWhich state has the most congressional districts? How many congressional districts are there in this state?\n\ngerrymander |&gt;\n  count(state, sort = TRUE)\n\n# A tibble: 50 √ó 2\n   state     n\n   &lt;chr&gt; &lt;int&gt;\n 1 CA       53\n 2 TX       36\n 3 FL       27\n 4 NY       27\n 5 IL       18\n 6 PA       18\n 7 OH       16\n 8 GA       14\n 9 MI       14\n10 NC       13\n# ‚Ñπ 40 more rows"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II-A.html#gerrymandering-and-flipping",
    "href": "ae/ae-05-gerrymander-explore-II-A.html#gerrymandering-and-flipping",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Gerrymandering and flipping",
    "text": "Gerrymandering and flipping\nIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering? Support your answer with a visualization and summary statistics.\n\ngerrymander |&gt;\n  mutate(flip18 = as.factor(flip18)) |&gt;\n  ggplot(aes(x = gerry, fill = flip18)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\ngerrymander |&gt;\n  count(gerry, dem18) |&gt;\n  group_by(gerry) |&gt;\n  mutate(p = n / sum(n))\n\n# A tibble: 6 √ó 4\n# Groups:   gerry [3]\n  gerry dem18     n     p\n  &lt;fct&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;\n1 low       0    25 0.403\n2 low       1    37 0.597\n3 mid       0   131 0.485\n4 mid       1   139 0.515\n5 high      0    52 0.505\n6 high      1    51 0.495"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II-A.html#aesthetic-mappings",
    "href": "ae/ae-05-gerrymander-explore-II-A.html#aesthetic-mappings",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Aesthetic mappings",
    "text": "Aesthetic mappings\nRecreate the following visualization, and then improve it.\n\n\nggplot(gerrymander, aes(x = gerry, y = clinton16)) +\n  geom_beeswarm(color = \"gray50\", alpha = 0.5) +\n  geom_boxplot(aes(color = gerry), alpha = 0.5) +\n  theme_minimal()"
  },
  {
    "objectID": "ae/ae-05-gerrymander-explore-II-A.html#render-commit-and-push",
    "href": "ae/ae-05-gerrymander-explore-II-A.html#render-commit-and-push",
    "title": "AE 05: Gerrymandering + data exploration II",
    "section": "Render, commit, and push",
    "text": "Render, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-07-taxes-join-A.html",
    "href": "ae/ae-07-taxes-join-A.html",
    "title": "AE 07: Sales taxes + data joining",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as a reference only; it‚Äôs not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-07-taxes-join-A.html#getting-started",
    "href": "ae/ae-07-taxes-join-A.html#getting-started",
    "title": "AE 07: Sales taxes + data joining",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\n\nData\nThe data are available in the data folder.\n\nsales_taxes &lt;- read_csv(\"data/sales-taxes.csv\")\n\nRows: 51 Columns: 5\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (1): state\ndbl (4): state_tax_rate, avg_local_tax_rate, combined_rate, max_local_tax_rate\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nus_regions &lt;- read_csv(\"data/us-regions.csv\")\n\nRows: 50 Columns: 2\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (2): state_name, region\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAnd let‚Äôs take a look at the data.\n\nglimpse(sales_taxes)\n\nRows: 51\nColumns: 5\n$ state              &lt;chr&gt; \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"Califo‚Ä¶\n$ state_tax_rate     &lt;dbl&gt; 0.0400, 0.0000, 0.0560, 0.0650, 0.0725, 0.0290, 0.0‚Ä¶\n$ avg_local_tax_rate &lt;dbl&gt; 0.0529, 0.0182, 0.0278, 0.0295, 0.0160, 0.0491, 0.0‚Ä¶\n$ combined_rate      &lt;dbl&gt; 0.0929, 0.0182, 0.0838, 0.0945, 0.0885, 0.0781, 0.0‚Ä¶\n$ max_local_tax_rate &lt;dbl&gt; 0.0750, 0.0785, 0.0530, 0.0613, 0.0475, 0.0830, 0.0‚Ä¶\n\nglimpse(us_regions)\n\nRows: 50\nColumns: 2\n$ state_name &lt;chr&gt; \"Maine\", \"New Hampshire\", \"Vermont\", \"Massachusetts\", \"Rhod‚Ä¶\n$ region     &lt;chr&gt; \"Northeast\", \"Northeast\", \"Northeast\", \"Northeast\", \"Northe‚Ä¶"
  },
  {
    "objectID": "ae/ae-07-taxes-join-A.html#joining",
    "href": "ae/ae-07-taxes-join-A.html#joining",
    "title": "AE 07: Sales taxes + data joining",
    "section": "Joining",
    "text": "Joining\nJoin the sales tax data with region data and save the joined data frame as a new data frame, not overwriting either data frame that goes into the join.\n\nsales_taxes_regions &lt;- left_join(\n  sales_taxes, \n  us_regions, \n  by = join_by(state == state_name)\n)\n\nCalculate the average sales tax of states in each region. What is surprising in the output?\n\nsales_taxes_regions |&gt;\n  group_by(region) |&gt;\n  summarize(mean_state_tax = mean(state_tax_rate))\n\n# A tibble: 5 √ó 2\n  region    mean_state_tax\n  &lt;chr&gt;              &lt;dbl&gt;\n1 Midwest           0.0569\n2 Northeast         0.0530\n3 South             0.0523\n4 West              0.0416\n5 &lt;NA&gt;              0.06  \n\n\nIdentify the state with NA for region.\n\nsales_taxes_regions |&gt;\n  filter(is.na(region)) |&gt;\n  select(state, region)\n\n# A tibble: 1 √ó 2\n  state                region\n  &lt;chr&gt;                &lt;chr&gt; \n1 District of Columbia &lt;NA&gt;  \n\n\nApply a fix for the NA in region, and calculate the mean sales taxes for regions again. Display the results in ascending order of mean sales tax.\n\nsales_taxes_regions &lt;- sales_taxes_regions |&gt;\n  mutate(\n    region = if_else(state == \"District of Columbia\", \"Northeast\", region)\n  )\n\nsales_taxes_regions |&gt;\n  group_by(region) |&gt;\n  summarize(mean_state_tax = mean(state_tax_rate)) |&gt;\n  arrange(mean_state_tax)\n\n# A tibble: 4 √ó 2\n  region    mean_state_tax\n  &lt;chr&gt;              &lt;dbl&gt;\n1 West              0.0416\n2 South             0.0523\n3 Northeast         0.0537\n4 Midwest           0.0569"
  },
  {
    "objectID": "ae/ae-07-taxes-join-A.html#render-commit-and-push",
    "href": "ae/ae-07-taxes-join-A.html#render-commit-and-push",
    "title": "AE 07: Sales taxes + data joining",
    "section": "Render, commit, and push",
    "text": "Render, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "course-team.html",
    "href": "course-team.html",
    "title": "Teaching team",
    "section": "",
    "text": "Dr.¬†Mine √áetinkaya-Rundel (she/her) is Professor of the Practice and Director of Undergraduate Studies at the Department of Statistical Science at Duke University. Mine‚Äôs work focuses on innovation in statistics and data science pedagogy, with an emphasis on computing, reproducible research, student-centered learning, and open-source education, as well as pedagogical approaches for enhancing the retention of women and underrepresented minorities in STEM.\n\n\n\n\n\n\n\nOffice hours\nLocation\n\n\n\n\nTuesdays and Thursdays 1-1:30 pm (after class)\nBio Sci 111\n\n\nWednesdays 2-4 pm\nOld Chem 213",
    "crumbs": [
      "Course information",
      "Team"
    ]
  },
  {
    "objectID": "course-team.html#instructor",
    "href": "course-team.html#instructor",
    "title": "Teaching team",
    "section": "",
    "text": "Dr.¬†Mine √áetinkaya-Rundel (she/her) is Professor of the Practice and Director of Undergraduate Studies at the Department of Statistical Science at Duke University. Mine‚Äôs work focuses on innovation in statistics and data science pedagogy, with an emphasis on computing, reproducible research, student-centered learning, and open-source education, as well as pedagogical approaches for enhancing the retention of women and underrepresented minorities in STEM.\n\n\n\n\n\n\n\nOffice hours\nLocation\n\n\n\n\nTuesdays and Thursdays 1-1:30 pm (after class)\nBio Sci 111\n\n\nWednesdays 2-4 pm\nOld Chem 213",
    "crumbs": [
      "Course information",
      "Team"
    ]
  },
  {
    "objectID": "course-team.html#teaching-assistants",
    "href": "course-team.html#teaching-assistants",
    "title": "Teaching team",
    "section": "Teaching assistants",
    "text": "Teaching assistants\nEach TA holds office hours. Some TAs are also leaders or helpers for lab sections. Some TAs help out in lecture.\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Name\n        \n         \n          Role(s)\n        \n         \n          Section(s)\n        \n         \n          Office hours\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\nName\n\n\nRole(s)\n\n\nSection(s)\n\n\nOffice hours\n\n\n\n\n\n\n\n\n\nAnmol Sapru\n\n\nLab helper\n\n\nM 3:05 PM - 4:20 PM (Sec 8)\n\n\nüîó\n\n\n\n\n\n\n\nAurora Liu\n\n\nLab helper\n\n\nM 8:30 AM - 9:45 AM (Sec 1)\n\n\nüîó\n\n\n\n\n\n\n\nAvery Hodges\n\n\nLab leader\n\n\nM 11:45 AM - 1:00 PM (Sec 4)\n\n\nüîó\n\n\n\n\n\n\n\nDav King\n\n\nLab leader\n\n\nM 3:05 PM - 4:20 PM (Sec 8)\n\n\nüîó\n\n\n\n\n\n\n\nDomenic Fenoglio\n\n\nLab leader\n\n\nM 1:25 PM - 2:40 PM (Sec 7)\n\n\nüîó\n\n\n\n\n\n\n\nEmily Jensen\n\n\nLab leader\n\n\nM 1:25 PM - 2:40 PM (Sec 6)\n\n\nüîó\n\n\n\n\n\n\n\nFederico Arboleda\n\n\nLab helper\n\n\nM 1:25 PM - 2:40 PM (Sec 7)\n\n\nüîó\n\n\n\n\n\n\n\nGrade Rade\n\n\nLab helper\n\n\nM 11:45 AM - 1:00 PM (Sec 4)\n\n\nüîó\n\n\n\n\n\n\n\nHyunjin Lee\n\n\nLab helper\n\n\nM 3:05 PM - 4:20 PM (Sec 9)\n\n\nüîó\n\n\n\n\n\n\n\nJanice Kim\n\n\nLab helper, Lecture helper\n\n\nM 4:40 PM - 5:55 PM (Sec 10)\n\n\nüîó\n\n\n\n\n\n\n\nJasmine Wang\n\n\nLab leader\n\n\nM 10:05 AM - 11:20 AM (Sec 2)\n\n\nüîó\n\n\n\n\n\n\n\nJohn Zito\n\n\nLab leader\n\n\nM 3:05 PM - 4:20 PM (Sec 9)M 4:40 PM - 5:55 PM (Sec 10)\n\n\nüîó\n\n\n\n\n\n\n\nJonathan Lin\n\n\nLab helper\n\n\nM 10:05 AM - 11:20 AM (Sec 3)\n\n\nüîó\n\n\n\n\n\n\n\nKareena Legare\n\n\nLab helper\n\n\nM 1:25 PM - 2:40 PM (Sec 6)\n\n\nüîó\n\n\n\n\n\n\n\nLiane Ma\n\n\n¬†\n\n\n\n\n\nüîó\n\n\n\n\n\n\n\nLynn Kremers\n\n\nLab helper\n\n\nM 11:45 AM - 1:00 PM (Sec 5)\n\n\nüîó\n\n\n\n\n\n\n\nMarie Neubrander\n\n\nHead TA, Lab leader\n\n\nM 8:30 AM - 9:45 AM (Sec 1)M 10:05 AM - 11:20 AM (Sec 3)\n\n\nüîó\n\n\n\n\n\n\n\nNetra Mittal\n\n\nLab leader\n\n\nM 11:45 AM - 1:00 PM (Sec 5)\n\n\nüîó\n\n\n\n\n\n\n\nNoah Obuya\n\n\nLab helper\n\n\nM 10:05 AM - 11:20 AM (Sec 2)\n\n\nüîó\n\n\n\n\n\n\n\nSarah Wu\n\n\nLecture helper\n\n\n\n\n\nüîó\n\n\n\n\n\n\n\nSonya Eason\n\n\n¬†\n\n\n\n\n\nüîó\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Course information",
      "Team"
    ]
  },
  {
    "objectID": "course-team.html#course-coordinator",
    "href": "course-team.html#course-coordinator",
    "title": "Teaching team",
    "section": "Course coordinator",
    "text": "Course coordinator\n\nDr.¬†Mary Knox (she/her) is the course coordinator for this course. You can contact her (at mary.knox@duke.edu) with any questions regarding accommodations, missed work, extensions, etc., and registration.",
    "crumbs": [
      "Course information",
      "Team"
    ]
  },
  {
    "objectID": "coding-principles-oh.html",
    "href": "coding-principles-oh.html",
    "title": "Intro to Coding Principles",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#definition",
    "href": "coding-principles-oh.html#definition",
    "title": "Intro to Coding Principles",
    "section": "Definition",
    "text": "Definition\nSo what even is a variable, in the first place? There are many possible definitions:\n\nAnything you assign!\nPractically speaking, variables are a way for you to store data without having to type it out every time.\nThey allow you to manipulate data with the help of pre-built functions (more on that later).\nThey can also be changed - hence the name ‚Äúvariable‚Äù.\n\nWhat are some examples of variables?\n\nThe simplest is a single value - like in math. I could say ‚Äúx = 10‚Äù.\nIt might also be a vector - essentially a list of values. For example, I might just store every name in this class in a vector.\nMost frequently, your variables will be your entire data frames.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#assignment-saving",
    "href": "coding-principles-oh.html#assignment-saving",
    "title": "Intro to Coding Principles",
    "section": "Assignment & Saving",
    "text": "Assignment & Saving\nOk, these seem pretty useful - so how do we use them? In math and most programming languages, you use the ‚Äú=‚Äù operator. This is also possible to do in R:\n\nx = 10\nx\n\n[1] 10\n\n\nHowever, in R, we prefer to use the ‚Äú&lt;-‚Äù operator, to avoid confusion between variable assignment and function arguments. Here‚Äôs how that looks:\n\ny &lt;- 15\ny\n\n[1] 15\n\n\nSaving Changes\nSuppose you run a function on a variable. By default, R will show you the output of this function, but it will not actually modify your variable. For example, let‚Äôs look at the midwest data set:\n\nmidwest\n\n# A tibble: 437 √ó 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN‚Ä¶ IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA‚Ä¶ IL    0.058   173025      2983.   146506    16559           331\n# ‚Ñπ 427 more rows\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow, let‚Äôs run a function that ‚Äúchanges‚Äù the data frame. We can use select() to look only at the county column:\n\nmidwest |&gt;\n  select(county)\n\n# A tibble: 437 √ó 1\n   county   \n   &lt;chr&gt;    \n 1 ADAMS    \n 2 ALEXANDER\n 3 BOND     \n 4 BOONE    \n 5 BROWN    \n 6 BUREAU   \n 7 CALHOUN  \n 8 CARROLL  \n 9 CASS     \n10 CHAMPAIGN\n# ‚Ñπ 427 more rows\n\n\nCool change! So, just to make sure, let‚Äôs look at the midwest data frame one more time.\n\nmidwest\n\n# A tibble: 437 √ó 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN‚Ä¶ IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA‚Ä¶ IL    0.058   173025      2983.   146506    16559           331\n# ‚Ñπ 427 more rows\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow wait a minute - what happened here? I clearly told it to select the county column, and it did! So why is it that, when I went to look at the midwest data frame again, it had all of the columns, not just the one that I selected?\nThe answer is that we never saved midwest back to a variable! By default, R will show the output, but not modify the data frame unless I want it to. Let‚Äôs look at a couple ways we can do that:\n\nmidwest &lt;- midwest |&gt;\n  select(county)\n\nmidwest\n\n# A tibble: 437 √ó 1\n   county   \n   &lt;chr&gt;    \n 1 ADAMS    \n 2 ALEXANDER\n 3 BOND     \n 4 BOONE    \n 5 BROWN    \n 6 BUREAU   \n 7 CALHOUN  \n 8 CARROLL  \n 9 CASS     \n10 CHAMPAIGN\n# ‚Ñπ 427 more rows\n\n\nThe first option is to simply overwrite the variable. This is useful if you‚Äôre never going to need those data in their original form - it saves you some confusion in that case.\nHowever, what if later on I decide I did need those data after all? Perhaps I wanted population density data. I go to try and find this variable in the midwest data set, because that‚Äôs where I know it‚Äôs stored‚Ä¶\n\nmidwest |&gt;\n  select(popdensity)\n\nError in `select()`:\n! Can't select columns that don't exist.\n‚úñ Column `popdensity` doesn't exist.\n\n\n‚Ä¶but the variable is gone! This is a common point of confusion for students in STA 199, so it‚Äôs important to understand what you‚Äôre doing whenever you modify your data in-place like this - you‚Äôre overwriting the existing data.\nWe have a couple of options here. If we were loading these data from a .csv file, we could go back to the top of the document. Or, we could do something more effective: Go to Environment, click the little broom icon, and select ‚Äúyes‚Äù.\n\nmidwest\n\n# A tibble: 437 √ó 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN‚Ä¶ IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA‚Ä¶ IL    0.058   173025      2983.   146506    16559           331\n# ‚Ñπ 427 more rows\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow the second option: let‚Äôs try making the modification a little more carefully: saving the data to a new variable.\n\nmidwest_counties &lt;- midwest |&gt;\n  select(county)\n\nmidwest_counties\n\n# A tibble: 437 √ó 1\n   county   \n   &lt;chr&gt;    \n 1 ADAMS    \n 2 ALEXANDER\n 3 BOND     \n 4 BOONE    \n 5 BROWN    \n 6 BUREAU   \n 7 CALHOUN  \n 8 CARROLL  \n 9 CASS     \n10 CHAMPAIGN\n# ‚Ñπ 427 more rows\n\nmidwest\n\n# A tibble: 437 √ó 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN‚Ä¶ IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA‚Ä¶ IL    0.058   173025      2983.   146506    16559           331\n# ‚Ñπ 427 more rows\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow we have two data frames: the new data frame midwest_counties, which contains our modifications from the data pipeline above, and the original data frame midwest, which has not been changed. Both of these are useful operations, and you will undoubtedly use both this semester! However, keep this distinction in mind when you‚Äôre mutating your data - don‚Äôt remove anything you think you‚Äôll need later.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#variable-examples",
    "href": "coding-principles-oh.html#variable-examples",
    "title": "Intro to Coding Principles",
    "section": "Variable Examples",
    "text": "Variable Examples\n\nx &lt;- 10\nx\n\n[1] 10\n\ny &lt;- c(3, 5)\ny\n\n[1] 3 5\n\nz &lt;- midwest\nz\n\n# A tibble: 437 √ó 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN‚Ä¶ IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA‚Ä¶ IL    0.058   173025      2983.   146506    16559           331\n# ‚Ñπ 427 more rows\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#examples",
    "href": "coding-principles-oh.html#examples",
    "title": "Intro to Coding Principles",
    "section": "Examples",
    "text": "Examples\nEvery column in a data frame will have a particular data type - sort of a way that R recognizes, classifies, and interacts with the data. Let‚Äôs look at an example, using the convenient glimpse function:\n\nglimpse(midwest)\n\nRows: 437\nColumns: 28\n$ PID                  &lt;int&gt; 561, 562, 563, 564, 565, 566, 567, 568, 569, 570,‚Ä¶\n$ county               &lt;chr&gt; \"ADAMS\", \"ALEXANDER\", \"BOND\", \"BOONE\", \"BROWN\", \"‚Ä¶\n$ state                &lt;chr&gt; \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"‚Ä¶\n$ area                 &lt;dbl&gt; 0.052, 0.014, 0.022, 0.017, 0.018, 0.050, 0.017, ‚Ä¶\n$ poptotal             &lt;int&gt; 66090, 10626, 14991, 30806, 5836, 35688, 5322, 16‚Ä¶\n$ popdensity           &lt;dbl&gt; 1270.9615, 759.0000, 681.4091, 1812.1176, 324.222‚Ä¶\n$ popwhite             &lt;int&gt; 63917, 7054, 14477, 29344, 5264, 35157, 5298, 165‚Ä¶\n$ popblack             &lt;int&gt; 1702, 3496, 429, 127, 547, 50, 1, 111, 16, 16559,‚Ä¶\n$ popamerindian        &lt;int&gt; 98, 19, 35, 46, 14, 65, 8, 30, 8, 331, 51, 26, 17‚Ä¶\n$ popasian             &lt;int&gt; 249, 48, 16, 150, 5, 195, 15, 61, 23, 8033, 89, 3‚Ä¶\n$ popother             &lt;int&gt; 124, 9, 34, 1139, 6, 221, 0, 84, 6, 1596, 20, 7, ‚Ä¶\n$ percwhite            &lt;dbl&gt; 96.71206, 66.38434, 96.57128, 95.25417, 90.19877,‚Ä¶\n$ percblack            &lt;dbl&gt; 2.57527614, 32.90043290, 2.86171703, 0.41225735, ‚Ä¶\n$ percamerindan        &lt;dbl&gt; 0.14828264, 0.17880670, 0.23347342, 0.14932156, 0‚Ä¶\n$ percasian            &lt;dbl&gt; 0.37675897, 0.45172219, 0.10673071, 0.48691813, 0‚Ä¶\n$ percother            &lt;dbl&gt; 0.18762294, 0.08469791, 0.22680275, 3.69733169, 0‚Ä¶\n$ popadults            &lt;int&gt; 43298, 6724, 9669, 19272, 3979, 23444, 3583, 1132‚Ä¶\n$ perchsd              &lt;dbl&gt; 75.10740, 59.72635, 69.33499, 75.47219, 68.86152,‚Ä¶\n$ percollege           &lt;dbl&gt; 19.63139, 11.24331, 17.03382, 17.27895, 14.47600,‚Ä¶\n$ percprof             &lt;dbl&gt; 4.355859, 2.870315, 4.488572, 4.197800, 3.367680,‚Ä¶\n$ poppovertyknown      &lt;int&gt; 63628, 10529, 14235, 30337, 4815, 35107, 5241, 16‚Ä¶\n$ percpovertyknown     &lt;dbl&gt; 96.27478, 99.08714, 94.95697, 98.47757, 82.50514,‚Ä¶\n$ percbelowpoverty     &lt;dbl&gt; 13.151443, 32.244278, 12.068844, 7.209019, 13.520‚Ä¶\n$ percchildbelowpovert &lt;dbl&gt; 18.011717, 45.826514, 14.036061, 11.179536, 13.02‚Ä¶\n$ percadultpoverty     &lt;dbl&gt; 11.009776, 27.385647, 10.852090, 5.536013, 11.143‚Ä¶\n$ percelderlypoverty   &lt;dbl&gt; 12.443812, 25.228976, 12.697410, 6.217047, 19.200‚Ä¶\n$ inmetro              &lt;int&gt; 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0‚Ä¶\n$ category             &lt;chr&gt; \"AAR\", \"LHR\", \"AAR\", \"ALU\", \"AAR\", \"AAR\", \"LAR\", ‚Ä¶\n\n\nNext to the data, we can see various designations - &lt;int&gt;, &lt;dbl&gt;, &lt;chr&gt;, etc. These are data types. But what exactly is the difference?\nDouble/Numeric\nThe dbl data type, which is the default implementation of the numeric class, stands for double - meaning ‚Äúdouble-precision floating-point format‚Äù. It‚Äôs pretty clear that double is an easier word to remember! This allows you to store numbers with a lot of decimal points (but not infinite!). For example, let‚Äôs look at \\(\\pi\\), which is built in as pi in R:\n\npi\n\n[1] 3.141593\n\nclass(pi)\n\n[1] \"numeric\"\n\n\nHere, we use the class() function to determine what data type R is using to store our variables. In this case, we can see that R stores pi as a default numeric variable, which is implemented as a double. In general, whenever you work with numbers, they will be doubles, and for purposes of STA 199 there is no issue with this.\nInteger\nThe int data type means integer - as in, the mathematical concept of an integer. All data represented as integers will be whole numbers. This data type is not capable of storing decimal places, so if you try to do decimal operations with it, R will implicitly cast it to another data type. Implicitly means that it does this without us telling it to. Let‚Äôs take a look at a couple of examples:\n\na &lt;- 3\nclass(a)\n\n[1] \"numeric\"\n\n\nBy default, R will treat all numbers as the numeric class. If you want to explicitly tell R that your number is an integer, follow the number with ‚ÄúL‚Äù:\n\na &lt;- 3L\nclass(a)\n\n[1] \"integer\"\n\n\nNow, let‚Äôs say we want to divide this number by 2:\n\nb &lt;- a / 2\nclass(b)\n\n[1] \"numeric\"\n\n\nSince 3 is not divisible by 2, the output is a decimal. However, since we have performed a decimal operation, rather than trying to guess whether to round up or down, R simply implicitly casts it back to numeric.\nLogical/Boolean\nWhile there isn‚Äôt an example in this data frame, there is a data type called logical - which represents true/false.\n\nc &lt;- TRUE\nclass(c)\n\n[1] \"logical\"\n\n\nIn R, you need to type out TRUE/FALSE in all caps for it to be recognized. Under the hood, R stores these values as ‚ÄúFALSE = 0‚Äù and ‚ÄúTRUE = 1‚Äù, which means that if you want to find the percentage of TRUE in your data, you can just take the average:\n\nd &lt;- c(TRUE, FALSE, TRUE)\nmean(d)\n\n[1] 0.6666667\n\n\nCharacter/String\nThe chr data type represents all characters and strings in R. Unlike some languages, R does not differentiate between these. In general, strings are used to represent words and categorical data, for example:\n\nplace &lt;- \"Durham, NC\"\nclass(place)\n\n[1] \"character\"\n\n\nHowever, there is an important point of caution here. Sometimes, when you load in a data frame, there will be columns that should be represented as numbers, but are accidentally represented as strings. If you‚Äôre not careful, this can have consequences. For example, consider the following:\n\n0 == 00\n\n[1] TRUE\n\n\"0\" == \"00\"\n\n[1] FALSE\n\n\nIn R, the numbers 0 and 00 represent the same thing! However, when they are strings, they do not. R treats numbers differently than it does strings, so it‚Äôs important to pay attention to which one you are actually implementing. You might also run into issues with some of your operations - for example, if you try to take the average of a column of strings, R has no idea what to do and will throw an error.\nNote: pay attention to the usage of two equal signs here, rather than just one. Why did we do this? (More on this shortly.)",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#casting",
    "href": "coding-principles-oh.html#casting",
    "title": "Intro to Coding Principles",
    "section": "Casting",
    "text": "Casting\nSo what is the solution to this problem? The answer is called casting, which means changing the data type. You do this using the as.character(), as.numeric(), and as.logical() commands. Let‚Äôs look at an example:\n\ne &lt;- \"00\"\nclass(e)\n\n[1] \"character\"\n\ne\n\n[1] \"00\"\n\ne &lt;- as.numeric(e)\nclass(e)\n\n[1] \"numeric\"\n\ne\n\n[1] 0\n\ne &lt;- as.logical(e)\nclass(e)\n\n[1] \"logical\"\n\ne\n\n[1] FALSE\n\ne &lt;- as.character(e)\nclass(e)\n\n[1] \"character\"\n\ne\n\n[1] \"FALSE\"\n\ne &lt;- as.numeric(e) # What happened?\n\nWarning: NAs introduced by coercion\n\ne\n\n[1] NA\n\n\nBe mindful with your casting - you can lose information along the way!\nNote: NA is a specific type in R. It essentially means ‚Äúnothing‚Äù or ‚Äúthis value has not been declared‚Äù. You cannot use == to check whether a value is NA. Instead, you must use is.na().",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#equals",
    "href": "coding-principles-oh.html#equals",
    "title": "Intro to Coding Principles",
    "section": "Equals",
    "text": "Equals\nThe first Boolean operator is ‚Äúequals‚Äù. This is a place where it is easy to get confused. We use the single equals sign, =, to denote assignment - essentially, telling R ‚Äúthis thing takes this value.‚Äù We use the double equals sign, ==, to denote comparison - essentially, asking R ‚Äúare these two values equal?‚Äù It is important to keep these two things distinct - if you want to check equality, or filter for a specific value, you always need to use the double equals sign!\n\nmidwest |&gt;\n  filter(county = \"Cook\")\n\nError in `filter()`:\n! We detected a named input.\n‚Ñπ This usually means that you've used `=` instead of `==`.\n‚Ñπ Did you mean `county == \"Cook\"`?\n\n\nHere‚Äôs an example of where a single equals sign is incorrect, and R returns an error. Fortunately, it has a very helpful suggestion in the error message! Let‚Äôs replace that with the double equals:\n\nmidwest |&gt;\n  filter(county == \"Cook\")\n\n# A tibble: 0 √ó 28\n# ‚Ñπ 28 variables: PID &lt;int&gt;, county &lt;chr&gt;, state &lt;chr&gt;, area &lt;dbl&gt;,\n#   poptotal &lt;int&gt;, popdensity &lt;dbl&gt;, popwhite &lt;int&gt;, popblack &lt;int&gt;,\n#   popamerindian &lt;int&gt;, popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;, ‚Ä¶\n\n\nNow there‚Äôs no error message, but we also didn‚Äôt return any values. Why did this happen? When I use ==, I am checking whether these two strings are exactly equivalent, and that includes being case sensitive. If I view the data in the data frame, I see that all of the county names are actually in all caps. I can fix the string in my example‚Ä¶\n\nmidwest |&gt;\n  filter(county == \"COOK\")\n\n# A tibble: 1 √ó 28\n    PID county state  area poptotal popdensity popwhite popblack popamerindian\n  &lt;int&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n1   576 COOK   IL    0.058  5105067     88018.  3204947  1317147         10289\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\n‚Ä¶and finally find Chicago!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#and",
    "href": "coding-principles-oh.html#and",
    "title": "Intro to Coding Principles",
    "section": "And",
    "text": "And\nThe second Boolean operator is ‚Äúand‚Äù. We use this when we want multiple conditions to be true. In R, to denote and, we use the single ampersand & (in some other languages, you use a double ampersand). When R sees this, it checks both statements, and only returns TRUE if both statements are true. Let‚Äôs look at an example, again using filter():\n\nmidwest |&gt;\n  filter(state == \"IL\")\n\n# A tibble: 102 √ó 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN‚Ä¶ IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA‚Ä¶ IL    0.058   173025      2983.   146506    16559           331\n# ‚Ñπ 92 more rows\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nUsing our == operator, we can find all of the counties in Illinois. Now, let‚Äôs find only the ones with a population density over 30,000:\n\nmidwest |&gt;\n  filter(state == \"IL\" & popdensity &gt;= 30000)\n\n# A tibble: 2 √ó 28\n    PID county  state  area poptotal popdensity popwhite popblack popamerindian\n  &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n1   576 COOK    IL    0.058  5105067     88018.  3204947  1317147         10289\n2   582 DU PAGE IL    0.02    781666     39083.   714905    15462           962\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow, the filter() statement is returning all of the rows from this data frame where BOTH the state is ‚ÄúIL‚Äù AND the population density is \\(\\geq\\) 30,000.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#or",
    "href": "coding-principles-oh.html#or",
    "title": "Intro to Coding Principles",
    "section": "Or",
    "text": "Or\nThe third Boolean operator is ‚Äúor‚Äù. We use this when we want at least one condition to be true. In R, to denote or, we use the vertical line | (again, in some other languages, you use a double line). When R sees this, it checks both statements, and returns TRUE if either (or both) of the statements are true. Let‚Äôs go back to our example:\n\nmidwest |&gt;\n  filter(state == \"IL\" | popdensity &gt;= 30000) |&gt;\n  arrange(desc(popdensity))\n\n# A tibble: 107 √ó 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   576 COOK    IL    0.058  5105067     88018.  3204947  1317147         10289\n 2  3021 MILWAU‚Ä¶ WI    0.015   959275     63952.   718918   195470          6994\n 3  1278 WAYNE   MI    0.035  2111687     60334.  1212007   849109          8048\n 4  2026 CUYAHO‚Ä¶ OH    0.026  1412140     54313.  1025756   350185          2533\n 5   582 DU PAGE IL    0.02    781666     39083.   714905    15462           962\n 6   711 MARION  IN    0.023   797159     34659.   615039   169654          1698\n 7  2039 HAMILT‚Ä¶ OH    0.025   866228     34649.   672972   181145          1204\n 8   609 LAKE    IL    0.028   516418     18444.   450666    34771          1198\n 9   605 KANE    IL    0.029   317471     10947.   269675    19006           620\n10   661 Winneb‚Ä¶ IL    0.03    252913      8430.   222439    23256           651\n# ‚Ñπ 97 more rows\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow, R returns all of the rows that are in Illinois, as well as all of the rows that are not in Illinois, but have a population density of at least 30,000.\nNote: Keep in mind that | is not exclusive. That means that | will return true if only one condition is true, but it will also return true if both conditions are true. If you want exactly one condition to be true, look up the operator XOR.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#not",
    "href": "coding-principles-oh.html#not",
    "title": "Intro to Coding Principles",
    "section": "Not",
    "text": "Not\nThe fourth Boolean operator is ‚Äúnot‚Äù. We use this when we want to exclude certain values from the data or prevent something from happening. In R, to denote not, we use the exclamation mark !. Specifically, you place the !, also known as a bang sign, in front of the statement that you want to be false. The most frequent use of this is to say ‚Äúnot equals‚Äù, which is denoted != (note that it is only one equals sign now, not two!) Let‚Äôs look at an example:\n\nmidwest |&gt;\n  filter(state != \"IL\") |&gt;\n  arrange(desc(popdensity))\n\n# A tibble: 335 √ó 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1  3021 MILWAU‚Ä¶ WI    0.015   959275     63952.   718918   195470          6994\n 2  1278 WAYNE   MI    0.035  2111687     60334.  1212007   849109          8048\n 3  2026 CUYAHO‚Ä¶ OH    0.026  1412140     54313.  1025756   350185          2533\n 4   711 MARION  IN    0.023   797159     34659.   615039   169654          1698\n 5  2039 HAMILT‚Ä¶ OH    0.025   866228     34649.   672972   181145          1204\n 6  2033 FRANKL‚Ä¶ OH    0.034   961437     28278.   783714   152840          2056\n 7  1246 MACOMB  MI    0.028   717400     25621.   693686    10400          2639\n 8  2056 LUCAS   OH    0.021   462361     22017.   380155    68456          1164\n 9  2085 SUMMIT  OH    0.024   514990     21458.   446902    61185          1065\n10  2065 MONTGO‚Ä¶ OH    0.027   573809     21252.   463551   101817          1065\n# ‚Ñπ 325 more rows\n# ‚Ñπ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nIn these data, all rows from Illinois have been removed. You can check this by commenting out the filter line, and observing the difference, or just noting that Cook County, IL (home of Chicago, the densest city in the midwest) is absent!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#combining-boolean-operators",
    "href": "coding-principles-oh.html#combining-boolean-operators",
    "title": "Intro to Coding Principles",
    "section": "Combining Boolean Operators",
    "text": "Combining Boolean Operators\nYou can also combine multiple Boolean operators in more complex logical statements. We will not look at any examples here, because they can get very confusing, very quickly (and are generally unnecessary for this course). However, if you do want to combine Boolean operators, here are some things to keep in mind:\n\nParentheses: Just like in math, any statements that you put in parentheses will execute first. If I say ‚ÄúA and B or C‚Äù, it‚Äôs unclear exactly what I mean. If I would accept either (A and B) or (A and C), I would write A & (B | C), meaning I need at least one of B or C to be true. If I would accept either (A and B) or C, I would write (A & B) | C, meaning I need either (A and B) or C to be true.\nOrder of operations: Pay attention to the order in which your statements evaluate! If I write !(A & B), that means I need at least one of A or B to be false. If I write !A & !B, that means I need both A and B to be false. This can get confusing, so it‚Äôs best to write out your logic fully and work through a few examples by hand (or avoid layering these operators entirely).",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#definition-1",
    "href": "coding-principles-oh.html#definition-1",
    "title": "Intro to Coding Principles",
    "section": "Definition",
    "text": "Definition\nWhat is a function? A function is, essentially, a block of code that does something (so that you don‚Äôt have to implement it!). A function will always have a name, followed by open and closed parentheses (). Some functions do not take arguments. However, if they do, these arguments will go within the parentheses. Once R sees an opening parenthesis, it will not execute the code until it sees a closing parenthesis. Beware - when you start layering functions, such as using aes() inside of ggplot(), you need to pay attention to what your parentheses are around and make sure that they all close!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#arguments",
    "href": "coding-principles-oh.html#arguments",
    "title": "Intro to Coding Principles",
    "section": "Arguments",
    "text": "Arguments\nArguments are the commands that you give to a function that tell it what to do. Most functions take at least one argument, and some can take arbitrarily many. Functions have a default order for (some of) their arguments. If you know this order, you do not have to explicitly name the arguments. If not, you must list them explicitly. Here are two examples:\n\n# Named Arguments\nggplot(\n  data = midwest, \n  mapping = aes(x = poptotal, y = popdensity, color = percwhite)\n  ) +\n  geom_point()\n\n\n\n\n\n\n# Unnamed Arguments\nggplot(\n  midwest, \n  aes(poptotal, popdensity, percwhite)\n  ) +\n  geom_point()\n\n\n\n\n\n\n\nIn ggplot, the first two arguments are always data and mapping, so it is common to drop these. However, in the second plot here, we lost our fill aesthetic. Why?\nWhen we look at the aes() documentation, we see that x is the first named argument and y is the second, but after that there are no named arguments. That means, while you can add more aesthetics, you must name them explicitly, since they do not appear by default.\nPipe Operator\nMany times in this class, you will see the symbol |&gt; used. This is known as the pipe operator, and it allows us to have a so-called ‚Äúdata pipeline‚Äù. This helps make code a lot more readable! Let‚Äôs take a look at why:\n\nhead(arrange(mutate(select(filter(midwest, state == \"IL\"), county, state, area, poptotal, inmetro), inmetro = as.logical(inmetro)), desc(poptotal)), 10)\n\n# A tibble: 10 √ó 5\n   county    state  area poptotal inmetro\n   &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt; &lt;lgl&gt;  \n 1 COOK      IL    0.058  5105067 TRUE   \n 2 DU PAGE   IL    0.02    781666 TRUE   \n 3 LAKE      IL    0.028   516418 TRUE   \n 4 WILL      IL    0.05    357313 TRUE   \n 5 KANE      IL    0.029   317471 TRUE   \n 6 ST CLAIR  IL    0.04    262852 TRUE   \n 7 Winnebago IL    0.03    252913 TRUE   \n 8 MADISON   IL    0.045   249238 TRUE   \n 9 MCHENRY   IL    0.036   183241 TRUE   \n10 PEORIA    IL    0.038   182827 TRUE   \n\n\nTechnically, we can write our code in this manner! Strictly speaking, under the hood, the pipe operator is reconstructing your code into this format. However, this is nearly impossible to read (I‚Äôve been coding in R for years, and I still ran into multiple errors trying to write this).\nWith the pipe operator, we can skip this and execute each function on its own line. By default, the pipe operator ‚Äúpipes‚Äù your data into the first argument of a function - which, in the tidyverse, is almost always the ‚Äúdata‚Äù argument. This lets us write our data in a much neater pipeline, where you can see step-by-step what is happening to the data:\n\nmidwest |&gt;   # Operate on the midwest data frame\n  filter(state == \"IL\") |&gt;   # Filter for only the counties in Illinois\n  select(county, state, area, poptotal, inmetro) |&gt;   # Select only these five columns, and drop all others\n  mutate(inmetro = as.logical(inmetro)) |&gt;   # Cast inmetro to a logical type\n  arrange(desc(poptotal)) |&gt;   # Arrange the data frame by poptotal in descending order\n  head(10)   # Select the top 10 rows\n\n# A tibble: 10 √ó 5\n   county    state  area poptotal inmetro\n   &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt; &lt;lgl&gt;  \n 1 COOK      IL    0.058  5105067 TRUE   \n 2 DU PAGE   IL    0.02    781666 TRUE   \n 3 LAKE      IL    0.028   516418 TRUE   \n 4 WILL      IL    0.05    357313 TRUE   \n 5 KANE      IL    0.029   317471 TRUE   \n 6 ST CLAIR  IL    0.04    262852 TRUE   \n 7 Winnebago IL    0.03    252913 TRUE   \n 8 MADISON   IL    0.045   249238 TRUE   \n 9 MCHENRY   IL    0.036   183241 TRUE   \n10 PEORIA    IL    0.038   182827 TRUE   \n\n\nMuch better, right? Remember, whenever you‚Äôre using the pipe operator (or the +, in ggplot, which is different!), you should start a new line of code. As long as you have a pipe operator, R is expecting another function, so it won‚Äôt execute only part of your code.\nNote: In this class, we focus on the base R pipe, which is denoted by |&gt;. However, when you‚Äôre debugging on the internet, you may come across the symbol %&gt;%, which is the magrittr pipe. There are some technical differences in these that generally go beyond the scope of this class, but they essentially serve the same purpose. Don‚Äôt be scared by the magrittr pipe when you‚Äôre doing your debugging!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#definition-2",
    "href": "coding-principles-oh.html#definition-2",
    "title": "Intro to Coding Principles",
    "section": "Definition",
    "text": "Definition\nEvery time we start programming in this class, we run library(tidyverse). Why do we do this?\nLibraries are collections of functions, and running them means that we are loading those functions into our current R session. If you try to open up a fresh R session and run ggplot() immediately, you will get an error, because that function is not found. However, with the library, you can load in everything that you need, all at once. The tidyverse is especially cool, because it is actually a collection of libraries - libraryception!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#environment",
    "href": "coding-principles-oh.html#environment",
    "title": "Intro to Coding Principles",
    "section": "Environment",
    "text": "Environment\nYour environment in R is basically the current instance of your program. When you run a library, it is part of your environment until you restart R, meaning you can call any of its functions at any time. When you create a variable, it is part of your environment until you restart R, meaning you can reference those variables at any time.\nWhen you use the containers, they do not regularly restart R. This can be a problem sometimes, when old code gets tangled up with new code! It is my personal recommendation that you (at a minimum) restart R and clear your environment every time you start a new project (AE, lab, etc). You can restart R by going to Session -&gt; Restart R, and clear your environment by going to the environment pane and clicking the broom icon.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#rendering-quarto",
    "href": "coding-principles-oh.html#rendering-quarto",
    "title": "Intro to Coding Principles",
    "section": "Rendering Quarto",
    "text": "Rendering Quarto\nWhen you click the ‚ÄúRender‚Äù button for your .qmd file, what happens? R executes a program, called a ‚Äúcompiler‚Äù, that runs your entire .qmd file in a new environment. In other words, if you have loaded a library, or edited a variable, or done any number of things in the console (or even later in the .qmd file) without saving them in the .qmd file, and then you try to render, you will get an error because that function/variable/etc has not been defined in the rendering environment. This forces you to write reproducible code, and it‚Äôs the first thing to think about when you run into errors while rendering!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#documentation",
    "href": "coding-principles-oh.html#documentation",
    "title": "Intro to Coding Principles",
    "section": "Documentation",
    "text": "Documentation\nUnless you have a function and its usage entirely memorized, you are going to be reading documentation. Documentation is useful, but it is dense, and can be hard to parse. Let‚Äôs look at an example of how we can look through documentation.\n\n?if_else\n\n?geom_point",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#errors",
    "href": "coding-principles-oh.html#errors",
    "title": "Intro to Coding Principles",
    "section": "Errors",
    "text": "Errors\nUnless you are the Roman God of Programming (and even then, I‚Äôm not too sure), you are going to encounter errors in your programming. These are completely natural, and nothing to be ashamed of - sometimes I write partial code, just to see where it will catch errors. However, some error messages are easier to understand than others. Let‚Äôs look through a couple of examples of common errors, and what I would do to interpret and fix them.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#example-1",
    "href": "coding-principles-oh.html#example-1",
    "title": "Intro to Coding Principles",
    "section": "Example 1",
    "text": "Example 1\n\nmidwest |&gt;\n  sumarize(avg_pop_dens = mean(popdensity))\n\nError in sumarize(midwest, avg_pop_dens = mean(popdensity)): could not find function \"sumarize\"\n\n\n\n\n\n\n\n\nWhat‚Äôs wrong with this code?\n\n\n\n\n\nIn this case, we just have a simple spelling error! It may seem trivial, but this will constitute at least half of the errors that you have. Make this the first thing you check - you will never meet a programmer who doesn‚Äôt have a story of the time they spent at least 30 minutes debugging a function, just to realize it was a typo all along.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#example-2",
    "href": "coding-principles-oh.html#example-2",
    "title": "Intro to Coding Principles",
    "section": "Example 2",
    "text": "Example 2\n\nggplot(midwest, aes(x = poptotal, y = popdensity,)) |&gt;\n  geom_point() |&gt;\n  labs(x = \"Total Population\", y = \"Population Density\")\n\nError in `geom_point()`:\n! `mapping` must be created by `aes()`.\n‚Ñπ Did you use `%&gt;%` or `|&gt;` instead of `+`?\n\n\n\n\n\n\n\n\nWhat‚Äôs wrong with this code?\n\n\n\n\n\nThis one should be pretty obvious, since it‚Äôs a common enough error that R gives an extremely helpful error message. When you‚Äôre building a ggplot object, you use + rather than |&gt; to add additional lines!\nThere‚Äôs a second error here, that R knew well enough to handle here, but which could become an issue in more complicated code chunks. Did anyone spot it?",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#example-3",
    "href": "coding-principles-oh.html#example-3",
    "title": "Intro to Coding Principles",
    "section": "Example 3",
    "text": "Example 3\n\nggplot(midwest, aes(x = state, y = poptotal, fill = state)) +\n  geom_bar() +\n  theme_bw() +\n  scale_y_continuous(labels = scales::unit_format(unit = \"M\", scale = 1e-6)) +\n  labs(\n    x = \"State\",\n    y = \"Total Population\\n(Millions)\",\n    title = \"Total Population by State\"\n  ) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    panel.grid.major.x = element_blank(),\n    legend.position = \"none\"\n  ) +\n  scale_fill_viridis_d()\n\nError in `geom_bar()`:\n! Problem while computing stat.\n‚Ñπ Error occurred in the 1st layer.\nCaused by error in `setup_params()`:\n! `stat_count()` must only have an x or y aesthetic.\n\n\nThere‚Äôs a lot going on here, so it might not be obvious at first where the issue is! The error has something to do with the function stat_count(), but that‚Äôs not a function we used (explicitly) anywhere in this code. This is why you should iterate on your code, running it intermittently, so that you can catch errors when they pop up.\nMy first thought would be to run rlang::last_trace(), as suggested by the error message. This is sometimes helpful - it can reference certain functions and even lines of code, especially when you‚Äôre executing something more complex. Frequently, though, it‚Äôs too complicated to understand. In this case, I would certainly say I can‚Äôt make any sense of that.\nMy next thought is to google the error message. It can be a little tricky to know what to google from the error message. You want to look for anything that seems general enough that other people might have asked, but specific enough that it will apply to your situation. Let‚Äôs go line by line:\n\n‚ÄúError in geom_bar()‚Äù: Probably too general to bother googling. There are a lot of possible errors with geom_bar(), and it would take too long to look through them all to get to your specific problem!\n‚ÄúProblem while computing stat.‚Äù: This is more helpful, because it gives a little more direction as to the source of the error, but it is still too general - what stat are we computing? What problem?\n‚ÄúError occured in the 1st layer‚Äù: This can be helpful for you, if you know the order of ggplot layers. However, it is probably not helpful to google, since people could have built their layers in a different order before encountering this error.\n‚ÄúCaused by error in setup_params()‚Äù: Closer! This is getting more and more specific, and this might be good enough to google. However, it still doesn‚Äôt say what the error is, it just says that there was one.\n‚Äústat_count() must only have an x or y aesthetic‚Äù: Bingo! This is the one we‚Äôre looking for, which tells us exactly what the issue is. Now, it may be possible to interpret manually, but let‚Äôs say you can‚Äôt. Here‚Äôs where we go now:\n\nI would copy-paste the entire final line into google. You don‚Äôt want to copy-paste the full error message, since that‚Äôs probably too specific, and you might not find any results. At the same time, you don‚Äôt want to copy-paste only a couple of words, since that might not be specific enough, and you could be stuck looking through a lot of links. If you google just that line, you are likely to find someone on stack exchange who has posted a question with this exact (or almost this exact) error message. You can also help your google out by throwing in some relevant key words:\n\nggplot\nR\nerror\n\nTake a couple minutes to google this, and see if you can figure out what‚Äôs wrong with the code! Then, remember to cite the source where you found this answer! In general, it‚Äôs okay to google your error messages for help, but not to use someone else‚Äôs solution without credit.\n\n\n\n\n\n\nWhat‚Äôs wrong with this code?\n\n\n\n\n\nI looked at https://stackoverflow.com/questions/61068031/error-stat-count-can-only-have-an-x-or-y-aesthetic for my answer. There‚Äôs a few different suggestions on this page, all of which could be useful! This page definitely suggests to me that the issue with my plot is in the geom_bar() line - which makes sense, since this is layer 1 of the plot. While they have a couple simple fixes, here‚Äôs the actual error I wrote: geom_bar() is expecting only one variable. If you want two variables, like this, you should use geom_col() instead.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "STA 199Fall 2024",
    "section": "",
    "text": "Intro to data science and statistical thinking. Learn to explore, visualize, and analyze data to understand natural phenomena, investigate patterns, model outcomes, and make predictions, all in a reproducible and shareable manner. Gain experience in data wrangling and munging, exploratory data analysis, predictive modeling, data visualization, and effective communication of results. Work on problems and case studies inspired by and based on real-world questions and data. The course will focus on the R statistical computing language. No statistical or computing background is necessary. Not open to students who have taken a 100-level Statistical Science course, Statistical Science 210, or a Statistical Science course numbered 300 or above.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#overview",
    "href": "course-overview.html#overview",
    "title": "STA 199Fall 2024",
    "section": "",
    "text": "Intro to data science and statistical thinking. Learn to explore, visualize, and analyze data to understand natural phenomena, investigate patterns, model outcomes, and make predictions, all in a reproducible and shareable manner. Gain experience in data wrangling and munging, exploratory data analysis, predictive modeling, data visualization, and effective communication of results. Work on problems and case studies inspired by and based on real-world questions and data. The course will focus on the R statistical computing language. No statistical or computing background is necessary. Not open to students who have taken a 100-level Statistical Science course, Statistical Science 210, or a Statistical Science course numbered 300 or above.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#meetings",
    "href": "course-overview.html#meetings",
    "title": "STA 199Fall 2024",
    "section": "Meetings",
    "text": "Meetings\n\n\n\n\n\n\n\n\nMeeting\nLocation\nTime\n\n\n\n\nLecture\nBiological Sciences 111\nTue & Thur 11:45 am - 1:00 pm\n\n\nLab 01\nPerkins LINK 087 (Classroom 3)\nMon 8:30 - 9:45 am\n\n\nLab 02\nPerkins LINK 087 (Classroom 3)\nMon 10:05 - 11:20 am\n\n\nLab 03\nPerkins LINK 071 (Classroom 5)\nMon 10:05 - 11:20 am\n\n\nLab 04\nPerkins LINK 087 (Classroom 3)\nMon 11:45 am - 1:00 pm\n\n\nLab 05\nPerkins LINK 071 (Classroom 5)\nMon 11:45 am - 1:00 pm\n\n\nLab 06\nPerkins LINK 087 (Classroom 3)\nMon 1:25 - 2:40 pm\n\n\nLab 07\nPerkins LINK 071 (Classroom 5)\nMon 1:25 - 2:40 pm\n\n\nLab 08\nPerkins LINK 087 (Classroom 3)\nMon 3:05 - 4:20 pm\n\n\nLab 09\nOld Chemistry 201\nMon 3:05 - 4:20 pm\n\n\nLab 10\nPerkins LINK 087 (Classroom 3)\nMon 4:40 - 5:55 pm",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Course support",
    "section": "",
    "text": "Most of you will need help at some point, and we want to make sure you can identify where that is so that you don‚Äôt get too frustrated and feel comfortable seeking help.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#lectures-and-labs",
    "href": "course-support.html#lectures-and-labs",
    "title": "Course support",
    "section": "Lectures and labs",
    "text": "Lectures and labs\nIf you have a question during the lecture or lab, feel free to ask it! There are likely other students with the same question, so asking will create a learning opportunity for everyone.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#help-from-humans",
    "href": "course-support.html#help-from-humans",
    "title": "Course support",
    "section": "Help from humans",
    "text": "Help from humans\n\nOffice hours\nThe teaching team is here to help you be successful in the course. You are encouraged to attend office hours during the times posted on the home page to ask questions about the course content and assignments. Many questions are most effectively answered in person, so office hours are a valuable resource. I encourage each and every one of you to take advantage of this resource! Make a pledge to stop by during office hours at least once during the first three weeks of class. If you have no questions, stop by and say hi and introduce yourself. You can find a list of everyone‚Äôs office hours here.\nMy office hours will start in Week 1, TA office hours will start in Week 2.\n\n\nEd Discussion\nHave a question that can‚Äôt wait for office hours? Prefer to write out your question in detail rather than asking in person? The course discussion forum, Ed Discussion, is the best venue for these! There is a chance another student has already asked a similar question, so please check the other posts on before asking a new question. If you know the answer to a question that is posted, I encourage you to respond!\nYou can access this tool on the course website toolbar ‚Äì just click on the lifesaver icon.\n\n\nPeer tutoring\nMINT Peer Tutoring (Meaningful Interactive Tutoring) are small groups of 2-5 students in the same course who meet weekly with a Peer Tutor. This semester, Peer Tutor who will be leading MINT Peer Tutoring for STA 199 is Stanley Borden (stanley.borden@duke.edu).\nThe peer tutoring groups are a resource focused on allowing students to receive additional support for questions they have on the course content while still being part of a community of fellow learners. Peer tutors communicate with students in advance of the meetings so that they can be responsive to student needs during the group meetings. Some groups meet in person and some meet virtually.\n\nIn person, Wednesday 7:00 pm\nVirtual, Wednesday 8:05 pm\n\nFor more details and to see what other courses we offer services for, please visit their website: https://arc.duke.edu/peer-education\nSignups for MINT Peer Tutoring open the morning of Thursday, September 5th and groups start meeting on Monday, September 9th.\nNote that peer tutors are not directly affiliated with the course, however they tend to be students who have taken the course in the past.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#help-from-ai-chatbot",
    "href": "course-support.html#help-from-ai-chatbot",
    "title": "Course support",
    "section": "Help from AI: Chatbot",
    "text": "Help from AI: Chatbot\nThe course has a chatbot that has been trained specifically on the course textbooks. If you‚Äôre looking for AI-help, we strongly recommend starting here.\nYou can access this tool on the course website toolbar ‚Äì just click on the lifesaver icon.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#email",
    "href": "course-support.html#email",
    "title": "Course support",
    "section": "Email",
    "text": "Email\nPlease refrain from emailing any course content questions (those should go to Ed Discussion), and only use email for questions about personal matters that may not be appropriate for the public course forum (e.g., illness, accommodations, etc.). For such matters, you may email Dr.¬†Mine √áetinkaya-Rundel at mc301@duke.edu.\nIf there is a question that‚Äôs not appropriate for the public forum, you are welcome to email me directly. If you email me, please include ‚ÄúSTA 199‚Äù in the subject line. Barring extenuating circumstances, I will respond to STA 199 emails within 48 hours Monday - Friday. Response time may be slower for emails sent Friday evening - Sunday.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#academic-support",
    "href": "course-support.html#academic-support",
    "title": "Course support",
    "section": "Academic support",
    "text": "Academic support\nThere are times you may need help with the class that is beyond what can be provided by the teaching team. In those instances, I encourage you to visit the Academic Resource Center. The Academic Resource Center (ARC) offers free services to all students during their undergraduate careers at Duke. Services include Learning Consultations, Peer Tutoring and Study Groups, ADHD/LD Coaching, Outreach Workshops, and more. Because learning is a process unique to every individual, they work with each student to discover and develop their own academic strategy for success at Duke. Contact the ARC to schedule an appointment. Undergraduates in any year, studying any discipline can benefit! Contact ARC@duke.edu, 919-684-5917.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#mental-health-and-well-being",
    "href": "course-support.html#mental-health-and-well-being",
    "title": "Course support",
    "section": "Mental health and well-being",
    "text": "Mental health and well-being\nDuke is committed to holistic student well-being, including mental, emotional, and physical health. The university offers resources to help students manage daily stress, encourage intentional self-care, and access just-in-time support. If you find you need support, your mental and/or emotional health concerns are impacting your day-to-day activities and your academic performance, or you need someone to talk to, the resources below are available to you:\n\nDukeReach: DukeReach provides comprehensive outreach services to support students in managing all aspects of well-being, including referrals and follow-up services for students who are experiencing significant challenges related to mental health, physical health, social adjustment, and/or a variety of other stressors. You can reach the DukeReach team at dukereach@duke.edu.\nCounseling and Psychological Services (CAPS): CAPS services include individual and group counseling services, psychiatric services, and workshops. CAPS also provides referrals to off-campus resources for specialized care. You can reach CAPS at (919) 660-1000.\nTimelyCare1: TimelyCare is an online platform that is a convenient, confidential, and free way for Duke students to receive 24/7 mental health support through TalkNow and scheduled counseling.\nBC Fellows for Healthy Relationship: The BC Fellows meet with students individually and in groups, supporting the development of healthy relationships and building meaningful community in all areas of a student‚Äôs life.\nDukeLine: Students who want to connect anonymously with a Peer Coach can text 984-230-4888 from 5 to 11 p.m. daily. DukeLine offers in-the-moment anonymous, non-emergency text support from a peer.\nDuWell: DuWell provides Moments of Mindfulness (stress management and resilience building) and meditation programming (Koru workshop) to assist students in developing a daily emotional well-being practice. All are welcome, and no experience is necessary. You can reach DuWell at (919) 681-8421.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#course-costs",
    "href": "course-support.html#course-costs",
    "title": "Course support",
    "section": "Course costs",
    "text": "Course costs\n\nTextbooks: The textbooks for this course are freely available on the web.\nLaptops: Each student is expected to have a laptop they can bring to each lecture and lab.\n\nIf you are having difficulty with the costs associated with this course, here are some resources:\n\nKarsh Office of Undergraduate Support: Regardless of your aid package, Karsh offers loans and resources for connecting students with campus programs that might help alleviate course costs.\nDukeLIFE: The Course Material Assistance program offers assistance for eligible students, including through the LIFE Loaner Laptop Program. Students who are eligible for DukeLIFE benefits are notified before the start of the semester; program resources are limited.\nDuke Libraries: The library‚Äôs Top Textbook Program allows you to rent some textbooks for 3 hours at a time.\nDuke Link: You can reserve rental equipment from the Link for course-specific technology needs, such as a Digital Voice Recorder, HD Video Camera, TI-84 Plus CE, DSLR camera kit, Tripod, Shotgun Mic, iPad Mini 4, Handheld Projector, or GoPro.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#assistance-with-zoom-or-canvas",
    "href": "course-support.html#assistance-with-zoom-or-canvas",
    "title": "Course support",
    "section": "Assistance with Zoom or Canvas",
    "text": "Assistance with Zoom or Canvas\nFor technical help with Canvas or Zoom, contact the Duke OIT Service Desk at oit.duke.edu/help. You can also access the self-service help documentation for Zoom and Canvas.\nNote that we will be using Canvas minimally in this course (primarily for announcements and the grade book). All assignment submissions will take place on Gradescope and GitHub, and conversations will take place on Ed Discussion.\nZoom will be used for online office hours and as a backup option should we need to hold the course online instead of in person.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#footnotes",
    "href": "course-support.html#footnotes",
    "title": "Course support",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFormerly known as Blue Devils Care.‚Ü©Ô∏é",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "computing-cheatsheets.html",
    "href": "computing-cheatsheets.html",
    "title": "R cheatsheets",
    "section": "",
    "text": "The following cheatsheets come from https://www.rstudio.com/resources/cheatsheets. We haven‚Äôt covered every function and functionality listed on them, but you might still find them useful as references.",
    "crumbs": [
      "Computing",
      "Cheatsheets"
    ]
  },
  {
    "objectID": "exam-review/final-review.html",
    "href": "exam-review/final-review.html",
    "title": "Final review",
    "section": "",
    "text": "To be posted."
  },
  {
    "objectID": "exam-review/final-review-A.html",
    "href": "exam-review/final-review-A.html",
    "title": "Final review",
    "section": "",
    "text": "To be posted."
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#while-you-wait",
    "href": "slides/09-importing-recoding-data-slides.html#while-you-wait",
    "title": "Importing and recoding data",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-09-age-gaps-sales-import.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#announcements",
    "href": "slides/09-importing-recoding-data-slides.html#announcements",
    "title": "Importing and recoding data",
    "section": "Announcements",
    "text": "Announcements\nMidterm things\n\nFocus\nFormat\nPrep\nReview\nAccommodations"
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#finish-up-ae-08-durham-climate-factors",
    "href": "slides/09-importing-recoding-data-slides.html#finish-up-ae-08-durham-climate-factors",
    "title": "Importing and recoding data",
    "section": "Finish up: ae-08-durham-climate-factors\n",
    "text": "Finish up: ae-08-durham-climate-factors\n\n\n\nGo to your ae project in RStudio.\nOpen ae-08-durham-climate-factors.qmd and pick up at ‚ÄúRecode and reorder‚Äù."
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#reading-rectangular-data",
    "href": "slides/09-importing-recoding-data-slides.html#reading-rectangular-data",
    "title": "Importing and recoding data",
    "section": "Reading rectangular data",
    "text": "Reading rectangular data\n\nUsing readr:\n\nMost commonly: read_csv()\n\nMaybe also: read_tsv(), read_delim(), etc.\n\n\n\n\n\nUsing readxl: read_excel()\n\n\n\n\n\nUsing googlesheets4: read_sheet() ‚Äì We haven‚Äôt covered this in the videos, but might be useful for your projects"
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#goal-1-reading-and-writing-csv-files",
    "href": "slides/09-importing-recoding-data-slides.html#goal-1-reading-and-writing-csv-files",
    "title": "Importing and recoding data",
    "section": "Goal 1: Reading and writing CSV files",
    "text": "Goal 1: Reading and writing CSV files\n\nRead a CSV file\nSplit it into subsets based on features of the data\nWrite out subsets as CSV files"
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#age-gap-in-hollywood-relationships",
    "href": "slides/09-importing-recoding-data-slides.html#age-gap-in-hollywood-relationships",
    "title": "Importing and recoding data",
    "section": "Age gap in Hollywood relationships",
    "text": "Age gap in Hollywood relationships\n\n\n\nWhat is the story in this visualization?"
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#ae-09-age-gaps-sales-import---part-1",
    "href": "slides/09-importing-recoding-data-slides.html#ae-09-age-gaps-sales-import---part-1",
    "title": "Importing and recoding data",
    "section": "ae-09-age-gaps-sales-import - Part 1",
    "text": "ae-09-age-gaps-sales-import - Part 1\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-09-age-gaps-sales-import.qmd.\nWork through Part 1 of the application exercise in class, and render, commit, and push your edits."
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#goal-2-reading-excel-files",
    "href": "slides/09-importing-recoding-data-slides.html#goal-2-reading-excel-files",
    "title": "Importing and recoding data",
    "section": "Goal 2: Reading Excel files",
    "text": "Goal 2: Reading Excel files\n\nRead an Excel file with non-tidy data\nTidy it up!"
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#sales-data",
    "href": "slides/09-importing-recoding-data-slides.html#sales-data",
    "title": "Importing and recoding data",
    "section": "Sales data",
    "text": "Sales data\n\n\n\nAre these data tidy? Why or why not?"
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#sales-data-1",
    "href": "slides/09-importing-recoding-data-slides.html#sales-data-1",
    "title": "Importing and recoding data",
    "section": "Sales data",
    "text": "Sales data\n\nWhat ‚Äúdata moves‚Äù do we need to go from the original, non-tidy data to this, tidy one?"
  },
  {
    "objectID": "slides/09-importing-recoding-data-slides.html#ae-09-age-gaps-sales-import---part-2",
    "href": "slides/09-importing-recoding-data-slides.html#ae-09-age-gaps-sales-import---part-2",
    "title": "Importing and recoding data",
    "section": "ae-09-age-gaps-sales-import - Part 2",
    "text": "ae-09-age-gaps-sales-import - Part 2\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-09-age-gaps-sales-import.qmd.\nWork through Part 2 of the application exercise in class, and render, commit, and push your edits.\n\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#while-you-wait",
    "href": "slides/09-importing-recoding-data.html#while-you-wait",
    "title": "Importing and recoding data",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-09-age-gaps-sales-import.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#announcements",
    "href": "slides/09-importing-recoding-data.html#announcements",
    "title": "Importing and recoding data",
    "section": "Announcements",
    "text": "Announcements\nMidterm things\n\nFocus\nFormat\nPrep\nReview\nAccommodations"
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#finish-up-ae-08-durham-climate-factors",
    "href": "slides/09-importing-recoding-data.html#finish-up-ae-08-durham-climate-factors",
    "title": "Importing and recoding data",
    "section": "Finish up: ae-08-durham-climate-factors\n",
    "text": "Finish up: ae-08-durham-climate-factors\n\n\n\nGo to your ae project in RStudio.\nOpen ae-08-durham-climate-factors.qmd and pick up at ‚ÄúRecode and reorder‚Äù."
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#reading-rectangular-data",
    "href": "slides/09-importing-recoding-data.html#reading-rectangular-data",
    "title": "Importing and recoding data",
    "section": "Reading rectangular data",
    "text": "Reading rectangular data\n\nUsing readr:\n\nMost commonly: read_csv()\n\nMaybe also: read_tsv(), read_delim(), etc.\n\n\n\n. . .\n\nUsing readxl: read_excel()\n\n\n. . .\n\nUsing googlesheets4: read_sheet() ‚Äì We haven‚Äôt covered this in the videos, but might be useful for your projects"
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#goal-1-reading-and-writing-csv-files",
    "href": "slides/09-importing-recoding-data.html#goal-1-reading-and-writing-csv-files",
    "title": "Importing and recoding data",
    "section": "Goal 1: Reading and writing CSV files",
    "text": "Goal 1: Reading and writing CSV files\n\nRead a CSV file\nSplit it into subsets based on features of the data\nWrite out subsets as CSV files"
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#age-gap-in-hollywood-relationships",
    "href": "slides/09-importing-recoding-data.html#age-gap-in-hollywood-relationships",
    "title": "Importing and recoding data",
    "section": "Age gap in Hollywood relationships",
    "text": "Age gap in Hollywood relationships\n\n\n\nWhat is the story in this visualization?"
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#ae-09-age-gaps-sales-import---part-1",
    "href": "slides/09-importing-recoding-data.html#ae-09-age-gaps-sales-import---part-1",
    "title": "Importing and recoding data",
    "section": "ae-09-age-gaps-sales-import - Part 1",
    "text": "ae-09-age-gaps-sales-import - Part 1\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-09-age-gaps-sales-import.qmd.\nWork through Part 1 of the application exercise in class, and render, commit, and push your edits."
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#goal-2-reading-excel-files",
    "href": "slides/09-importing-recoding-data.html#goal-2-reading-excel-files",
    "title": "Importing and recoding data",
    "section": "Goal 2: Reading Excel files",
    "text": "Goal 2: Reading Excel files\n\nRead an Excel file with non-tidy data\nTidy it up!"
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#sales-data",
    "href": "slides/09-importing-recoding-data.html#sales-data",
    "title": "Importing and recoding data",
    "section": "Sales data",
    "text": "Sales data\n\n. . .\n\nAre these data tidy? Why or why not?"
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#sales-data-1",
    "href": "slides/09-importing-recoding-data.html#sales-data-1",
    "title": "Importing and recoding data",
    "section": "Sales data",
    "text": "Sales data\n\nWhat ‚Äúdata moves‚Äù do we need to go from the original, non-tidy data to this, tidy one?"
  },
  {
    "objectID": "slides/09-importing-recoding-data.html#ae-09-age-gaps-sales-import---part-2",
    "href": "slides/09-importing-recoding-data.html#ae-09-age-gaps-sales-import---part-2",
    "title": "Importing and recoding data",
    "section": "ae-09-age-gaps-sales-import - Part 2",
    "text": "ae-09-age-gaps-sales-import - Part 2\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-09-age-gaps-sales-import.qmd.\nWork through Part 2 of the application exercise in class, and render, commit, and push your edits."
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#while-you-wait",
    "href": "slides/05-exploring-data-II-slides.html#while-you-wait",
    "title": "Exploring data II",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\nPrepare for today‚Äôs application exercise: ae-05-gerrymander-explore-II\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-05-gerrymander-explore-II.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#reminder-lab-guidelines",
    "href": "slides/05-exploring-data-II-slides.html#reminder-lab-guidelines",
    "title": "Exploring data II",
    "section": "Reminder: Lab guidelines",
    "text": "Reminder: Lab guidelines\n\n\nPlots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\n\nCode should follow the tidyverse style (style.tidyverse.org) Particularly,\n\nspace before and line breaks after each + when building a ggplot\n\nspace before and line breaks after each |&gt; in a data transformation pipeline\ncode should be properly indented\nspaces around = signs and spaces after commas\n\n\nAll code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks. Tip: Haikus not novellas when writing code!\nAt least three commits with meaningful commit messages."
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#code-style-and-readability",
    "href": "slides/05-exploring-data-II-slides.html#code-style-and-readability",
    "title": "Exploring data II",
    "section": "Code style and readability",
    "text": "Code style and readability\n\nWhydowecareaboutthestyleandreadabilityofyourcode? \\(\\rightarrow\\) Why do we care about the style and readability of your code?\n\n\n\n\nJe voudrais un cafe \\(\\rightarrow\\) Je voudrais un caf√©"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#packages",
    "href": "slides/05-exploring-data-II-slides.html#packages",
    "title": "Exploring data II",
    "section": "Packages",
    "text": "Packages\n\nFor the data: usdata\n\n\n\nlibrary(usdata)\n\n\nFor the analysis: tidyverse and ggthemes\n\n\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#from-last-time",
    "href": "slides/05-exploring-data-II-slides.html#from-last-time",
    "title": "Exploring data II",
    "section": "From last time",
    "text": "From last time\n\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics."
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#what-does-group_by-do",
    "href": "slides/05-exploring-data-II-slides.html#what-does-group_by-do",
    "title": "Exploring data II",
    "section": "What does group_by() do?",
    "text": "What does group_by() do?\n\nWhat does group_by() do in the following pipeline?"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#lets-simplify",
    "href": "slides/05-exploring-data-II-slides.html#lets-simplify",
    "title": "Exploring data II",
    "section": "Let‚Äôs simplify!",
    "text": "Let‚Äôs simplify!\n\nWhat does group_by() do in the following pipeline?"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#group_by",
    "href": "slides/05-exploring-data-II-slides.html#group_by",
    "title": "Exploring data II",
    "section": "group_by()",
    "text": "group_by()\n\nGroup by converts a data frame to a grouped data frame, where subsequent operations are performed once per group\nungroup() removes grouping"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#group_by-summarize",
    "href": "slides/05-exploring-data-II-slides.html#group_by-summarize",
    "title": "Exploring data II",
    "section": "group_by() |> summarize()",
    "text": "group_by() |&gt; summarize()\nA common pipeline is group_by() and then summarize() to calculate summary statistics for each group:\n\ngerrymander |&gt;\n  group_by(state) |&gt;\n  summarize(\n    mean_trump16 = mean(trump16),\n    median_trump16 = median(trump16)\n  )\n\n# A tibble: 50 √ó 3\n   state mean_trump16 median_trump16\n   &lt;chr&gt;        &lt;dbl&gt;          &lt;dbl&gt;\n 1 AK            52.8           52.8\n 2 AL            62.6           64.9\n 3 AR            60.9           63.0\n 4 AZ            46.9           47.7\n 5 CA            31.7           28.4\n 6 CO            43.6           41.3\n 7 CT            41.0           40.4\n 8 DE            41.9           41.9\n 9 FL            47.9           49.6\n10 GA            51.3           56.6\n# ‚Ñπ 40 more rows"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#group_by-summarize-1",
    "href": "slides/05-exploring-data-II-slides.html#group_by-summarize-1",
    "title": "Exploring data II",
    "section": "group_by() |> summarize()",
    "text": "group_by() |&gt; summarize()\nThis pipeline can also be used to count number of observations for each group:\n\ngerrymander |&gt;\n  group_by(state) |&gt;\n  summarize(n = n())\n\n# A tibble: 50 √ó 2\n   state     n\n   &lt;chr&gt; &lt;int&gt;\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ‚Ñπ 40 more rows"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#summarize",
    "href": "slides/05-exploring-data-II-slides.html#summarize",
    "title": "Exploring data II",
    "section": "summarize()",
    "text": "summarize()\n... |&gt;\n  summarize(\n    name_of_summary_statistic = summary_function(variable)\n  )\n\n\n\nname_of_summary_statistic: Anything you want to call it!\n\nRecommendation: Keep it short and evocative\n\n\n\nsummary_function():\n\n\nn(): number of observations\n\nmean(): mean\n\nmedian(): median\n‚Ä¶"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#spot-the-difference",
    "href": "slides/05-exploring-data-II-slides.html#spot-the-difference",
    "title": "Exploring data II",
    "section": "Spot the difference",
    "text": "Spot the difference\n\nWhat‚Äôs the difference between the following two pipelines?\n\n\n\n\ngerrymander |&gt;\n  group_by(state) |&gt;\n  summarize(n = n())\n\n# A tibble: 50 √ó 2\n   state     n\n   &lt;chr&gt; &lt;int&gt;\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ‚Ñπ 40 more rows\n\n\n\n\ngerrymander |&gt;\n  count(state)\n\n# A tibble: 50 √ó 2\n   state     n\n   &lt;chr&gt; &lt;int&gt;\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ‚Ñπ 40 more rows"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#count",
    "href": "slides/05-exploring-data-II-slides.html#count",
    "title": "Exploring data II",
    "section": "count()",
    "text": "count()\n\n\n... |&gt;\n  count(variable)\n\n... |&gt;\n  count(variable1, variable2)\n\n\nCount the number of observations in each level of variable(s)\nPlace the counts in a variable called n"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#count-and-sort",
    "href": "slides/05-exploring-data-II-slides.html#count-and-sort",
    "title": "Exploring data II",
    "section": "\ncount() and sort\n",
    "text": "count() and sort\n\n\nWhat does the following pipeline do? Rewrite it with count() instead."
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#flip-the-question",
    "href": "slides/05-exploring-data-II-slides.html#flip-the-question",
    "title": "Exploring data II",
    "section": "Flip the question",
    "text": "Flip the question\n\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election?\n\nvs.\n\nIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#flipping-vs.-gerrymandering-prevalence",
    "href": "slides/05-exploring-data-II-slides.html#flipping-vs.-gerrymandering-prevalence",
    "title": "Exploring data II",
    "section": "Flipping vs.¬†gerrymandering prevalence",
    "text": "Flipping vs.¬†gerrymandering prevalence\n\nThe following code should produce a visualization that answers the question ‚ÄúIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?‚Äù However, it produces a warning and an unexpected plot. What‚Äôs going on?\n\n\n\n\nggplot(\n  gerrymander, \n  aes(x = gerry, fill = flip18)\n  ) +\n  geom_bar(position = \"fill\")\n\nWarning: The following aesthetics were dropped during statistical\ntransformation: fill.\n‚Ñπ This can happen when ggplot fails to infer the correct grouping\n  structure in the data.\n‚Ñπ Did you forget to specify a `group` aesthetic or to convert a\n  numerical variable into a factor?"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#another-glimpse-at-gerrymander",
    "href": "slides/05-exploring-data-II-slides.html#another-glimpse-at-gerrymander",
    "title": "Exploring data II",
    "section": "Another glimpse at gerrymander\n",
    "text": "Another glimpse at gerrymander\n\n\nglimpse(gerrymander)\n\nRows: 435\nColumns: 12\n$ district   &lt;chr&gt; \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-‚Ä¶\n$ last_name  &lt;chr&gt; \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"‚Ä¶\n$ first_name &lt;chr&gt; \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo‚Ä¶\n$ party16    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\",‚Ä¶\n$ clinton16  &lt;dbl&gt; 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 3‚Ä¶\n$ trump16    &lt;dbl&gt; 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 6‚Ä¶\n$ dem16      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0‚Ä¶\n$ state      &lt;chr&gt; \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"‚Ä¶\n$ party18    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\",‚Ä¶\n$ dem18      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0‚Ä¶\n$ flip18     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0‚Ä¶\n$ gerry      &lt;fct&gt; mid, high, high, high, high, high, high, high, mi‚Ä¶"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#mutate-1",
    "href": "slides/05-exploring-data-II-slides.html#mutate-1",
    "title": "Exploring data II",
    "section": "mutate()",
    "text": "mutate()\n\nWe want to use flip18 as a categorical variable\nBut it‚Äôs stored as a numeric\nSo we need to change its type first, before we can use it as a categorical variable\nThe mutate() function transforms (mutates) a data frame by creating a new column or updating an existing one"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#mutate-in-action",
    "href": "slides/05-exploring-data-II-slides.html#mutate-in-action",
    "title": "Exploring data II",
    "section": "\nmutate() in action",
    "text": "mutate() in action"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#revisit-the-plot",
    "href": "slides/05-exploring-data-II-slides.html#revisit-the-plot",
    "title": "Exploring data II",
    "section": "Revisit the plot",
    "text": "Revisit the plot\n\n‚ÄúIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?‚Äù"
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#ae-05-gerrymander-explore-ii",
    "href": "slides/05-exploring-data-II-slides.html#ae-05-gerrymander-explore-ii",
    "title": "Exploring data II",
    "section": "ae-05-gerrymander-explore-II",
    "text": "ae-05-gerrymander-explore-II\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-05-gerrymander-explore-II.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/05-exploring-data-II-slides.html#recap-aesthetic-mappings",
    "href": "slides/05-exploring-data-II-slides.html#recap-aesthetic-mappings",
    "title": "Exploring data II",
    "section": "Recap: aesthetic mappings",
    "text": "Recap: aesthetic mappings\n\nLocal aesthetic mappings for a given geom\nGlobal aesthetic mappings for all geoms\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#while-you-wait",
    "href": "slides/05-exploring-data-II.html#while-you-wait",
    "title": "Exploring data II",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\nPrepare for today‚Äôs application exercise: ae-05-gerrymander-explore-II\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-05-gerrymander-explore-II.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/05-exploring-data-II.html#reminder-lab-guidelines",
    "href": "slides/05-exploring-data-II.html#reminder-lab-guidelines",
    "title": "Exploring data II",
    "section": "Reminder: Lab guidelines",
    "text": "Reminder: Lab guidelines\n\n\nPlots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\n\nCode should follow the tidyverse style (style.tidyverse.org) Particularly,\n\nspace before and line breaks after each + when building a ggplot\n\nspace before and line breaks after each |&gt; in a data transformation pipeline\ncode should be properly indented\nspaces around = signs and spaces after commas\n\n\nAll code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks. Tip: Haikus not novellas when writing code!\nAt least three commits with meaningful commit messages."
  },
  {
    "objectID": "slides/05-exploring-data-II.html#code-style-and-readability",
    "href": "slides/05-exploring-data-II.html#code-style-and-readability",
    "title": "Exploring data II",
    "section": "Code style and readability",
    "text": "Code style and readability\n\nWhydowecareaboutthestyleandreadabilityofyourcode? \\(\\rightarrow\\) Why do we care about the style and readability of your code?\n\n\n. . .\n\nJe voudrais un cafe \\(\\rightarrow\\) Je voudrais un caf√©"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#packages",
    "href": "slides/05-exploring-data-II.html#packages",
    "title": "Exploring data II",
    "section": "Packages",
    "text": "Packages\n\nFor the data: usdata\n\n\n\nlibrary(usdata)\n\n\nFor the analysis: tidyverse and ggthemes\n\n\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#from-last-time",
    "href": "slides/05-exploring-data-II.html#from-last-time",
    "title": "Exploring data II",
    "section": "From last time",
    "text": "From last time\n\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics."
  },
  {
    "objectID": "slides/05-exploring-data-II.html#what-does-group_by-do",
    "href": "slides/05-exploring-data-II.html#what-does-group_by-do",
    "title": "Exploring data II",
    "section": "What does group_by() do?",
    "text": "What does group_by() do?\n\nWhat does group_by() do in the following pipeline?"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#lets-simplify",
    "href": "slides/05-exploring-data-II.html#lets-simplify",
    "title": "Exploring data II",
    "section": "Let‚Äôs simplify!",
    "text": "Let‚Äôs simplify!\n\nWhat does group_by() do in the following pipeline?"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#group_by",
    "href": "slides/05-exploring-data-II.html#group_by",
    "title": "Exploring data II",
    "section": "group_by()",
    "text": "group_by()\n\nGroup by converts a data frame to a grouped data frame, where subsequent operations are performed once per group\nungroup() removes grouping"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#group_by-summarize",
    "href": "slides/05-exploring-data-II.html#group_by-summarize",
    "title": "Exploring data II",
    "section": "group_by() |> summarize()",
    "text": "group_by() |&gt; summarize()\nA common pipeline is group_by() and then summarize() to calculate summary statistics for each group:\n\ngerrymander |&gt;\n  group_by(state) |&gt;\n  summarize(\n    mean_trump16 = mean(trump16),\n    median_trump16 = median(trump16)\n  )\n\n# A tibble: 50 √ó 3\n   state mean_trump16 median_trump16\n   &lt;chr&gt;        &lt;dbl&gt;          &lt;dbl&gt;\n 1 AK            52.8           52.8\n 2 AL            62.6           64.9\n 3 AR            60.9           63.0\n 4 AZ            46.9           47.7\n 5 CA            31.7           28.4\n 6 CO            43.6           41.3\n 7 CT            41.0           40.4\n 8 DE            41.9           41.9\n 9 FL            47.9           49.6\n10 GA            51.3           56.6\n# ‚Ñπ 40 more rows"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#group_by-summarize-1",
    "href": "slides/05-exploring-data-II.html#group_by-summarize-1",
    "title": "Exploring data II",
    "section": "group_by() |> summarize()",
    "text": "group_by() |&gt; summarize()\nThis pipeline can also be used to count number of observations for each group:\n\ngerrymander |&gt;\n  group_by(state) |&gt;\n  summarize(n = n())\n\n# A tibble: 50 √ó 2\n   state     n\n   &lt;chr&gt; &lt;int&gt;\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ‚Ñπ 40 more rows"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#summarize",
    "href": "slides/05-exploring-data-II.html#summarize",
    "title": "Exploring data II",
    "section": "summarize()",
    "text": "summarize()\n... |&gt;\n  summarize(\n    name_of_summary_statistic = summary_function(variable)\n  )\n. . .\n\n\nname_of_summary_statistic: Anything you want to call it!\n\nRecommendation: Keep it short and evocative\n\n\n\nsummary_function():\n\n\nn(): number of observations\n\nmean(): mean\n\nmedian(): median\n‚Ä¶"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#spot-the-difference",
    "href": "slides/05-exploring-data-II.html#spot-the-difference",
    "title": "Exploring data II",
    "section": "Spot the difference",
    "text": "Spot the difference\n\nWhat‚Äôs the difference between the following two pipelines?\n\n\n\n\ngerrymander |&gt;\n  group_by(state) |&gt;\n  summarize(n = n())\n\n# A tibble: 50 √ó 2\n   state     n\n   &lt;chr&gt; &lt;int&gt;\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ‚Ñπ 40 more rows\n\n\n\n\ngerrymander |&gt;\n  count(state)\n\n# A tibble: 50 √ó 2\n   state     n\n   &lt;chr&gt; &lt;int&gt;\n 1 AK        1\n 2 AL        7\n 3 AR        4\n 4 AZ        9\n 5 CA       53\n 6 CO        7\n 7 CT        5\n 8 DE        1\n 9 FL       27\n10 GA       14\n# ‚Ñπ 40 more rows"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#count",
    "href": "slides/05-exploring-data-II.html#count",
    "title": "Exploring data II",
    "section": "count()",
    "text": "count()\n\n\n... |&gt;\n  count(variable)\n\n... |&gt;\n  count(variable1, variable2)\n\n\n\nCount the number of observations in each level of variable(s)\nPlace the counts in a variable called n"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#count-and-sort",
    "href": "slides/05-exploring-data-II.html#count-and-sort",
    "title": "Exploring data II",
    "section": "\ncount() and sort\n",
    "text": "count() and sort\n\n\nWhat does the following pipeline do? Rewrite it with count() instead."
  },
  {
    "objectID": "slides/05-exploring-data-II.html#flip-the-question",
    "href": "slides/05-exploring-data-II.html#flip-the-question",
    "title": "Exploring data II",
    "section": "Flip the question",
    "text": "Flip the question\n\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election?\n\nvs.\n\nIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#flipping-vs.-gerrymandering-prevalence",
    "href": "slides/05-exploring-data-II.html#flipping-vs.-gerrymandering-prevalence",
    "title": "Exploring data II",
    "section": "Flipping vs.¬†gerrymandering prevalence",
    "text": "Flipping vs.¬†gerrymandering prevalence\n\nThe following code should produce a visualization that answers the question ‚ÄúIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?‚Äù However, it produces a warning and an unexpected plot. What‚Äôs going on?\n\n\n\n\nggplot(\n  gerrymander, \n  aes(x = gerry, fill = flip18)\n  ) +\n  geom_bar(position = \"fill\")\n\nWarning: The following aesthetics were dropped during statistical\ntransformation: fill.\n‚Ñπ This can happen when ggplot fails to infer the correct grouping\n  structure in the data.\n‚Ñπ Did you forget to specify a `group` aesthetic or to convert a\n  numerical variable into a factor?"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#another-glimpse-at-gerrymander",
    "href": "slides/05-exploring-data-II.html#another-glimpse-at-gerrymander",
    "title": "Exploring data II",
    "section": "Another glimpse at gerrymander\n",
    "text": "Another glimpse at gerrymander\n\n\nglimpse(gerrymander)\n\nRows: 435\nColumns: 12\n$ district   &lt;chr&gt; \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-‚Ä¶\n$ last_name  &lt;chr&gt; \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"‚Ä¶\n$ first_name &lt;chr&gt; \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo‚Ä¶\n$ party16    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\",‚Ä¶\n$ clinton16  &lt;dbl&gt; 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 3‚Ä¶\n$ trump16    &lt;dbl&gt; 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 6‚Ä¶\n$ dem16      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0‚Ä¶\n$ state      &lt;chr&gt; \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"‚Ä¶\n$ party18    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\",‚Ä¶\n$ dem18      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0‚Ä¶\n$ flip18     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0‚Ä¶\n$ gerry      &lt;fct&gt; mid, high, high, high, high, high, high, high, mi‚Ä¶"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#mutate-1",
    "href": "slides/05-exploring-data-II.html#mutate-1",
    "title": "Exploring data II",
    "section": "mutate()",
    "text": "mutate()\n\nWe want to use flip18 as a categorical variable\nBut it‚Äôs stored as a numeric\nSo we need to change its type first, before we can use it as a categorical variable\nThe mutate() function transforms (mutates) a data frame by creating a new column or updating an existing one"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#mutate-in-action",
    "href": "slides/05-exploring-data-II.html#mutate-in-action",
    "title": "Exploring data II",
    "section": "\nmutate() in action",
    "text": "mutate() in action"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#revisit-the-plot",
    "href": "slides/05-exploring-data-II.html#revisit-the-plot",
    "title": "Exploring data II",
    "section": "Revisit the plot",
    "text": "Revisit the plot\n\n‚ÄúIs a Congressional District more likely to be flipped to a Democratic seat if it has high prevalence of gerrymandering or low prevalence of gerrymandering?‚Äù"
  },
  {
    "objectID": "slides/05-exploring-data-II.html#ae-05-gerrymander-explore-ii",
    "href": "slides/05-exploring-data-II.html#ae-05-gerrymander-explore-ii",
    "title": "Exploring data II",
    "section": "ae-05-gerrymander-explore-II",
    "text": "ae-05-gerrymander-explore-II\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-05-gerrymander-explore-II.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/05-exploring-data-II.html#recap-aesthetic-mappings",
    "href": "slides/05-exploring-data-II.html#recap-aesthetic-mappings",
    "title": "Exploring data II",
    "section": "Recap: aesthetic mappings",
    "text": "Recap: aesthetic mappings\n\nLocal aesthetic mappings for a given geom\nGlobal aesthetic mappings for all geoms"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#while-you-wait",
    "href": "slides/07-joining-data-slides.html#while-you-wait",
    "title": "Joining data",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\nPrepare for today‚Äôs application exercise: ae-07-taxes-join\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-07-taxes-join.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/07-joining-data-slides.html#announcements",
    "href": "slides/07-joining-data-slides.html#announcements",
    "title": "Joining data",
    "section": "Announcements",
    "text": "Announcements"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#notes-from-lab-1-submissions",
    "href": "slides/07-joining-data-slides.html#notes-from-lab-1-submissions",
    "title": "Joining data",
    "section": "Notes from Lab 1 submissions",
    "text": "Notes from Lab 1 submissions\nUse of AI tools:\n\nIf using an AI tool for code, CITE!\n\n\n\nThe bare minimum citation must include the AI tool you‚Äôre using (e.g., ChatGPT) and your prompt. The prompt you use cannot be copied and pasted directly from the assignment; you must create a prompt yourself.\n\nIf we suspect code was generated with by / with the help of an AI tool but not cited, it‚Äôs an automatic 0 on that question + potentially further penalties as outlined in https://sta199-f24.github.io/course-syllabus.html#academic-honesty.\n\n\nIf using an AI tool for narrative, STOP!"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#notes-from-lab-1-submissions-1",
    "href": "slides/07-joining-data-slides.html#notes-from-lab-1-submissions-1",
    "title": "Joining data",
    "section": "Notes from Lab 1 submissions",
    "text": "Notes from Lab 1 submissions\n\nPlot labeling: Keep it concise and non-redundant (same info doesn‚Äôt need to be repeated, in detail, in axis labels and title).\n\nCode style and readability:\n\nLooking good overall!\nA tool that can help (but won‚Äôt get everything right):\n\nHighlight code you want to style\nClick on Addins (top of editor), scroll down to STYLER, select Style selection\n\n\n\n\nNarrative: Avoid lengthy or conflicting prose"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-statsci-majors",
    "href": "slides/07-joining-data-slides.html#recap-statsci-majors",
    "title": "Joining data",
    "section": "Recap: StatSci majors",
    "text": "Recap: StatSci majors\n\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line()"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-scales",
    "href": "slides/07-joining-data-slides.html#recap-scales",
    "title": "Joining data",
    "section": "Recap: Scales",
    "text": "Recap: Scales\n\nUpdate x-axis scale: 2012 to 2024, increments of 2 years.\n\n\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2))"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-colors",
    "href": "slides/07-joining-data-slides.html#recap-colors",
    "title": "Joining data",
    "section": "Recap: Colors",
    "text": "Recap: Colors\n\nUse custom colors.\n\n\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  )"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-labels-and-themes",
    "href": "slides/07-joining-data-slides.html#recap-labels-and-themes",
    "title": "Joining data",
    "section": "Recap: Labels and themes",
    "text": "Recap: Labels and themes\n\nAdd custom labels and change theme.\n\n\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  ) +\n  labs(\n    x = \"Graduation year\",\n    y = \"Number of majors graduating\",\n    color = \"Degree type\",\n    title = \"Statistical Science majors over the years\",\n    subtitle = \"Academic years 2011 - 2024\",\n    caption = \"Source: Office of the University Registrar\\nhttps://registrar.duke.edu/registration/enrollment-statistics\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-legends",
    "href": "slides/07-joining-data-slides.html#recap-legends",
    "title": "Joining data",
    "section": "Recap: Legends",
    "text": "Recap: Legends\n\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  ) +\n  labs(\n    x = \"Graduation year\",\n    y = \"Number of majors graduating\",\n    color = \"Degree type\",\n    title = \"Statistical Science majors over the years\",\n    subtitle = \"Academic years 2011 - 2024\",\n    caption = \"Source: Office of the University Registrar\\nhttps://registrar.duke.edu/registration/enrollment-statistics\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.1, 0.7),\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-plot-sizing",
    "href": "slides/07-joining-data-slides.html#recap-plot-sizing",
    "title": "Joining data",
    "section": "Recap: Plot sizing",
    "text": "Recap: Plot sizing\n#| label: statsci-plot-5\n#| out-width: 100% \n#| fig-width: 8\n#| fig-asp: 0.5\n# plot code goes here"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-data-tidying",
    "href": "slides/07-joining-data-slides.html#recap-data-tidying",
    "title": "Joining data",
    "section": "Recap: Data tidying",
    "text": "Recap: Data tidying\n\n\nData sets can‚Äôt be labeled as wide or long but they can be made wider or longer for a certain analysis that requires a certain format\nWhen pivoting longer, variable names that turn into values are characters by default. If you need them to be in another format, you need to explicitly make that transformation, which you can do so within the pivot_longer() function.\nYou can tweak a plot forever, but at some point the tweaks are likely not very productive. However, you should always be critical of defaults (however pretty they might be) and see if you can improve the plot to better portray your data / results / what you want to communicate."
  },
  {
    "objectID": "slides/07-joining-data-slides.html#whats-going-on-in-this-plot",
    "href": "slides/07-joining-data-slides.html#whats-going-on-in-this-plot",
    "title": "Joining data",
    "section": "What‚Äôs going on in this plot?",
    "text": "What‚Äôs going on in this plot?\n\nCan you guess the variable plotted here?"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#sales-taxes-in-us-states",
    "href": "slides/07-joining-data-slides.html#sales-taxes-in-us-states",
    "title": "Joining data",
    "section": "Sales taxes in US states",
    "text": "Sales taxes in US states\n\nsales_taxes\n\n# A tibble: 51 √ó 5\n   state       state_tax_rate avg_local_tax_rate combined_rate\n   &lt;chr&gt;                &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;\n 1 Alabama             0.04               0.0529        0.0929\n 2 Alaska              0                  0.0182        0.0182\n 3 Arizona             0.056              0.0278        0.0838\n 4 Arkansas            0.065              0.0295        0.0945\n 5 California          0.0725             0.016         0.0885\n 6 Colorado            0.029              0.0491        0.0781\n 7 Connecticut         0.0635             0             0.0635\n 8 Delaware            0                  0             0     \n 9 Florida             0.06               0.01          0.07  \n10 Georgia             0.04               0.0338        0.0738\n# ‚Ñπ 41 more rows\n# ‚Ñπ 1 more variable: max_local_tax_rate &lt;dbl&gt;"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#sales-tax-in-swing-states",
    "href": "slides/07-joining-data-slides.html#sales-tax-in-swing-states",
    "title": "Joining data",
    "section": "Sales tax in swing states",
    "text": "Sales tax in swing states\n\nSuppose you‚Äôre tasked with the following:\n\nCompare the average state sales tax rates of swing states (Arizona, Georgia, Michigan, Nevada, North Carolina, Pennsylvania, and Wisconsin) vs.¬†non-swing states.\n\nHow would you approach this task?\n\n\n\nCreate a new variable called swing_state with levels \"Swing\" and \"Non-swing\"\n\nGroup by swing_state\n\nSummarize to find the mean sales tax in each type of state"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#mutate-with-if_else",
    "href": "slides/07-joining-data-slides.html#mutate-with-if_else",
    "title": "Joining data",
    "section": "\nmutate() with if_else()\n",
    "text": "mutate() with if_else()\n\n\nCreate a new variable called swing_state with levels \"Swing\" and \"Non-swing\"."
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-if_else",
    "href": "slides/07-joining-data-slides.html#recap-if_else",
    "title": "Joining data",
    "section": "Recap: if_else()\n",
    "text": "Recap: if_else()\n\nif_else(\n1  x == y,\n2  \"x is equal to y\",\n3  \"x is not equal to y\"\n)\n\n1\n\nCondition\n\n2\n\nValue if condition is TRUE\n\n3\n\nValue if condition is FALSE"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#sales-tax-in-swing-states-1",
    "href": "slides/07-joining-data-slides.html#sales-tax-in-swing-states-1",
    "title": "Joining data",
    "section": "Sales tax in swing states",
    "text": "Sales tax in swing states\n\nCompare the average state sales tax rates of swing states vs.¬†non-swing states."
  },
  {
    "objectID": "slides/07-joining-data-slides.html#sales-tax-in-coastal-states",
    "href": "slides/07-joining-data-slides.html#sales-tax-in-coastal-states",
    "title": "Joining data",
    "section": "Sales tax in coastal states",
    "text": "Sales tax in coastal states\n\nSuppose you‚Äôre tasked with the following:\n\nCompare the average state sales tax rates of states on the Pacific Coast, states on the Atlantic Coast, and the rest of the states.\n\nHow would you approach this task?\n\n\n\nCreate a new variable called coast with levels \"Pacific\", \"Atlantic\", and \"Neither\"\n\nGroup by coast\n\nSummarize to find the mean sales tax in each type of state"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#mutate-with-case_when",
    "href": "slides/07-joining-data-slides.html#mutate-with-case_when",
    "title": "Joining data",
    "section": "\nmutate() with case_when()\n",
    "text": "mutate() with case_when()\n\n\nCreate a new variable called coast with levels \"Pacific\", \"Atlantic\", and \"Neither\"."
  },
  {
    "objectID": "slides/07-joining-data-slides.html#recap-case_when",
    "href": "slides/07-joining-data-slides.html#recap-case_when",
    "title": "Joining data",
    "section": "Recap: case_when()\n",
    "text": "Recap: case_when()\n\ncase_when(\n1  x &gt; y  ~ \"x is greater than y\",\n2  x &lt; y  ~ \"x is less than y\",\n3  .default = \"x is equal to y\"\n)\n\n1\n\nValue if first condition is TRUE\n\n2\n\nValue if second condition is TRUE\n\n3\n\nValue if neither condition is TRUE, i.e., default value"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#sales-tax-in-coastal-states-1",
    "href": "slides/07-joining-data-slides.html#sales-tax-in-coastal-states-1",
    "title": "Joining data",
    "section": "Sales tax in coastal states",
    "text": "Sales tax in coastal states\n\nCompare the average state sales tax rates of states on the Pacific Coast, states on the Atlantic Coast, and the rest of the states."
  },
  {
    "objectID": "slides/07-joining-data-slides.html#sales-tax-in-us-regions",
    "href": "slides/07-joining-data-slides.html#sales-tax-in-us-regions",
    "title": "Joining data",
    "section": "Sales tax in US regions",
    "text": "Sales tax in US regions\n\nSuppose you‚Äôre tasked with the following:\n\nCompare the average state sales tax rates of states in various regions (Midwest - 12 states, Northeast - 9 states, South - 16 states, West - 13 states).\n\nHow would you approach this task?\n\n\n\nCreate a new variable called region with levels \"Midwest\", \"Northeast\", \"South\", and \"West\".\nGroup by region\n\nSummarize to find the mean sales tax in each type of state"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#mutate-with-case_when-1",
    "href": "slides/07-joining-data-slides.html#mutate-with-case_when-1",
    "title": "Joining data",
    "section": "\nmutate() with case_when()\n",
    "text": "mutate() with case_when()\n\n\nWho feels like filling in the blanks lists of states in each region? Who feels like it‚Äôs simply too tedious to write out names of all states?"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#why-join",
    "href": "slides/07-joining-data-slides.html#why-join",
    "title": "Joining data",
    "section": "Why join?",
    "text": "Why join?\nSuppose we want to answer questions like:\n\nIs there a relationship between\n- number of QS courses taken\n- having scored a 4 or 5 on the AP stats exam\n- motivation for taking course\n- ‚Ä¶\nand performance in this course?‚Äù\n\n\nEach of these would require joining class performance data with an outside data source so we can have all relevant information (columns) in a single data frame."
  },
  {
    "objectID": "slides/07-joining-data-slides.html#why-join-1",
    "href": "slides/07-joining-data-slides.html#why-join-1",
    "title": "Joining data",
    "section": "Why join?",
    "text": "Why join?\nSuppose we want to answer questions like:\n\nCompare the average state sales tax rates of states in various regions (Midwest - 12 states, Northeast - 9 states, South - 16 states, West - 13 states).\n\n\nThis can also be solved with joining region information with the state-level sales tax data."
  },
  {
    "objectID": "slides/07-joining-data-slides.html#setup",
    "href": "slides/07-joining-data-slides.html#setup",
    "title": "Joining data",
    "section": "Setup",
    "text": "Setup\nFor the next few slides‚Ä¶\n\n\n\nx &lt;- tibble(\n  id = c(1, 2, 3),\n  value_x = c(\"x1\", \"x2\", \"x3\")\n  )\n\nx\n\n# A tibble: 3 √ó 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny &lt;- tibble(\n  id = c(1, 2, 4),\n  value_y = c(\"y1\", \"y2\", \"y4\")\n  )\n\ny\n\n# A tibble: 3 √ó 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#left_join",
    "href": "slides/07-joining-data-slides.html#left_join",
    "title": "Joining data",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\nleft_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 3 √ó 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#right_join",
    "href": "slides/07-joining-data-slides.html#right_join",
    "title": "Joining data",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\nright_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 3 √ó 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#full_join",
    "href": "slides/07-joining-data-slides.html#full_join",
    "title": "Joining data",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\nfull_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 4 √ó 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#inner_join",
    "href": "slides/07-joining-data-slides.html#inner_join",
    "title": "Joining data",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\ninner_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 2 √ó 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#semi_join",
    "href": "slides/07-joining-data-slides.html#semi_join",
    "title": "Joining data",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\nsemi_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 2 √ó 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#anti_join",
    "href": "slides/07-joining-data-slides.html#anti_join",
    "title": "Joining data",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\nanti_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 1 √ó 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#goal",
    "href": "slides/07-joining-data-slides.html#goal",
    "title": "Joining data",
    "section": "Goal",
    "text": "Goal\nCompare the average state sales tax rates of states in various regions (Midwest, Northeast, South, West), where the input data are:\n\nStates and sales taxes\nStates and regions"
  },
  {
    "objectID": "slides/07-joining-data-slides.html#ae-07-taxes-join",
    "href": "slides/07-joining-data-slides.html#ae-07-taxes-join",
    "title": "Joining data",
    "section": "ae-07-taxes-join",
    "text": "ae-07-taxes-join\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-07-taxes-join.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class.\n\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/07-joining-data.html#while-you-wait",
    "href": "slides/07-joining-data.html#while-you-wait",
    "title": "Joining data",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\nPrepare for today‚Äôs application exercise: ae-07-taxes-join\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-07-taxes-join.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/07-joining-data.html#announcements",
    "href": "slides/07-joining-data.html#announcements",
    "title": "Joining data",
    "section": "Announcements",
    "text": "Announcements"
  },
  {
    "objectID": "slides/07-joining-data.html#notes-from-lab-1-submissions",
    "href": "slides/07-joining-data.html#notes-from-lab-1-submissions",
    "title": "Joining data",
    "section": "Notes from Lab 1 submissions",
    "text": "Notes from Lab 1 submissions\nUse of AI tools:\n\nIf using an AI tool for code, CITE!\n\n\n\nThe bare minimum citation must include the AI tool you‚Äôre using (e.g., ChatGPT) and your prompt. The prompt you use cannot be copied and pasted directly from the assignment; you must create a prompt yourself.\n\nIf we suspect code was generated with by / with the help of an AI tool but not cited, it‚Äôs an automatic 0 on that question + potentially further penalties as outlined in https://sta199-f24.github.io/course-syllabus.html#academic-honesty.\n. . .\n\nIf using an AI tool for narrative, STOP!"
  },
  {
    "objectID": "slides/07-joining-data.html#notes-from-lab-1-submissions-1",
    "href": "slides/07-joining-data.html#notes-from-lab-1-submissions-1",
    "title": "Joining data",
    "section": "Notes from Lab 1 submissions",
    "text": "Notes from Lab 1 submissions\n\nPlot labeling: Keep it concise and non-redundant (same info doesn‚Äôt need to be repeated, in detail, in axis labels and title).\n\nCode style and readability:\n\nLooking good overall!\nA tool that can help (but won‚Äôt get everything right):\n\nHighlight code you want to style\nClick on Addins (top of editor), scroll down to STYLER, select Style selection\n\n\n\n\nNarrative: Avoid lengthy or conflicting prose"
  },
  {
    "objectID": "slides/07-joining-data.html#recap-statsci-majors",
    "href": "slides/07-joining-data.html#recap-statsci-majors",
    "title": "Joining data",
    "section": "Recap: StatSci majors",
    "text": "Recap: StatSci majors\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line()"
  },
  {
    "objectID": "slides/07-joining-data.html#recap-scales",
    "href": "slides/07-joining-data.html#recap-scales",
    "title": "Joining data",
    "section": "Recap: Scales",
    "text": "Recap: Scales\n\nUpdate x-axis scale: 2012 to 2024, increments of 2 years.\n\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2))"
  },
  {
    "objectID": "slides/07-joining-data.html#recap-colors",
    "href": "slides/07-joining-data.html#recap-colors",
    "title": "Joining data",
    "section": "Recap: Colors",
    "text": "Recap: Colors\n\nUse custom colors.\n\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  )"
  },
  {
    "objectID": "slides/07-joining-data.html#recap-labels-and-themes",
    "href": "slides/07-joining-data.html#recap-labels-and-themes",
    "title": "Joining data",
    "section": "Recap: Labels and themes",
    "text": "Recap: Labels and themes\n\nAdd custom labels and change theme.\n\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  ) +\n  labs(\n    x = \"Graduation year\",\n    y = \"Number of majors graduating\",\n    color = \"Degree type\",\n    title = \"Statistical Science majors over the years\",\n    subtitle = \"Academic years 2011 - 2024\",\n    caption = \"Source: Office of the University Registrar\\nhttps://registrar.duke.edu/registration/enrollment-statistics\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "slides/07-joining-data.html#recap-legends",
    "href": "slides/07-joining-data.html#recap-legends",
    "title": "Joining data",
    "section": "Recap: Legends",
    "text": "Recap: Legends\n\nggplot(\n  statsci_longer, \n  aes(\n    x = year, y = n, color = degree_type\n    )\n  ) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2012, 2024, 2)) +\n  scale_color_manual(\n    values = c(\n      \"BS\" = \"cadetblue4\",\n      \"BS2\" = \"cadetblue3\",\n      \"AB\" = \"lightgoldenrod4\",\n      \"AB2\" = \"lightgoldenrod3\"\n    )\n  ) +\n  labs(\n    x = \"Graduation year\",\n    y = \"Number of majors graduating\",\n    color = \"Degree type\",\n    title = \"Statistical Science majors over the years\",\n    subtitle = \"Academic years 2011 - 2024\",\n    caption = \"Source: Office of the University Registrar\\nhttps://registrar.duke.edu/registration/enrollment-statistics\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.1, 0.7),\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n  )"
  },
  {
    "objectID": "slides/07-joining-data.html#recap-plot-sizing",
    "href": "slides/07-joining-data.html#recap-plot-sizing",
    "title": "Joining data",
    "section": "Recap: Plot sizing",
    "text": "Recap: Plot sizing\n#| label: statsci-plot-5\n#| out-width: 100% \n#| fig-width: 8\n#| fig-asp: 0.5\n# plot code goes here"
  },
  {
    "objectID": "slides/07-joining-data.html#recap-data-tidying",
    "href": "slides/07-joining-data.html#recap-data-tidying",
    "title": "Joining data",
    "section": "Recap: Data tidying",
    "text": "Recap: Data tidying\n\n\nData sets can‚Äôt be labeled as wide or long but they can be made wider or longer for a certain analysis that requires a certain format\nWhen pivoting longer, variable names that turn into values are characters by default. If you need them to be in another format, you need to explicitly make that transformation, which you can do so within the pivot_longer() function.\nYou can tweak a plot forever, but at some point the tweaks are likely not very productive. However, you should always be critical of defaults (however pretty they might be) and see if you can improve the plot to better portray your data / results / what you want to communicate."
  },
  {
    "objectID": "slides/07-joining-data.html#whats-going-on-in-this-plot",
    "href": "slides/07-joining-data.html#whats-going-on-in-this-plot",
    "title": "Joining data",
    "section": "What‚Äôs going on in this plot?",
    "text": "What‚Äôs going on in this plot?\n\nCan you guess the variable plotted here?"
  },
  {
    "objectID": "slides/07-joining-data.html#sales-taxes-in-us-states",
    "href": "slides/07-joining-data.html#sales-taxes-in-us-states",
    "title": "Joining data",
    "section": "Sales taxes in US states",
    "text": "Sales taxes in US states\n\nsales_taxes\n\n# A tibble: 51 √ó 5\n   state       state_tax_rate avg_local_tax_rate combined_rate\n   &lt;chr&gt;                &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;\n 1 Alabama             0.04               0.0529        0.0929\n 2 Alaska              0                  0.0182        0.0182\n 3 Arizona             0.056              0.0278        0.0838\n 4 Arkansas            0.065              0.0295        0.0945\n 5 California          0.0725             0.016         0.0885\n 6 Colorado            0.029              0.0491        0.0781\n 7 Connecticut         0.0635             0             0.0635\n 8 Delaware            0                  0             0     \n 9 Florida             0.06               0.01          0.07  \n10 Georgia             0.04               0.0338        0.0738\n# ‚Ñπ 41 more rows\n# ‚Ñπ 1 more variable: max_local_tax_rate &lt;dbl&gt;"
  },
  {
    "objectID": "slides/07-joining-data.html#sales-tax-in-swing-states",
    "href": "slides/07-joining-data.html#sales-tax-in-swing-states",
    "title": "Joining data",
    "section": "Sales tax in swing states",
    "text": "Sales tax in swing states\n\nSuppose you‚Äôre tasked with the following:\n\nCompare the average state sales tax rates of swing states (Arizona, Georgia, Michigan, Nevada, North Carolina, Pennsylvania, and Wisconsin) vs.¬†non-swing states.\n\nHow would you approach this task?\n\n. . .\n\nCreate a new variable called swing_state with levels \"Swing\" and \"Non-swing\"\n\nGroup by swing_state\n\nSummarize to find the mean sales tax in each type of state"
  },
  {
    "objectID": "slides/07-joining-data.html#mutate-with-if_else",
    "href": "slides/07-joining-data.html#mutate-with-if_else",
    "title": "Joining data",
    "section": "\nmutate() with if_else()\n",
    "text": "mutate() with if_else()\n\n\nCreate a new variable called swing_state with levels \"Swing\" and \"Non-swing\"."
  },
  {
    "objectID": "slides/07-joining-data.html#recap-if_else",
    "href": "slides/07-joining-data.html#recap-if_else",
    "title": "Joining data",
    "section": "Recap: if_else()\n",
    "text": "Recap: if_else()\n\nif_else(\n  x == y,\n  \"x is equal to y\",\n  \"x is not equal to y\"\n)\n\n1\n\nCondition\n\n2\n\nValue if condition is TRUE\n\n3\n\nValue if condition is FALSE"
  },
  {
    "objectID": "slides/07-joining-data.html#sales-tax-in-swing-states-1",
    "href": "slides/07-joining-data.html#sales-tax-in-swing-states-1",
    "title": "Joining data",
    "section": "Sales tax in swing states",
    "text": "Sales tax in swing states\n\nCompare the average state sales tax rates of swing states vs.¬†non-swing states."
  },
  {
    "objectID": "slides/07-joining-data.html#sales-tax-in-coastal-states",
    "href": "slides/07-joining-data.html#sales-tax-in-coastal-states",
    "title": "Joining data",
    "section": "Sales tax in coastal states",
    "text": "Sales tax in coastal states\n\nSuppose you‚Äôre tasked with the following:\n\nCompare the average state sales tax rates of states on the Pacific Coast, states on the Atlantic Coast, and the rest of the states.\n\nHow would you approach this task?\n\n. . .\n\nCreate a new variable called coast with levels \"Pacific\", \"Atlantic\", and \"Neither\"\n\nGroup by coast\n\nSummarize to find the mean sales tax in each type of state"
  },
  {
    "objectID": "slides/07-joining-data.html#mutate-with-case_when",
    "href": "slides/07-joining-data.html#mutate-with-case_when",
    "title": "Joining data",
    "section": "\nmutate() with case_when()\n",
    "text": "mutate() with case_when()\n\n\nCreate a new variable called coast with levels \"Pacific\", \"Atlantic\", and \"Neither\"."
  },
  {
    "objectID": "slides/07-joining-data.html#recap-case_when",
    "href": "slides/07-joining-data.html#recap-case_when",
    "title": "Joining data",
    "section": "Recap: case_when()\n",
    "text": "Recap: case_when()\n\ncase_when(\n  x &gt; y  ~ \"x is greater than y\",\n  x &lt; y  ~ \"x is less than y\",\n  .default = \"x is equal to y\"\n)\n\n1\n\nValue if first condition is TRUE\n\n2\n\nValue if second condition is TRUE\n\n3\n\nValue if neither condition is TRUE, i.e., default value"
  },
  {
    "objectID": "slides/07-joining-data.html#sales-tax-in-coastal-states-1",
    "href": "slides/07-joining-data.html#sales-tax-in-coastal-states-1",
    "title": "Joining data",
    "section": "Sales tax in coastal states",
    "text": "Sales tax in coastal states\n\nCompare the average state sales tax rates of states on the Pacific Coast, states on the Atlantic Coast, and the rest of the states."
  },
  {
    "objectID": "slides/07-joining-data.html#sales-tax-in-us-regions",
    "href": "slides/07-joining-data.html#sales-tax-in-us-regions",
    "title": "Joining data",
    "section": "Sales tax in US regions",
    "text": "Sales tax in US regions\n\nSuppose you‚Äôre tasked with the following:\n\nCompare the average state sales tax rates of states in various regions (Midwest - 12 states, Northeast - 9 states, South - 16 states, West - 13 states).\n\nHow would you approach this task?\n\n. . .\n\nCreate a new variable called region with levels \"Midwest\", \"Northeast\", \"South\", and \"West\".\nGroup by region\n\nSummarize to find the mean sales tax in each type of state"
  },
  {
    "objectID": "slides/07-joining-data.html#mutate-with-case_when-1",
    "href": "slides/07-joining-data.html#mutate-with-case_when-1",
    "title": "Joining data",
    "section": "\nmutate() with case_when()\n",
    "text": "mutate() with case_when()\n\n\nWho feels like filling in the blanks lists of states in each region? Who feels like it‚Äôs simply too tedious to write out names of all states?"
  },
  {
    "objectID": "slides/07-joining-data.html#why-join",
    "href": "slides/07-joining-data.html#why-join",
    "title": "Joining data",
    "section": "Why join?",
    "text": "Why join?\nSuppose we want to answer questions like:\n\nIs there a relationship between\n- number of QS courses taken\n- having scored a 4 or 5 on the AP stats exam\n- motivation for taking course\n- ‚Ä¶\nand performance in this course?‚Äù\n\n. . .\nEach of these would require joining class performance data with an outside data source so we can have all relevant information (columns) in a single data frame."
  },
  {
    "objectID": "slides/07-joining-data.html#why-join-1",
    "href": "slides/07-joining-data.html#why-join-1",
    "title": "Joining data",
    "section": "Why join?",
    "text": "Why join?\nSuppose we want to answer questions like:\n\nCompare the average state sales tax rates of states in various regions (Midwest - 12 states, Northeast - 9 states, South - 16 states, West - 13 states).\n\n. . .\nThis can also be solved with joining region information with the state-level sales tax data."
  },
  {
    "objectID": "slides/07-joining-data.html#setup",
    "href": "slides/07-joining-data.html#setup",
    "title": "Joining data",
    "section": "Setup",
    "text": "Setup\nFor the next few slides‚Ä¶\n\n\n\nx &lt;- tibble(\n  id = c(1, 2, 3),\n  value_x = c(\"x1\", \"x2\", \"x3\")\n  )\n\nx\n\n# A tibble: 3 √ó 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny &lt;- tibble(\n  id = c(1, 2, 4),\n  value_y = c(\"y1\", \"y2\", \"y4\")\n  )\n\ny\n\n# A tibble: 3 √ó 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/07-joining-data.html#left_join",
    "href": "slides/07-joining-data.html#left_join",
    "title": "Joining data",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\nleft_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 3 √ó 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/07-joining-data.html#right_join",
    "href": "slides/07-joining-data.html#right_join",
    "title": "Joining data",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\nright_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 3 √ó 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/07-joining-data.html#full_join",
    "href": "slides/07-joining-data.html#full_join",
    "title": "Joining data",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\nfull_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 4 √ó 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/07-joining-data.html#inner_join",
    "href": "slides/07-joining-data.html#inner_join",
    "title": "Joining data",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\ninner_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 2 √ó 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/07-joining-data.html#semi_join",
    "href": "slides/07-joining-data.html#semi_join",
    "title": "Joining data",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\nsemi_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 2 √ó 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/07-joining-data.html#anti_join",
    "href": "slides/07-joining-data.html#anti_join",
    "title": "Joining data",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\nanti_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 1 √ó 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/07-joining-data.html#goal",
    "href": "slides/07-joining-data.html#goal",
    "title": "Joining data",
    "section": "Goal",
    "text": "Goal\nCompare the average state sales tax rates of states in various regions (Midwest, Northeast, South, West), where the input data are:\n\nStates and sales taxes\nStates and regions"
  },
  {
    "objectID": "slides/07-joining-data.html#ae-07-taxes-join",
    "href": "slides/07-joining-data.html#ae-07-taxes-join",
    "title": "Joining data",
    "section": "ae-07-taxes-join",
    "text": "ae-07-taxes-join\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-07-taxes-join.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#while-you-wait",
    "href": "slides/08-data-types-classes-slides.html#while-you-wait",
    "title": "Data types and classes",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\n\n\n\n\nLoading‚Ä¶\n\n\nPrepare for today‚Äôs application exercise: ae-08-durham-climate-factors\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-08-durham-climate-factors.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#lab-1-feedback",
    "href": "slides/08-data-types-classes-slides.html#lab-1-feedback",
    "title": "Data types and classes",
    "section": "Lab 1 feedback",
    "text": "Lab 1 feedback\n\n\nDescribing a distribution:\n\nshape (modality and skewness)\ncenter (with calculated value or estimated value or range)\nspread (with calculated value or estimated value or range)\nunusual observations (and, where possible, explanation for why they‚Äôre unusual)\n\n\nDescribing a relationship:\n\ndirection (positive or negative)\nform (linear or non-linear)\nstrength\nunusual observations (and, where possible, explanation for why they‚Äôre unusual)"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#lab-1-commits",
    "href": "slides/08-data-types-classes-slides.html#lab-1-commits",
    "title": "Data types and classes",
    "section": "Lab 1 commits",
    "text": "Lab 1 commits"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#regrade-request-policy",
    "href": "slides/08-data-types-classes-slides.html#regrade-request-policy",
    "title": "Data types and classes",
    "section": "Regrade request policy",
    "text": "Regrade request policy\nhttps://sta199-f24.github.io/course-syllabus.html#regrade-requests\n\n\nConsidered for errors in grade calculation or if a correct answer was mistakenly marked as incorrect\n\nNot a mechanism for:\n\ndisputing the number of points deducted for an incorrect response\nasking for clarification on feedback (come to office hours instead)\n\n\nDue on Gradescope within a week after an assignment is returned\nThe entire assignment may be regraded, which could result in an adjustment in either direction\nNo regrade requests after the final exam has been administered"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#how-many-classes-do-you-have-on-tuesdays",
    "href": "slides/08-data-types-classes-slides.html#how-many-classes-do-you-have-on-tuesdays",
    "title": "Data types and classes",
    "section": "How many classes do you have on Tuesdays?",
    "text": "How many classes do you have on Tuesdays?\n\nsurvey\n\n# A tibble: 61 √ó 3\n   Timestamp     How many classes do you have o‚Ä¶¬π `What year are you?`\n   &lt;chr&gt;         &lt;chr&gt;                            &lt;chr&gt;               \n 1 9/23/24 19:57 2                                Sophomore           \n 2 9/23/24 19:58 3                                First-year          \n 3 9/23/24 20:06 2                                Sophomore           \n 4 9/23/24 20:09 2                                Sophomore           \n 5 9/23/24 21:48 0                                Senior              \n 6 9/24/24 9:44  2                                First-year          \n 7 9/24/24 10:15 2                                Senior              \n 8 9/24/24 10:50 2                                Sophomore           \n 9 9/24/24 10:54 3                                First-year          \n10 9/24/24 11:08 2                                Senior              \n# ‚Ñπ 51 more rows\n# ‚Ñπ abbreviated name: ¬π‚Äã`How many classes do you have on Tuesdays?`"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#rename-variables",
    "href": "slides/08-data-types-classes-slides.html#rename-variables",
    "title": "Data types and classes",
    "section": "\nrename() variables",
    "text": "rename() variables\nTo make them easier to work with‚Ä¶\n\nsurvey &lt;- survey |&gt;\n  rename(\n    tue_classes = `How many classes do you have on Tuesdays?`,\n    year = `What year are you?`\n  )"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#variable-types",
    "href": "slides/08-data-types-classes-slides.html#variable-types",
    "title": "Data types and classes",
    "section": "Variable types",
    "text": "Variable types\n\nWhat type of variable is tue_classes?\n\n\nsurvey\n\n# A tibble: 61 √ó 3\n   Timestamp     tue_classes year      \n   &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;     \n 1 9/23/24 19:57 2           Sophomore \n 2 9/23/24 19:58 3           First-year\n 3 9/23/24 20:06 2           Sophomore \n 4 9/23/24 20:09 2           Sophomore \n 5 9/23/24 21:48 0           Senior    \n 6 9/24/24 9:44  2           First-year\n 7 9/24/24 10:15 2           Senior    \n 8 9/24/24 10:50 2           Sophomore \n 9 9/24/24 10:54 3           First-year\n10 9/24/24 11:08 2           Senior    \n# ‚Ñπ 51 more rows"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#lets-attempt-to-clean-it-up",
    "href": "slides/08-data-types-classes-slides.html#lets-attempt-to-clean-it-up",
    "title": "Data types and classes",
    "section": "Let‚Äôs (attempt to) clean it up‚Ä¶",
    "text": "Let‚Äôs (attempt to) clean it up‚Ä¶"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#data-types-in-r",
    "href": "slides/08-data-types-classes-slides.html#data-types-in-r",
    "title": "Data types and classes",
    "section": "Data types in R",
    "text": "Data types in R\n\nlogical\ndouble\ninteger\ncharacter\nand some more, but we won‚Äôt be focusing on those"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#logical-character",
    "href": "slides/08-data-types-classes-slides.html#logical-character",
    "title": "Data types and classes",
    "section": "Logical & character",
    "text": "Logical & character\n\n\nlogical - Boolean values TRUE and FALSE\n\n\ntypeof(TRUE)\n\n[1] \"logical\"\n\n\n\ncharacter - character strings\n\n\ntypeof(\"First-year\")\n\n[1] \"character\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#double-integer",
    "href": "slides/08-data-types-classes-slides.html#double-integer",
    "title": "Data types and classes",
    "section": "Double & integer",
    "text": "Double & integer\n\n\ndouble - floating point numerical values (default numerical type)\n\n\ntypeof(2.5)\n\n[1] \"double\"\n\ntypeof(3)\n\n[1] \"double\"\n\n\n\ninteger - integer numerical values (indicated with an L)\n\n\ntypeof(3L)\n\n[1] \"integer\"\n\ntypeof(1:3)\n\n[1] \"integer\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#concatenation",
    "href": "slides/08-data-types-classes-slides.html#concatenation",
    "title": "Data types and classes",
    "section": "Concatenation",
    "text": "Concatenation\nVectors can be constructed using the c() function.\n\nNumeric vector:\n\n\nc(1, 2, 3)\n\n[1] 1 2 3\n\n\n\n\nCharacter vector:\n\n\nc(\"Hello\", \"World!\")\n\n[1] \"Hello\"  \"World!\"\n\n\n\n\n\nVector made of vectors:\n\n\nc(c(\"hi\", \"hello\"), c(\"bye\", \"jello\"))\n\n[1] \"hi\"    \"hello\" \"bye\"   \"jello\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#converting-between-types",
    "href": "slides/08-data-types-classes-slides.html#converting-between-types",
    "title": "Data types and classes",
    "section": "Converting between types",
    "text": "Converting between types\n\nwith intention‚Ä¶\n\n\n\n\nx &lt;- 1:3\nx\n\n[1] 1 2 3\n\ntypeof(x)\n\n[1] \"integer\"\n\n\n\n\ny &lt;- as.character(x)\ny\n\n[1] \"1\" \"2\" \"3\"\n\ntypeof(y)\n\n[1] \"character\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#converting-between-types-1",
    "href": "slides/08-data-types-classes-slides.html#converting-between-types-1",
    "title": "Data types and classes",
    "section": "Converting between types",
    "text": "Converting between types\n\nwith intention‚Ä¶\n\n\n\n\nx &lt;- c(TRUE, FALSE)\nx\n\n[1]  TRUE FALSE\n\ntypeof(x)\n\n[1] \"logical\"\n\n\n\n\ny &lt;- as.numeric(x)\ny\n\n[1] 1 0\n\ntypeof(y)\n\n[1] \"double\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#converting-between-types-2",
    "href": "slides/08-data-types-classes-slides.html#converting-between-types-2",
    "title": "Data types and classes",
    "section": "Converting between types",
    "text": "Converting between types\n\nwithout intention‚Ä¶\n\n\nc(2, \"Just this one!\")\n\n[1] \"2\"              \"Just this one!\"\n\n\n\nR will happily convert between various types without complaint when different types of data are concatenated in a vector, and that‚Äôs not always a great thing!"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#converting-between-types-3",
    "href": "slides/08-data-types-classes-slides.html#converting-between-types-3",
    "title": "Data types and classes",
    "section": "Converting between types",
    "text": "Converting between types\n\nwithout intention‚Ä¶\n\n\nc(FALSE, 3L)\n\n[1] 0 3\n\n\n\n\nc(1.2, 3L)\n\n[1] 1.2 3.0\n\n\n\n\n\nc(2L, \"two\")\n\n[1] \"2\"   \"two\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#explicit-vs.-implicit-coercion",
    "href": "slides/08-data-types-classes-slides.html#explicit-vs.-implicit-coercion",
    "title": "Data types and classes",
    "section": "Explicit vs.¬†implicit coercion",
    "text": "Explicit vs.¬†implicit coercion\n\n\nExplicit coercion:\nWhen you call a function like as.logical(), as.numeric(), as.integer(), as.double(), or as.character().\n\nImplicit coercion:\nHappens when you use a vector in a specific context that expects a certain type of vector."
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#data-classes-1",
    "href": "slides/08-data-types-classes-slides.html#data-classes-1",
    "title": "Data types and classes",
    "section": "Data classes",
    "text": "Data classes\n\n\nVectors are like Lego building blocks\nWe stick them together to build more complicated constructs, e.g.¬†representations of data\n\nThe class attribute relates to the S3 class of an object which determines its behaviour\n\nYou don‚Äôt need to worry about what S3 classes really mean, but you can read more about it here if you‚Äôre curious\n\n\nExamples: factors, dates, and data frames"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#factors",
    "href": "slides/08-data-types-classes-slides.html#factors",
    "title": "Data types and classes",
    "section": "Factors",
    "text": "Factors\nR uses factors to handle categorical variables, variables that have a fixed and known set of possible values\n\nclass_years &lt;- factor(\n  c(\n    \"First-year\", \"Sophomore\", \"Sophomore\", \"Senior\", \"Junior\"\n    )\n  )\nclass_years\n\n[1] First-year Sophomore  Sophomore  Senior     Junior    \nLevels: First-year Junior Senior Sophomore\n\n\n\n\n\ntypeof(class_years)\n\n[1] \"integer\"\n\n\n\n\nclass(class_years)\n\n[1] \"factor\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#more-on-factors",
    "href": "slides/08-data-types-classes-slides.html#more-on-factors",
    "title": "Data types and classes",
    "section": "More on factors",
    "text": "More on factors\nWe can think of factors like character (level labels) and an integer (level numbers) glued together\n\nglimpse(class_years)\n\n Factor w/ 4 levels \"First-year\",\"Junior\",..: 1 4 4 3 2\n\n\n\nas.integer(class_years)\n\n[1] 1 4 4 3 2"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#dates",
    "href": "slides/08-data-types-classes-slides.html#dates",
    "title": "Data types and classes",
    "section": "Dates",
    "text": "Dates\n\ntoday &lt;- as.Date(\"2024-09-24\")\ntoday\n\n[1] \"2024-09-24\"\n\n\n\ntypeof(today)\n\n[1] \"double\"\n\n\n\nclass(today)\n\n[1] \"Date\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#more-on-dates",
    "href": "slides/08-data-types-classes-slides.html#more-on-dates",
    "title": "Data types and classes",
    "section": "More on dates",
    "text": "More on dates\nWe can think of dates like an integer (the number of days since the origin, 1 Jan 1970) and an integer (the origin) glued together\n\nas.integer(today)\n\n[1] 19990\n\n\n\nas.integer(today) / 365 # roughly 55 yrs\n\n[1] 54.76712"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#data-frames",
    "href": "slides/08-data-types-classes-slides.html#data-frames",
    "title": "Data types and classes",
    "section": "Data frames",
    "text": "Data frames\nWe can think of data frames like like vectors of equal length glued together\n\ndf &lt;- data.frame(x = 1:2, y = 3:4)\ndf\n\n  x y\n1 1 3\n2 2 4\n\n\n\n\n\ntypeof(df)\n\n[1] \"list\"\n\n\n\n\nclass(df)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#lists",
    "href": "slides/08-data-types-classes-slides.html#lists",
    "title": "Data types and classes",
    "section": "Lists",
    "text": "Lists\nLists are a generic vector container; vectors of any type can go in them\n\nl &lt;- list(\n  x = 1:4,\n  y = c(\"hi\", \"hello\", \"jello\"),\n  z = c(TRUE, FALSE)\n)\nl\n\n$x\n[1] 1 2 3 4\n\n$y\n[1] \"hi\"    \"hello\" \"jello\"\n\n$z\n[1]  TRUE FALSE"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#lists-and-data-frames",
    "href": "slides/08-data-types-classes-slides.html#lists-and-data-frames",
    "title": "Data types and classes",
    "section": "Lists and data frames",
    "text": "Lists and data frames\n\nA data frame is a special list containing vectors of equal length\n\n\ndf\n\n  x y\n1 1 3\n2 2 4\n\n\n\nWhen we use the pull() function, we extract a vector from the data frame\n\n\ndf |&gt;\n  pull(y)\n\n[1] 3 4"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#read-data-in-as-character-strings",
    "href": "slides/08-data-types-classes-slides.html#read-data-in-as-character-strings",
    "title": "Data types and classes",
    "section": "Read data in as character strings",
    "text": "Read data in as character strings\n\nsurvey\n\n# A tibble: 61 √ó 3\n   Timestamp     tue_classes year      \n   &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;     \n 1 9/23/24 19:57 2           Sophomore \n 2 9/23/24 19:58 3           First-year\n 3 9/23/24 20:06 2           Sophomore \n 4 9/23/24 20:09 2           Sophomore \n 5 9/23/24 21:48 0           Senior    \n 6 9/24/24 9:44  2           First-year\n 7 9/24/24 10:15 2           Senior    \n 8 9/24/24 10:50 2           Sophomore \n 9 9/24/24 10:54 3           First-year\n10 9/24/24 11:08 2           Senior    \n# ‚Ñπ 51 more rows"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#but-coerce-when-plotting",
    "href": "slides/08-data-types-classes-slides.html#but-coerce-when-plotting",
    "title": "Data types and classes",
    "section": "But coerce when plotting",
    "text": "But coerce when plotting\n\nggplot(survey, mapping = aes(x = year)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#use-forcats-to-reorder-levels",
    "href": "slides/08-data-types-classes-slides.html#use-forcats-to-reorder-levels",
    "title": "Data types and classes",
    "section": "Use forcats to reorder levels",
    "text": "Use forcats to reorder levels"
  },
  {
    "objectID": "slides/08-data-types-classes-slides.html#a-peek-into-forcats",
    "href": "slides/08-data-types-classes-slides.html#a-peek-into-forcats",
    "title": "Data types and classes",
    "section": "A peek into forcats",
    "text": "A peek into forcats\nReordering levels by:\n\nfct_relevel(): hand\nfct_infreq(): frequency\nfct_reorder(): sorting along another variable\nfct_rev(): reversing\n\n‚Ä¶\n\nChanging level values by:\n\nfct_lump(): lumping uncommon levels together into ‚Äúother‚Äù\nfct_other(): manually replacing some levels with ‚Äúother‚Äù\n\n‚Ä¶\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/08-data-types-classes.html#while-you-wait",
    "href": "slides/08-data-types-classes.html#while-you-wait",
    "title": "Data types and classes",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\n\n\n\n\nLoading‚Ä¶\n\n\nPrepare for today‚Äôs application exercise: ae-08-durham-climate-factors\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-08-durham-climate-factors.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/08-data-types-classes.html#lab-1-feedback",
    "href": "slides/08-data-types-classes.html#lab-1-feedback",
    "title": "Data types and classes",
    "section": "Lab 1 feedback",
    "text": "Lab 1 feedback\n\n\nDescribing a distribution:\n\nshape (modality and skewness)\ncenter (with calculated value or estimated value or range)\nspread (with calculated value or estimated value or range)\nunusual observations (and, where possible, explanation for why they‚Äôre unusual)\n\n\nDescribing a relationship:\n\ndirection (positive or negative)\nform (linear or non-linear)\nstrength\nunusual observations (and, where possible, explanation for why they‚Äôre unusual)"
  },
  {
    "objectID": "slides/08-data-types-classes.html#lab-1-commits",
    "href": "slides/08-data-types-classes.html#lab-1-commits",
    "title": "Data types and classes",
    "section": "Lab 1 commits",
    "text": "Lab 1 commits"
  },
  {
    "objectID": "slides/08-data-types-classes.html#regrade-request-policy",
    "href": "slides/08-data-types-classes.html#regrade-request-policy",
    "title": "Data types and classes",
    "section": "Regrade request policy",
    "text": "Regrade request policy\nhttps://sta199-f24.github.io/course-syllabus.html#regrade-requests\n\n\nConsidered for errors in grade calculation or if a correct answer was mistakenly marked as incorrect\n\nNot a mechanism for:\n\ndisputing the number of points deducted for an incorrect response\nasking for clarification on feedback (come to office hours instead)\n\n\nDue on Gradescope within a week after an assignment is returned\nThe entire assignment may be regraded, which could result in an adjustment in either direction\nNo regrade requests after the final exam has been administered"
  },
  {
    "objectID": "slides/08-data-types-classes.html#how-many-classes-do-you-have-on-tuesdays",
    "href": "slides/08-data-types-classes.html#how-many-classes-do-you-have-on-tuesdays",
    "title": "Data types and classes",
    "section": "How many classes do you have on Tuesdays?",
    "text": "How many classes do you have on Tuesdays?\n\nsurvey\n\n# A tibble: 61 √ó 3\n   Timestamp     How many classes do you have o‚Ä¶¬π `What year are you?`\n   &lt;chr&gt;         &lt;chr&gt;                            &lt;chr&gt;               \n 1 9/23/24 19:57 2                                Sophomore           \n 2 9/23/24 19:58 3                                First-year          \n 3 9/23/24 20:06 2                                Sophomore           \n 4 9/23/24 20:09 2                                Sophomore           \n 5 9/23/24 21:48 0                                Senior              \n 6 9/24/24 9:44  2                                First-year          \n 7 9/24/24 10:15 2                                Senior              \n 8 9/24/24 10:50 2                                Sophomore           \n 9 9/24/24 10:54 3                                First-year          \n10 9/24/24 11:08 2                                Senior              \n# ‚Ñπ 51 more rows\n# ‚Ñπ abbreviated name: ¬π‚Äã`How many classes do you have on Tuesdays?`"
  },
  {
    "objectID": "slides/08-data-types-classes.html#rename-variables",
    "href": "slides/08-data-types-classes.html#rename-variables",
    "title": "Data types and classes",
    "section": "\nrename() variables",
    "text": "rename() variables\nTo make them easier to work with‚Ä¶\n\nsurvey &lt;- survey |&gt;\n  rename(\n    tue_classes = `How many classes do you have on Tuesdays?`,\n    year = `What year are you?`\n  )"
  },
  {
    "objectID": "slides/08-data-types-classes.html#variable-types",
    "href": "slides/08-data-types-classes.html#variable-types",
    "title": "Data types and classes",
    "section": "Variable types",
    "text": "Variable types\n\nWhat type of variable is tue_classes?\n\n\nsurvey\n\n# A tibble: 61 √ó 3\n   Timestamp     tue_classes year      \n   &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;     \n 1 9/23/24 19:57 2           Sophomore \n 2 9/23/24 19:58 3           First-year\n 3 9/23/24 20:06 2           Sophomore \n 4 9/23/24 20:09 2           Sophomore \n 5 9/23/24 21:48 0           Senior    \n 6 9/24/24 9:44  2           First-year\n 7 9/24/24 10:15 2           Senior    \n 8 9/24/24 10:50 2           Sophomore \n 9 9/24/24 10:54 3           First-year\n10 9/24/24 11:08 2           Senior    \n# ‚Ñπ 51 more rows"
  },
  {
    "objectID": "slides/08-data-types-classes.html#lets-attempt-to-clean-it-up",
    "href": "slides/08-data-types-classes.html#lets-attempt-to-clean-it-up",
    "title": "Data types and classes",
    "section": "Let‚Äôs (attempt to) clean it up‚Ä¶",
    "text": "Let‚Äôs (attempt to) clean it up‚Ä¶"
  },
  {
    "objectID": "slides/08-data-types-classes.html#data-types-in-r",
    "href": "slides/08-data-types-classes.html#data-types-in-r",
    "title": "Data types and classes",
    "section": "Data types in R",
    "text": "Data types in R\n\nlogical\ndouble\ninteger\ncharacter\nand some more, but we won‚Äôt be focusing on those"
  },
  {
    "objectID": "slides/08-data-types-classes.html#logical-character",
    "href": "slides/08-data-types-classes.html#logical-character",
    "title": "Data types and classes",
    "section": "Logical & character",
    "text": "Logical & character\n\n\nlogical - Boolean values TRUE and FALSE\n\n\ntypeof(TRUE)\n\n[1] \"logical\"\n\n\n\n\ncharacter - character strings\n\n\ntypeof(\"First-year\")\n\n[1] \"character\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#double-integer",
    "href": "slides/08-data-types-classes.html#double-integer",
    "title": "Data types and classes",
    "section": "Double & integer",
    "text": "Double & integer\n\n\ndouble - floating point numerical values (default numerical type)\n\n\ntypeof(2.5)\n\n[1] \"double\"\n\ntypeof(3)\n\n[1] \"double\"\n\n\n\n\ninteger - integer numerical values (indicated with an L)\n\n\ntypeof(3L)\n\n[1] \"integer\"\n\ntypeof(1:3)\n\n[1] \"integer\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#concatenation",
    "href": "slides/08-data-types-classes.html#concatenation",
    "title": "Data types and classes",
    "section": "Concatenation",
    "text": "Concatenation\nVectors can be constructed using the c() function.\n\nNumeric vector:\n\n\nc(1, 2, 3)\n\n[1] 1 2 3\n\n\n. . .\n\nCharacter vector:\n\n\nc(\"Hello\", \"World!\")\n\n[1] \"Hello\"  \"World!\"\n\n\n. . .\n\nVector made of vectors:\n\n\nc(c(\"hi\", \"hello\"), c(\"bye\", \"jello\"))\n\n[1] \"hi\"    \"hello\" \"bye\"   \"jello\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#converting-between-types",
    "href": "slides/08-data-types-classes.html#converting-between-types",
    "title": "Data types and classes",
    "section": "Converting between types",
    "text": "Converting between types\n\nwith intention‚Ä¶\n\n\n\n\nx &lt;- 1:3\nx\n\n[1] 1 2 3\n\ntypeof(x)\n\n[1] \"integer\"\n\n\n\n\n\ny &lt;- as.character(x)\ny\n\n[1] \"1\" \"2\" \"3\"\n\ntypeof(y)\n\n[1] \"character\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#converting-between-types-1",
    "href": "slides/08-data-types-classes.html#converting-between-types-1",
    "title": "Data types and classes",
    "section": "Converting between types",
    "text": "Converting between types\n\nwith intention‚Ä¶\n\n\n\n\nx &lt;- c(TRUE, FALSE)\nx\n\n[1]  TRUE FALSE\n\ntypeof(x)\n\n[1] \"logical\"\n\n\n\n\n\ny &lt;- as.numeric(x)\ny\n\n[1] 1 0\n\ntypeof(y)\n\n[1] \"double\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#converting-between-types-2",
    "href": "slides/08-data-types-classes.html#converting-between-types-2",
    "title": "Data types and classes",
    "section": "Converting between types",
    "text": "Converting between types\n\nwithout intention‚Ä¶\n\n\nc(2, \"Just this one!\")\n\n[1] \"2\"              \"Just this one!\"\n\n\n. . .\nR will happily convert between various types without complaint when different types of data are concatenated in a vector, and that‚Äôs not always a great thing!"
  },
  {
    "objectID": "slides/08-data-types-classes.html#converting-between-types-3",
    "href": "slides/08-data-types-classes.html#converting-between-types-3",
    "title": "Data types and classes",
    "section": "Converting between types",
    "text": "Converting between types\n\nwithout intention‚Ä¶\n\n\nc(FALSE, 3L)\n\n[1] 0 3\n\n\n. . .\n\nc(1.2, 3L)\n\n[1] 1.2 3.0\n\n\n. . .\n\nc(2L, \"two\")\n\n[1] \"2\"   \"two\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#explicit-vs.-implicit-coercion",
    "href": "slides/08-data-types-classes.html#explicit-vs.-implicit-coercion",
    "title": "Data types and classes",
    "section": "Explicit vs.¬†implicit coercion",
    "text": "Explicit vs.¬†implicit coercion\n\n\nExplicit coercion:\nWhen you call a function like as.logical(), as.numeric(), as.integer(), as.double(), or as.character().\n\n\nImplicit coercion:\nHappens when you use a vector in a specific context that expects a certain type of vector."
  },
  {
    "objectID": "slides/08-data-types-classes.html#data-classes-1",
    "href": "slides/08-data-types-classes.html#data-classes-1",
    "title": "Data types and classes",
    "section": "Data classes",
    "text": "Data classes\n\n\nVectors are like Lego building blocks\nWe stick them together to build more complicated constructs, e.g.¬†representations of data\n\nThe class attribute relates to the S3 class of an object which determines its behaviour\n\nYou don‚Äôt need to worry about what S3 classes really mean, but you can read more about it here if you‚Äôre curious\n\n\nExamples: factors, dates, and data frames"
  },
  {
    "objectID": "slides/08-data-types-classes.html#factors",
    "href": "slides/08-data-types-classes.html#factors",
    "title": "Data types and classes",
    "section": "Factors",
    "text": "Factors\nR uses factors to handle categorical variables, variables that have a fixed and known set of possible values\n\nclass_years &lt;- factor(\n  c(\n    \"First-year\", \"Sophomore\", \"Sophomore\", \"Senior\", \"Junior\"\n    )\n  )\nclass_years\n\n[1] First-year Sophomore  Sophomore  Senior     Junior    \nLevels: First-year Junior Senior Sophomore\n\n\n\n\n\ntypeof(class_years)\n\n[1] \"integer\"\n\n\n\n\n\nclass(class_years)\n\n[1] \"factor\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#more-on-factors",
    "href": "slides/08-data-types-classes.html#more-on-factors",
    "title": "Data types and classes",
    "section": "More on factors",
    "text": "More on factors\nWe can think of factors like character (level labels) and an integer (level numbers) glued together\n\nglimpse(class_years)\n\n Factor w/ 4 levels \"First-year\",\"Junior\",..: 1 4 4 3 2\n\n\n\nas.integer(class_years)\n\n[1] 1 4 4 3 2"
  },
  {
    "objectID": "slides/08-data-types-classes.html#dates",
    "href": "slides/08-data-types-classes.html#dates",
    "title": "Data types and classes",
    "section": "Dates",
    "text": "Dates\n\ntoday &lt;- as.Date(\"2024-09-24\")\ntoday\n\n[1] \"2024-09-24\"\n\n\n\ntypeof(today)\n\n[1] \"double\"\n\n\n\nclass(today)\n\n[1] \"Date\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#more-on-dates",
    "href": "slides/08-data-types-classes.html#more-on-dates",
    "title": "Data types and classes",
    "section": "More on dates",
    "text": "More on dates\nWe can think of dates like an integer (the number of days since the origin, 1 Jan 1970) and an integer (the origin) glued together\n\nas.integer(today)\n\n[1] 19990\n\n\n\nas.integer(today) / 365 # roughly 55 yrs\n\n[1] 54.76712"
  },
  {
    "objectID": "slides/08-data-types-classes.html#data-frames",
    "href": "slides/08-data-types-classes.html#data-frames",
    "title": "Data types and classes",
    "section": "Data frames",
    "text": "Data frames\nWe can think of data frames like like vectors of equal length glued together\n\ndf &lt;- data.frame(x = 1:2, y = 3:4)\ndf\n\n  x y\n1 1 3\n2 2 4\n\n\n\n\n\ntypeof(df)\n\n[1] \"list\"\n\n\n\n\nclass(df)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#lists",
    "href": "slides/08-data-types-classes.html#lists",
    "title": "Data types and classes",
    "section": "Lists",
    "text": "Lists\nLists are a generic vector container; vectors of any type can go in them\n\nl &lt;- list(\n  x = 1:4,\n  y = c(\"hi\", \"hello\", \"jello\"),\n  z = c(TRUE, FALSE)\n)\nl\n\n$x\n[1] 1 2 3 4\n\n$y\n[1] \"hi\"    \"hello\" \"jello\"\n\n$z\n[1]  TRUE FALSE"
  },
  {
    "objectID": "slides/08-data-types-classes.html#lists-and-data-frames",
    "href": "slides/08-data-types-classes.html#lists-and-data-frames",
    "title": "Data types and classes",
    "section": "Lists and data frames",
    "text": "Lists and data frames\n\nA data frame is a special list containing vectors of equal length\n\n\ndf\n\n  x y\n1 1 3\n2 2 4\n\n\n\nWhen we use the pull() function, we extract a vector from the data frame\n\n\ndf |&gt;\n  pull(y)\n\n[1] 3 4"
  },
  {
    "objectID": "slides/08-data-types-classes.html#read-data-in-as-character-strings",
    "href": "slides/08-data-types-classes.html#read-data-in-as-character-strings",
    "title": "Data types and classes",
    "section": "Read data in as character strings",
    "text": "Read data in as character strings\n\nsurvey\n\n# A tibble: 61 √ó 3\n   Timestamp     tue_classes year      \n   &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;     \n 1 9/23/24 19:57 2           Sophomore \n 2 9/23/24 19:58 3           First-year\n 3 9/23/24 20:06 2           Sophomore \n 4 9/23/24 20:09 2           Sophomore \n 5 9/23/24 21:48 0           Senior    \n 6 9/24/24 9:44  2           First-year\n 7 9/24/24 10:15 2           Senior    \n 8 9/24/24 10:50 2           Sophomore \n 9 9/24/24 10:54 3           First-year\n10 9/24/24 11:08 2           Senior    \n# ‚Ñπ 51 more rows"
  },
  {
    "objectID": "slides/08-data-types-classes.html#but-coerce-when-plotting",
    "href": "slides/08-data-types-classes.html#but-coerce-when-plotting",
    "title": "Data types and classes",
    "section": "But coerce when plotting",
    "text": "But coerce when plotting\n\nggplot(survey, mapping = aes(x = year)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/08-data-types-classes.html#use-forcats-to-reorder-levels",
    "href": "slides/08-data-types-classes.html#use-forcats-to-reorder-levels",
    "title": "Data types and classes",
    "section": "Use forcats to reorder levels",
    "text": "Use forcats to reorder levels"
  },
  {
    "objectID": "slides/08-data-types-classes.html#a-peek-into-forcats",
    "href": "slides/08-data-types-classes.html#a-peek-into-forcats",
    "title": "Data types and classes",
    "section": "A peek into forcats",
    "text": "A peek into forcats\nReordering levels by:\n\nfct_relevel(): hand\nfct_infreq(): frequency\nfct_reorder(): sorting along another variable\nfct_rev(): reversing\n\n‚Ä¶\n. . .\nChanging level values by:\n\nfct_lump(): lumping uncommon levels together into ‚Äúother‚Äù\nfct_other(): manually replacing some levels with ‚Äúother‚Äù\n\n‚Ä¶"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#meet-the-prof",
    "href": "slides/00-welcome-199-slides.html#meet-the-prof",
    "title": "Welcome to STA 199",
    "section": "Meet the prof",
    "text": "Meet the prof\n\n\nDr.¬†Mine √áetinkaya-Rundel\nProfessor of the Practice\nOld Chem 213"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#meet-the-course-team",
    "href": "slides/00-welcome-199-slides.html#meet-the-course-team",
    "title": "Welcome to STA 199",
    "section": "Meet the course team",
    "text": "Meet the course team\n\n\n\nMary Knox (Course coordinator)\nMarie Neubrander (Head TA)\nFederico Arboleda\nJaekyoung Kim\nLynn Kremers\nNetra Mittal\nGrace Rade\nJasmine Wang\nEmily Jensen\nJonathan Lin\nMengqi Liu\n\n\n\nSonya Eason\nDomenic Fenoglio\nSarah Wu\nAvery Hodges\nDavid King\nHyunjin Lee\nKareena Legare\nLiane Ma\nNoah Obuya\nAnmol Sapru\nJohn Zito"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#meet-each-other",
    "href": "slides/00-welcome-199-slides.html#meet-each-other",
    "title": "Welcome to STA 199",
    "section": "Meet each other!",
    "text": "Meet each other!\n\nPlease share with at least two classmates‚Ä¶\n\nYour name\nYour year\nWhere you‚Äôre from\nWhat you did this past summer\nWhat you hope to get out of this course\n\n\n\n  \n    ‚àí\n    +\n \n 04:00"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#meet-data-science",
    "href": "slides/00-welcome-199-slides.html#meet-data-science",
    "title": "Welcome to STA 199",
    "section": "Meet data science",
    "text": "Meet data science\n\n\nData science is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge.\nWe‚Äôre going to learn to do this in a tidy way ‚Äì more on that later!\nThis is a course on introduction to data science, with an emphasis on statistical thinking."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#application-exercise",
    "href": "slides/00-welcome-199-slides.html#application-exercise",
    "title": "Welcome to STA 199",
    "section": "Application exercise",
    "text": "Application exercise\n\nOr more like demo for today‚Ä¶\n sta199-f24.github.io/ae/ae-00-unvotes.html"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#data-science-life-cycle-1",
    "href": "slides/00-welcome-199-slides.html#data-science-life-cycle-1",
    "title": "Welcome to STA 199",
    "section": "Data science life cycle",
    "text": "Data science life cycle"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#collect-birthdays",
    "href": "slides/00-welcome-199-slides.html#collect-birthdays",
    "title": "Welcome to STA 199",
    "section": "Collect birthdays",
    "text": "Collect birthdays\n\n\n\n\n\n\n\n\n  \n    ‚àí\n    +\n \n 01:00"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#import",
    "href": "slides/00-welcome-199-slides.html#import",
    "title": "Welcome to STA 199",
    "section": "Import",
    "text": "Import"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#import-birthdays",
    "href": "slides/00-welcome-199-slides.html#import-birthdays",
    "title": "Welcome to STA 199",
    "section": "Import birthdays",
    "text": "Import birthdays"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#tidy-transform",
    "href": "slides/00-welcome-199-slides.html#tidy-transform",
    "title": "Welcome to STA 199",
    "section": "Tidy + transform",
    "text": "Tidy + transform"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#tidy-transform-birthdays",
    "href": "slides/00-welcome-199-slides.html#tidy-transform-birthdays",
    "title": "Welcome to STA 199",
    "section": "Tidy + transform birthdays",
    "text": "Tidy + transform birthdays"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#visualize",
    "href": "slides/00-welcome-199-slides.html#visualize",
    "title": "Welcome to STA 199",
    "section": "Visualize",
    "text": "Visualize"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#visualize-birthdays",
    "href": "slides/00-welcome-199-slides.html#visualize-birthdays",
    "title": "Welcome to STA 199",
    "section": "Visualize birthdays",
    "text": "Visualize birthdays"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#model",
    "href": "slides/00-welcome-199-slides.html#model",
    "title": "Welcome to STA 199",
    "section": "Model",
    "text": "Model"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#understand",
    "href": "slides/00-welcome-199-slides.html#understand",
    "title": "Welcome to STA 199",
    "section": "Understand",
    "text": "Understand"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#communicate",
    "href": "slides/00-welcome-199-slides.html#communicate",
    "title": "Welcome to STA 199",
    "section": "Communicate",
    "text": "Communicate"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#understand-communicate",
    "href": "slides/00-welcome-199-slides.html#understand-communicate",
    "title": "Welcome to STA 199",
    "section": "Understand + communicate",
    "text": "Understand + communicate"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#program",
    "href": "slides/00-welcome-199-slides.html#program",
    "title": "Welcome to STA 199",
    "section": "Program",
    "text": "Program"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#homepage",
    "href": "slides/00-welcome-199-slides.html#homepage",
    "title": "Welcome to STA 199",
    "section": "Homepage",
    "text": "Homepage\nhttps://sta199-f24.github.io\n\nAll course materials\nLinks to Canvas, GitHub, RStudio containers, etc."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#course-toolkit",
    "href": "slides/00-welcome-199-slides.html#course-toolkit",
    "title": "Welcome to STA 199",
    "section": "Course toolkit",
    "text": "Course toolkit\nAll linked from the course website:\n\nGitHub organization: github.com/sta199-f24\n\nRStudio containers: cmgr.oit.duke.edu/containers\n\nCommunication: Ed Discussion\nAssignment submission and feedback: Gradescope"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#activities",
    "href": "slides/00-welcome-199-slides.html#activities",
    "title": "Welcome to STA 199",
    "section": "Activities",
    "text": "Activities\n\nIntroduce new content and prepare for lectures by watching the videos and completing the readings\nAttend and actively participate in lectures and labs, office hours, team meetings\nPractice applying statistical concepts and computing with application exercises during lecture, graded for attempting\nPut together what you‚Äôve learned to analyze real-world data\n\nLab assignments (7 or 8 throughout semester)\nExams (midterm + final)\nTerm project completed in teams"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#application-exercises",
    "href": "slides/00-welcome-199-slides.html#application-exercises",
    "title": "Welcome to STA 199",
    "section": "Application exercises",
    "text": "Application exercises\n\nDaily-ish in lecture\n‚ÄúGraded‚Äù for attempt, not accuracy\nPractice Weeks 1 + 2, graded thereafter\nAt least one commit by 2 pm of the day of lecture\nTurn in at least 70% for full credit"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#labs",
    "href": "slides/00-welcome-199-slides.html#labs",
    "title": "Welcome to STA 199",
    "section": "Labs",
    "text": "Labs\n\nStart in lab session\nComplete at home\nDue within a week\nDiscussion with classmates ok, copying not ok!\nLowest score dropped"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#exams",
    "href": "slides/00-welcome-199-slides.html#exams",
    "title": "Welcome to STA 199",
    "section": "Exams",
    "text": "Exams\n\nTwo exams, each 20%\n\nMidterm comprised of two parts:\n\nIn-class (Oct 8): 75 minute in-class exam. Closed book, one sheet of notes (‚Äúcheat sheet‚Äù) ‚Äì 70% of the grade.\nTake-home (Oct 8 - Oct 11): Follow from the in class exam and focus on the analysis of a dataset introduced in the take home exam ‚Äì 30% of the grade.\n\n\nFinal in-class only (Dec 12, 9am - 12pm): Closed book, one sheet of notes (‚Äúcheat sheet‚Äù).\n‚ÄúCheat sheet‚Äù: No larger than 8 1/2 x 11, both sides, must be prepared by you.\n\n\n\n\n\n\n\nCaution\n\n\nExam dates cannot be changed and no make-up exams will be given. If you can‚Äôt take the exams on these dates, you should drop this class."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#project",
    "href": "slides/00-welcome-199-slides.html#project",
    "title": "Welcome to STA 199",
    "section": "Project",
    "text": "Project\n\nDataset of your choice, method of your choice\nTeamwork\nFive milestones, interim deadline throughout semester\nFinal milestone: Presentation (video) and write-up\nPresentations submitted as videos\nPeer review between teams for content, peer evaluation within teams for contribution\nSome lab sessions allocated to project progress\n\n\n\n\n\n\n\nCaution\n\n\nProject due date cannot be changed. You must complete the project to pass this class."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#teams",
    "href": "slides/00-welcome-199-slides.html#teams",
    "title": "Welcome to STA 199",
    "section": "Teams",
    "text": "Teams\n\nAssigned by me\nProject\nPeer evaluation during teamwork and after completion\nExpectations and roles\n\nEveryone is expected to contribute equal effort\n\nEveryone is expected to understand all code turned in\nIndividual contribution evaluated by peer evaluation, commits, etc."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#grading",
    "href": "slides/00-welcome-199-slides.html#grading",
    "title": "Welcome to STA 199",
    "section": "Grading",
    "text": "Grading\n\n\nCategory\nPercentage\n\n\n\nApplication Exercises\n5%\n\n\nLabs\n35%\n\n\nMidterm\n20%\n\n\nFinal\n20%\n\n\nProject\n20%\n\n\n\nNo specific points allocated to attendance, but the application exercise score is implicitly tied to attendance.\nSee course syllabus for how the final letter grade will be determined."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#support",
    "href": "slides/00-welcome-199-slides.html#support",
    "title": "Welcome to STA 199",
    "section": "Support",
    "text": "Support\n\nHelp from humans:\n\nAttend office hours\nAsk and answer questions on the discussion forum\n\n\nHelp from AI: Use the course chatbot (in Canvas!)\nReserve email for questions on personal matters and/or grades\nRead the course support page"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#announcements",
    "href": "slides/00-welcome-199-slides.html#announcements",
    "title": "Welcome to STA 199",
    "section": "Announcements",
    "text": "Announcements\n\nPosted on Canvas (Announcements tool) and sent via email, be sure to check both regularly\nI‚Äôll assume that you‚Äôve read an announcement by the next ‚Äúbusiness‚Äù day\nI‚Äôll (try my best to) send a weekly update announcement each Friday, outlining the plan for the following week and reminding you what you need to do to prepare, practice, and perform"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#diversity-inclusion",
    "href": "slides/00-welcome-199-slides.html#diversity-inclusion",
    "title": "Welcome to STA 199",
    "section": "Diversity + inclusion",
    "text": "Diversity + inclusion\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students‚Äô learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength and benefit.\n\n\nFill out the Getting to know you survey.\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don‚Äôt hesitate to come and talk with me. I want to be a resource for you. If you prefer to speak with someone outside of the course, your advisors, and deans are excellent resources.\nI (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#accessibility",
    "href": "slides/00-welcome-199-slides.html#accessibility",
    "title": "Welcome to STA 199",
    "section": "Accessibility",
    "text": "Accessibility\n\nThe Student Disability Access Office (SDAO) is available to ensure that students are able to engage with their courses and related assignments.\nI am committed to making all course materials accessible and I‚Äôm always learning how to do this better. If any course component is not accessible to you in any way, please don‚Äôt hesitate to let me know."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#late-work-waivers-lecture-recordings-regrades",
    "href": "slides/00-welcome-199-slides.html#late-work-waivers-lecture-recordings-regrades",
    "title": "Welcome to STA 199",
    "section": "Late work, waivers, lecture recordings, regrades‚Ä¶",
    "text": "Late work, waivers, lecture recordings, regrades‚Ä¶\n\nWe have policies!\nRead about them on the course syllabus and refer back to them when you need it"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#use-of-ai-tools",
    "href": "slides/00-welcome-199-slides.html#use-of-ai-tools",
    "title": "Welcome to STA 199",
    "section": "Use of AI tools",
    "text": "Use of AI tools\n\n\n AI tools for code:\n\nSure, but be careful/critical! Working code != correct/good code.\nMust explicitly cite, with at a minimum AI tool you‚Äôre using (e.g., ChatGPT) and your prompt.\n\n\n AI tools for narrative: Absolutely not!\n AI tools for learning: Sure, but be careful/critical!"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#academic-integrity",
    "href": "slides/00-welcome-199-slides.html#academic-integrity",
    "title": "Welcome to STA 199",
    "section": "Academic integrity",
    "text": "Academic integrity\n\nTo uphold the Duke Community Standard:\n\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#this-weeks-tasks",
    "href": "slides/00-welcome-199-slides.html#this-weeks-tasks",
    "title": "Welcome to STA 199",
    "section": "This week‚Äôs tasks",
    "text": "This week‚Äôs tasks\n\nComplete Lab 0\n\nComputational setup\nGetting to know you survey\n\n\nRead the syllabus\nComplete readings and videos for next class"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#midori-says",
    "href": "slides/00-welcome-199-slides.html#midori-says",
    "title": "Welcome to STA 199",
    "section": "Midori says‚Ä¶",
    "text": "Midori says‚Ä¶\n\n\n\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-the-prof",
    "href": "slides/00-welcome-199.html#meet-the-prof",
    "title": "Welcome to STA 199",
    "section": "Meet the prof",
    "text": "Meet the prof\n\n\nDr.¬†Mine √áetinkaya-Rundel\nProfessor of the Practice\nOld Chem 213"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-the-course-team",
    "href": "slides/00-welcome-199.html#meet-the-course-team",
    "title": "Welcome to STA 199",
    "section": "Meet the course team",
    "text": "Meet the course team\n\n\n\nMary Knox (Course coordinator)\nMarie Neubrander (Head TA)\nFederico Arboleda\nJaekyoung Kim\nLynn Kremers\nNetra Mittal\nGrace Rade\nJasmine Wang\nEmily Jensen\nJonathan Lin\nMengqi Liu\n\n\n\nSonya Eason\nDomenic Fenoglio\nSarah Wu\nAvery Hodges\nDavid King\nHyunjin Lee\nKareena Legare\nLiane Ma\nNoah Obuya\nAnmol Sapru\nJohn Zito"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-each-other",
    "href": "slides/00-welcome-199.html#meet-each-other",
    "title": "Welcome to STA 199",
    "section": "Meet each other!",
    "text": "Meet each other!\n\nPlease share with at least two classmates‚Ä¶\n\nYour name\nYour year\nWhere you‚Äôre from\nWhat you did this past summer\nWhat you hope to get out of this course"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-data-science",
    "href": "slides/00-welcome-199.html#meet-data-science",
    "title": "Welcome to STA 199",
    "section": "Meet data science",
    "text": "Meet data science\n\n\nData science is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge.\nWe‚Äôre going to learn to do this in a tidy way ‚Äì more on that later!\nThis is a course on introduction to data science, with an emphasis on statistical thinking."
  },
  {
    "objectID": "slides/00-welcome-199.html#application-exercise",
    "href": "slides/00-welcome-199.html#application-exercise",
    "title": "Welcome to STA 199",
    "section": "Application exercise",
    "text": "Application exercise\n\nOr more like demo for today‚Ä¶\n sta199-f24.github.io/ae/ae-00-unvotes.html"
  },
  {
    "objectID": "slides/00-welcome-199.html#data-science-life-cycle-1",
    "href": "slides/00-welcome-199.html#data-science-life-cycle-1",
    "title": "Welcome to STA 199",
    "section": "Data science life cycle",
    "text": "Data science life cycle"
  },
  {
    "objectID": "slides/00-welcome-199.html#collect-birthdays",
    "href": "slides/00-welcome-199.html#collect-birthdays",
    "title": "Welcome to STA 199",
    "section": "Collect birthdays",
    "text": "Collect birthdays\n\n\n\n\n\n\n\n\n\n  \n    ‚àí\n    +\n \n 01:00"
  },
  {
    "objectID": "slides/00-welcome-199.html#import",
    "href": "slides/00-welcome-199.html#import",
    "title": "Welcome to STA 199",
    "section": "Import",
    "text": "Import"
  },
  {
    "objectID": "slides/00-welcome-199.html#import-birthdays",
    "href": "slides/00-welcome-199.html#import-birthdays",
    "title": "Welcome to STA 199",
    "section": "Import birthdays",
    "text": "Import birthdays"
  },
  {
    "objectID": "slides/00-welcome-199.html#tidy-transform",
    "href": "slides/00-welcome-199.html#tidy-transform",
    "title": "Welcome to STA 199",
    "section": "Tidy + transform",
    "text": "Tidy + transform"
  },
  {
    "objectID": "slides/00-welcome-199.html#tidy-transform-birthdays",
    "href": "slides/00-welcome-199.html#tidy-transform-birthdays",
    "title": "Welcome to STA 199",
    "section": "Tidy + transform birthdays",
    "text": "Tidy + transform birthdays"
  },
  {
    "objectID": "slides/00-welcome-199.html#visualize",
    "href": "slides/00-welcome-199.html#visualize",
    "title": "Welcome to STA 199",
    "section": "Visualize",
    "text": "Visualize"
  },
  {
    "objectID": "slides/00-welcome-199.html#visualize-birthdays",
    "href": "slides/00-welcome-199.html#visualize-birthdays",
    "title": "Welcome to STA 199",
    "section": "Visualize birthdays",
    "text": "Visualize birthdays"
  },
  {
    "objectID": "slides/00-welcome-199.html#model",
    "href": "slides/00-welcome-199.html#model",
    "title": "Welcome to STA 199",
    "section": "Model",
    "text": "Model"
  },
  {
    "objectID": "slides/00-welcome-199.html#understand",
    "href": "slides/00-welcome-199.html#understand",
    "title": "Welcome to STA 199",
    "section": "Understand",
    "text": "Understand"
  },
  {
    "objectID": "slides/00-welcome-199.html#communicate",
    "href": "slides/00-welcome-199.html#communicate",
    "title": "Welcome to STA 199",
    "section": "Communicate",
    "text": "Communicate"
  },
  {
    "objectID": "slides/00-welcome-199.html#understand-communicate",
    "href": "slides/00-welcome-199.html#understand-communicate",
    "title": "Welcome to STA 199",
    "section": "Understand + communicate",
    "text": "Understand + communicate"
  },
  {
    "objectID": "slides/00-welcome-199.html#program",
    "href": "slides/00-welcome-199.html#program",
    "title": "Welcome to STA 199",
    "section": "Program",
    "text": "Program"
  },
  {
    "objectID": "slides/00-welcome-199.html#homepage",
    "href": "slides/00-welcome-199.html#homepage",
    "title": "Welcome to STA 199",
    "section": "Homepage",
    "text": "Homepage\nhttps://sta199-f24.github.io\n\nAll course materials\nLinks to Canvas, GitHub, RStudio containers, etc."
  },
  {
    "objectID": "slides/00-welcome-199.html#course-toolkit",
    "href": "slides/00-welcome-199.html#course-toolkit",
    "title": "Welcome to STA 199",
    "section": "Course toolkit",
    "text": "Course toolkit\nAll linked from the course website:\n\nGitHub organization: github.com/sta199-f24\n\nRStudio containers: cmgr.oit.duke.edu/containers\n\nCommunication: Ed Discussion\nAssignment submission and feedback: Gradescope"
  },
  {
    "objectID": "slides/00-welcome-199.html#activities",
    "href": "slides/00-welcome-199.html#activities",
    "title": "Welcome to STA 199",
    "section": "Activities",
    "text": "Activities\n\nIntroduce new content and prepare for lectures by watching the videos and completing the readings\nAttend and actively participate in lectures and labs, office hours, team meetings\nPractice applying statistical concepts and computing with application exercises during lecture, graded for attempting\nPut together what you‚Äôve learned to analyze real-world data\n\nLab assignments (7 or 8 throughout semester)\nExams (midterm + final)\nTerm project completed in teams"
  },
  {
    "objectID": "slides/00-welcome-199.html#application-exercises",
    "href": "slides/00-welcome-199.html#application-exercises",
    "title": "Welcome to STA 199",
    "section": "Application exercises",
    "text": "Application exercises\n\nDaily-ish in lecture\n‚ÄúGraded‚Äù for attempt, not accuracy\nPractice Weeks 1 + 2, graded thereafter\nAt least one commit by 2 pm of the day of lecture\nTurn in at least 70% for full credit"
  },
  {
    "objectID": "slides/00-welcome-199.html#labs",
    "href": "slides/00-welcome-199.html#labs",
    "title": "Welcome to STA 199",
    "section": "Labs",
    "text": "Labs\n\nStart in lab session\nComplete at home\nDue within a week\nDiscussion with classmates ok, copying not ok!\nLowest score dropped"
  },
  {
    "objectID": "slides/00-welcome-199.html#exams",
    "href": "slides/00-welcome-199.html#exams",
    "title": "Welcome to STA 199",
    "section": "Exams",
    "text": "Exams\n\nTwo exams, each 20%\n\nMidterm comprised of two parts:\n\nIn-class (Oct 8): 75 minute in-class exam. Closed book, one sheet of notes (‚Äúcheat sheet‚Äù) ‚Äì 70% of the grade.\nTake-home (Oct 8 - Oct 11): Follow from the in class exam and focus on the analysis of a dataset introduced in the take home exam ‚Äì 30% of the grade.\n\n\nFinal in-class only (Dec 12, 9am - 12pm): Closed book, one sheet of notes (‚Äúcheat sheet‚Äù).\n‚ÄúCheat sheet‚Äù: No larger than 8 1/2 x 11, both sides, must be prepared by you.\n\n\n\n\n\n\n\nCaution\n\n\n\nExam dates cannot be changed and no make-up exams will be given. If you can‚Äôt take the exams on these dates, you should drop this class."
  },
  {
    "objectID": "slides/00-welcome-199.html#project",
    "href": "slides/00-welcome-199.html#project",
    "title": "Welcome to STA 199",
    "section": "Project",
    "text": "Project\n\nDataset of your choice, method of your choice\nTeamwork\nFive milestones, interim deadline throughout semester\nFinal milestone: Presentation (video) and write-up\nPresentations submitted as videos\nPeer review between teams for content, peer evaluation within teams for contribution\nSome lab sessions allocated to project progress\n\n\n\n\n\n\n\nCaution\n\n\n\nProject due date cannot be changed. You must complete the project to pass this class."
  },
  {
    "objectID": "slides/00-welcome-199.html#teams",
    "href": "slides/00-welcome-199.html#teams",
    "title": "Welcome to STA 199",
    "section": "Teams",
    "text": "Teams\n\nAssigned by me\nProject\nPeer evaluation during teamwork and after completion\nExpectations and roles\n\nEveryone is expected to contribute equal effort\n\nEveryone is expected to understand all code turned in\nIndividual contribution evaluated by peer evaluation, commits, etc."
  },
  {
    "objectID": "slides/00-welcome-199.html#grading",
    "href": "slides/00-welcome-199.html#grading",
    "title": "Welcome to STA 199",
    "section": "Grading",
    "text": "Grading\n\n\nCategory\nPercentage\n\n\n\nApplication Exercises\n5%\n\n\nLabs\n35%\n\n\nMidterm\n20%\n\n\nFinal\n20%\n\n\nProject\n20%\n\n\n\nNo specific points allocated to attendance, but the application exercise score is implicitly tied to attendance.\nSee course syllabus for how the final letter grade will be determined."
  },
  {
    "objectID": "slides/00-welcome-199.html#support",
    "href": "slides/00-welcome-199.html#support",
    "title": "Welcome to STA 199",
    "section": "Support",
    "text": "Support\n\nHelp from humans:\n\nAttend office hours\nAsk and answer questions on the discussion forum\n\n\nHelp from AI: Use the course chatbot (in Canvas!)\nReserve email for questions on personal matters and/or grades\nRead the course support page"
  },
  {
    "objectID": "slides/00-welcome-199.html#announcements",
    "href": "slides/00-welcome-199.html#announcements",
    "title": "Welcome to STA 199",
    "section": "Announcements",
    "text": "Announcements\n\nPosted on Canvas (Announcements tool) and sent via email, be sure to check both regularly\nI‚Äôll assume that you‚Äôve read an announcement by the next ‚Äúbusiness‚Äù day\nI‚Äôll (try my best to) send a weekly update announcement each Friday, outlining the plan for the following week and reminding you what you need to do to prepare, practice, and perform"
  },
  {
    "objectID": "slides/00-welcome-199.html#diversity-inclusion",
    "href": "slides/00-welcome-199.html#diversity-inclusion",
    "title": "Welcome to STA 199",
    "section": "Diversity + inclusion",
    "text": "Diversity + inclusion\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students‚Äô learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength and benefit.\n\n\nFill out the Getting to know you survey.\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don‚Äôt hesitate to come and talk with me. I want to be a resource for you. If you prefer to speak with someone outside of the course, your advisors, and deans are excellent resources.\nI (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it."
  },
  {
    "objectID": "slides/00-welcome-199.html#accessibility",
    "href": "slides/00-welcome-199.html#accessibility",
    "title": "Welcome to STA 199",
    "section": "Accessibility",
    "text": "Accessibility\n\nThe Student Disability Access Office (SDAO) is available to ensure that students are able to engage with their courses and related assignments.\nI am committed to making all course materials accessible and I‚Äôm always learning how to do this better. If any course component is not accessible to you in any way, please don‚Äôt hesitate to let me know."
  },
  {
    "objectID": "slides/00-welcome-199.html#late-work-waivers-lecture-recordings-regrades",
    "href": "slides/00-welcome-199.html#late-work-waivers-lecture-recordings-regrades",
    "title": "Welcome to STA 199",
    "section": "Late work, waivers, lecture recordings, regrades‚Ä¶",
    "text": "Late work, waivers, lecture recordings, regrades‚Ä¶\n\nWe have policies!\nRead about them on the course syllabus and refer back to them when you need it"
  },
  {
    "objectID": "slides/00-welcome-199.html#use-of-ai-tools",
    "href": "slides/00-welcome-199.html#use-of-ai-tools",
    "title": "Welcome to STA 199",
    "section": "Use of AI tools",
    "text": "Use of AI tools\n\n\n AI tools for code:\n\nSure, but be careful/critical! Working code != correct/good code.\nMust explicitly cite, with at a minimum AI tool you‚Äôre using (e.g., ChatGPT) and your prompt.\n\n\n AI tools for narrative: Absolutely not!\n AI tools for learning: Sure, but be careful/critical!"
  },
  {
    "objectID": "slides/00-welcome-199.html#academic-integrity",
    "href": "slides/00-welcome-199.html#academic-integrity",
    "title": "Welcome to STA 199",
    "section": "Academic integrity",
    "text": "Academic integrity\n\nTo uphold the Duke Community Standard:\n\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised."
  },
  {
    "objectID": "slides/00-welcome-199.html#this-weeks-tasks",
    "href": "slides/00-welcome-199.html#this-weeks-tasks",
    "title": "Welcome to STA 199",
    "section": "This week‚Äôs tasks",
    "text": "This week‚Äôs tasks\n\nComplete Lab 0\n\nComputational setup\nGetting to know you survey\n\n\nRead the syllabus\nComplete readings and videos for next class"
  },
  {
    "objectID": "slides/00-welcome-199.html#midori-says",
    "href": "slides/00-welcome-199.html#midori-says",
    "title": "Welcome to STA 199",
    "section": "Midori says‚Ä¶",
    "text": "Midori says‚Ä¶"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#while-you-wait",
    "href": "slides/10-web-scraping-slides.html#while-you-wait",
    "title": "Web scaping",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\n\n\n\nIf you haven‚Äôt yet done so: Install a Chrome browser and the SelectorGadget extension:\n\nChrome\nSelectorGadget\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-09-age-gaps-sales-import.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#announcements",
    "href": "slides/10-web-scraping-slides.html#announcements",
    "title": "Web scaping",
    "section": "Announcements",
    "text": "Announcements\nMidterm things:\n\nPractice midterm: Posted on the course website\nLecture recordings: Available until the in-class midterm, link emailed earlier today\nApplication exercise catch-up: Complete all application exercises up to the midterm by the in-class midterm (and get any missed points!)\nMidterm review: In class on Thursday, come with questions!"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#age-gaps",
    "href": "slides/10-web-scraping-slides.html#age-gaps",
    "title": "Web scaping",
    "section": "Age gaps",
    "text": "Age gaps\nData prep:\n\nlibrary(tidyverse)\n\nage_gaps &lt;- read_csv(\"data/age-gaps.csv\")\n\nage_gaps_heterosexual &lt;- age_gaps |&gt;\n  filter(character_1_gender != character_2_gender)"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#age-gaps-1",
    "href": "slides/10-web-scraping-slides.html#age-gaps-1",
    "title": "Web scaping",
    "section": "Age gaps",
    "text": "Age gaps\nLabel the data:\n\nage_gaps_heterosexual &lt;- age_gaps_heterosexual |&gt;\n  mutate(\n    older = case_when(\n      character_1_gender == \"woman\" & actor_1_age &gt; actor_2_age ~ \"woman older\",\n      character_2_gender == \"woman\" & actor_2_age &gt; actor_1_age ~ \"woman older\",\n      character_1_gender == \"man\"   & actor_1_age &gt; actor_2_age ~ \"man older\",\n      character_2_gender == \"man\"   & actor_2_age &gt; actor_1_age ~ \"man older\",\n      actor_1_age == actor_2_age ~ \"same age\"\n    )\n  )"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#age-gaps-2",
    "href": "slides/10-web-scraping-slides.html#age-gaps-2",
    "title": "Web scaping",
    "section": "Age gaps",
    "text": "Age gaps\nAge gaps split:\n\nwoman_older &lt;- age_gaps_heterosexual |&gt; \n  filter(older == \"woman older\")\nman_older   &lt;- age_gaps_heterosexual |&gt; \n  filter(older == \"man older\")\nsame_age    &lt;- age_gaps_heterosexual |&gt;\n  filter(older == \"same age\")\n\n\nCheck:\n\n(\n  nrow(woman_older) + nrow(man_older) + nrow(same_age)\n) == nrow(age_gaps_heterosexual)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#age-gaps-3",
    "href": "slides/10-web-scraping-slides.html#age-gaps-3",
    "title": "Web scaping",
    "section": "Age gaps",
    "text": "Age gaps\nWrite data\n\nwrite_csv(woman_older, file = \"data/woman-older.csv\")\nwrite_csv(man_older, file = \"data/man-older.csv\")\nwrite_csv(same_age, file = \"data/same-age.csv\")"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#reading-the-chronicle",
    "href": "slides/10-web-scraping-slides.html#reading-the-chronicle",
    "title": "Web scaping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nHow often do you read The Chronicle?\n\nEvery day\n3-5 times a week\nOnce a week\nRarely"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#reading-the-chronicle-1",
    "href": "slides/10-web-scraping-slides.html#reading-the-chronicle-1",
    "title": "Web scaping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nWhat do you think is the most common word in the titles of The Chronicle opinion pieces?"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#analyzing-the-chronicle",
    "href": "slides/10-web-scraping-slides.html#analyzing-the-chronicle",
    "title": "Web scaping",
    "section": "Analyzing The Chronicle",
    "text": "Analyzing The Chronicle"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#reading-the-chronicle-2",
    "href": "slides/10-web-scraping-slides.html#reading-the-chronicle-2",
    "title": "Web scaping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nHow do you think the sentiments in opinion pieces in The Chronicle compare across authors? Roughly the same? Wildly different? Somewhere in between?"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#analyzing-the-chronicle-1",
    "href": "slides/10-web-scraping-slides.html#analyzing-the-chronicle-1",
    "title": "Web scaping",
    "section": "Analyzing The Chronicle",
    "text": "Analyzing The Chronicle"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#all-of-this-analysis-is-done-in-r",
    "href": "slides/10-web-scraping-slides.html#all-of-this-analysis-is-done-in-r",
    "title": "Web scaping",
    "section": "All of this analysis is done in R!",
    "text": "All of this analysis is done in R!\n\n(mostly) with tools you already know!"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#common-words-in-the-chronicle-titles",
    "href": "slides/10-web-scraping-slides.html#common-words-in-the-chronicle-titles",
    "title": "Web scaping",
    "section": "Common words in The Chronicle titles",
    "text": "Common words in The Chronicle titles\nCode for the earlier plot:\n\nstop_words &lt;- read_csv(\"data/stop-words.csv\")\nchronicle |&gt;\n  tidytext::unnest_tokens(word, title) |&gt;\n  mutate(word = str_replace_all(word, \"‚Äô\", \"'\")) |&gt;\n  anti_join(stop_words) |&gt;\n  count(word, sort = TRUE) |&gt;\n  filter(word != \"duke's\") |&gt;\n  slice_head(n = 20) |&gt;\n  mutate(word = fct_reorder(word, n)) |&gt;\n  ggplot(aes(y = word, x = n, fill = log(n))) +\n  geom_col(show.legend = FALSE) +\n  theme_minimal(base_size = 16) +\n  labs(\n    x = \"Number of mentions\",\n    y = \"Word\",\n    title = \"The Chronicle - Opinion pieces\",\n    subtitle = \"Common words in the 500 most recent opinion pieces\",\n    caption = \"Source: Data scraped from The Chronicle on Sep 30, 2024\"\n  ) +\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#avg-sentiment-scores-of-abstracts",
    "href": "slides/10-web-scraping-slides.html#avg-sentiment-scores-of-abstracts",
    "title": "Web scaping",
    "section": "Avg sentiment scores of abstracts",
    "text": "Avg sentiment scores of abstracts\nCode for the earlier plot:\n\nafinn_sentiments &lt;- read_csv(\"data/afinn-sentiments.csv\")\nchronicle |&gt;\n  tidytext::unnest_tokens(word, abstract) |&gt;\n  mutate(word = str_replace_all(word, \"‚Äô\", \"'\")) |&gt;\n  anti_join(stop_words) |&gt;\n  left_join(afinn_sentiments) |&gt; \n  group_by(author, title) |&gt;\n  summarize(total_sentiment = sum(value, na.rm = TRUE), .groups = \"drop\") |&gt;\n  group_by(author) |&gt;\n  summarize(\n    n_articles = n(),\n    avg_sentiment = mean(total_sentiment, na.rm = TRUE),\n  ) |&gt;\n  filter(n_articles &gt; 1 & !is.na(author)) |&gt;\n  arrange(desc(avg_sentiment)) |&gt;\n  slice(c(1:10, 40:49)) |&gt;\n  mutate(\n    author = fct_reorder(author, avg_sentiment),\n    neg_pos = if_else(avg_sentiment &lt; 0, \"neg\", \"pos\"),\n    label_position = if_else(neg_pos == \"neg\", 0.25, -0.25)\n  ) |&gt;\n  ggplot(aes(y = author, x = avg_sentiment)) +\n  geom_col(aes(fill = neg_pos), show.legend = FALSE) +\n  geom_text(\n    aes(x = label_position, label = author, color = neg_pos),\n    hjust = c(rep(1,10), rep(0, 10)),\n    show.legend = FALSE,\n    fontface = \"bold\"\n  ) +\n  geom_text(\n    aes(label = round(avg_sentiment, 1)),\n    hjust = c(rep(1.25, 10), rep(-0.25, 10)),\n    color = \"white\",\n    fontface = \"bold\"\n  ) +\n  scale_fill_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_color_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  coord_cartesian(xlim = c(-8, 8)) +\n  labs(\n    x = \"negative  ‚Üê     Average sentiment score (AFINN)     ‚Üí  positive\",\n    y = NULL,\n    title = \"The Chronicle - Opinion pieces\\nAverage sentiment scores of abstracts by author\",\n    subtitle = \"Top 10 average positive and negative scores\",\n    caption = \"Source: Data scraped from The Chronicle on Sep 30, 2024\"\n  ) +\n  theme_void(base_size = 16) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5, margin = unit(c(0.5, 0, 1, 0), \"lines\")),\n    axis.title.x = element_text(color = \"gray30\", size = 12),\n    plot.caption = element_text(color = \"gray30\", size = 10)\n  )"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#where-is-the-data-coming-from",
    "href": "slides/10-web-scraping-slides.html#where-is-the-data-coming-from",
    "title": "Web scaping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\nhttps://www.dukechronicle.com/section/opinion"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#where-is-the-data-coming-from-1",
    "href": "slides/10-web-scraping-slides.html#where-is-the-data-coming-from-1",
    "title": "Web scaping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\n\n\n\n\n\n\n\nchronicle\n\n# A tibble: 500 √ó 6\n   title                       author date       abstract column url  \n   &lt;chr&gt;                       &lt;chr&gt;  &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;\n 1 The Chronicle is accepting‚Ä¶ Remem‚Ä¶ 2024-09-30 If you ‚Ä¶ Opini‚Ä¶ http‚Ä¶\n 2 Polls and prejudice         Cara ‚Ä¶ 2024-09-30 Sitting‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 3 I hate Duke‚Äôs sodding grass Shamb‚Ä¶ 2024-09-30 Duke‚Äôs ‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 4 We should reimagine our ve‚Ä¶ Zubin‚Ä¶ 2024-09-28 In addi‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 5 Imagining the restorative ‚Ä¶ Nik N‚Ä¶ 2024-09-28 With cr‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 6 Community members share re‚Ä¶ Remem‚Ä¶ 2024-09-27 We welc‚Ä¶ Opini‚Ä¶ http‚Ä¶\n 7 Costs of college campus ec‚Ä¶ Lisa ‚Ä¶ 2024-09-26 What ar‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 8 Embracing polyhedronism     Aaron‚Ä¶ 2024-09-26 But ins‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 9 Comparison is the thief of‚Ä¶ Angar‚Ä¶ 2024-09-25 Why do ‚Ä¶ Campu‚Ä¶ http‚Ä¶\n10 We only live once: Protect‚Ä¶ Advik‚Ä¶ 2024-09-25 I am no‚Ä¶ Campu‚Ä¶ http‚Ä¶\n# ‚Ñπ 490 more rows"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#scraping-the-web-what-why",
    "href": "slides/10-web-scraping-slides.html#scraping-the-web-what-why",
    "title": "Web scaping",
    "section": "Scraping the web: what? why?",
    "text": "Scraping the web: what? why?\n\nIncreasing amount of data is available on the web\nThese data are provided in an unstructured format: you can always copy&paste, but it‚Äôs time-consuming and prone to errors\nWeb scraping is the process of extracting this information automatically and transform it into a structured dataset\n\nTwo different scenarios:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy).\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files."
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#hypertext-markup-language",
    "href": "slides/10-web-scraping-slides.html#hypertext-markup-language",
    "title": "Web scaping",
    "section": "Hypertext Markup Language",
    "text": "Hypertext Markup Language\nMost of the data on the web is still largely available as HTML - while it is structured (hierarchical) it often is not available in a form useful for analysis (flat / tidy).\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#rvest",
    "href": "slides/10-web-scraping-slides.html#rvest",
    "title": "Web scaping",
    "section": "rvest",
    "text": "rvest\n\n\n\nThe rvest package makes basic processing and manipulation of HTML data straight forward\nIt‚Äôs designed to work with pipelines built with |&gt;\n\nrvest.tidyverse.org\n\n\nlibrary(rvest)"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#rvest-1",
    "href": "slides/10-web-scraping-slides.html#rvest-1",
    "title": "Web scaping",
    "section": "rvest",
    "text": "rvest\nCore functions:\n\nread_html() - read HTML data from a url or character string.\nhtml_elements() - select specified elements from the HTML document using CSS selectors (or xpath).\nhtml_element() - select a single element from the HTML document using CSS selectors (or xpath).\nhtml_table() - parse an HTML table into a data frame.\nhtml_text() / html_text2() - extract tag‚Äôs text content.\nhtml_name - extract a tag/element‚Äôs name(s).\nhtml_attrs - extract all attributes.\nhtml_attr - extract attribute value(s) by name."
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#html-rvest-xml2",
    "href": "slides/10-web-scraping-slides.html#html-rvest-xml2",
    "title": "Web scaping",
    "section": "html, rvest, & xml2",
    "text": "html, rvest, & xml2\n\nhtml &lt;- \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html)\n\n{html_document}\n&lt;html&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; cha ...\n[2] &lt;body&gt;\\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\\n    &lt;br&gt;&lt;div cl ..."
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#selecting-elements",
    "href": "slides/10-web-scraping-slides.html#selecting-elements",
    "title": "Web scaping",
    "section": "Selecting elements",
    "text": "Selecting elements\n\nread_html(html) |&gt; html_elements(\"p\")\n\n{xml_nodeset (1)}\n[1] &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_text()\n\n[1] \"Hello world!\"\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_name()\n\n[1] \"p\"\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attrs()\n\n[[1]]\n   align \n\"center\" \n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attr(\"align\")\n\n[1] \"center\""
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#more-selecting-tags",
    "href": "slides/10-web-scraping-slides.html#more-selecting-tags",
    "title": "Web scaping",
    "section": "More selecting tags",
    "text": "More selecting tags\n\n\nread_html(html) |&gt; html_elements(\"div\")\n\n{xml_nodeset (7)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n[3] &lt;div class=\"contact\"&gt;\\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/di ...\n[4] &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n[5] &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n[6] &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n[7] &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"div\") |&gt; html_text()\n\n[1] \"John\"                                                                                  \n[2] \"Doe\"                                                                                   \n[3] \"\\n      555-555-1234\\n      555-555-2345\\n      555-555-9999\\n      555-555-8888\\n    \"\n[4] \"555-555-1234\"                                                                          \n[5] \"555-555-2345\"                                                                          \n[6] \"555-555-9999\"                                                                          \n[7] \"555-555-8888\""
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#css-selectors",
    "href": "slides/10-web-scraping-slides.html#css-selectors",
    "title": "Web scaping",
    "section": "CSS selectors",
    "text": "CSS selectors\n\nWe will use a tool called SelectorGadget to help us identify the HTML elements of interest by constructing a CSS selector which can be used to subset the HTML document.\n\n\n\nSome examples of basic selector syntax is below,\n\n\n\n\n\n\n\n\n\nSelector\nExample\nDescription\n\n\n\n.class\n.title\nSelect all elements with class=‚Äútitle‚Äù\n\n\n#id\n#name\nSelect all elements with id=‚Äúname‚Äù\n\n\nelement\np\nSelect all &lt;p&gt; elements\n\n\nelement element\ndiv p\nSelect all &lt;p&gt; elements inside a &lt;div&gt; element\n\n\nelement&gt;element\ndiv &gt; p\nSelect all &lt;p&gt; elements with &lt;div&gt; as a parent\n\n\n[attribute]\n[class]\nSelect all elements with a class attribute\n\n\n[attribute=value]\n[class=title]\nSelect all elements with class=‚Äútitle‚Äù"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#css-classes-and-ids",
    "href": "slides/10-web-scraping-slides.html#css-classes-and-ids",
    "title": "Web scaping",
    "section": "CSS classes and ids",
    "text": "CSS classes and ids\n\nread_html(html) |&gt; html_elements(\".name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n\n\nread_html(html) |&gt; html_elements(\"div.name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"#first\")\n\n{xml_nodeset (1)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#text-with-html_text-vs.-html_text2",
    "href": "slides/10-web-scraping-slides.html#text-with-html_text-vs.-html_text2",
    "title": "Web scaping",
    "section": "Text with html_text() vs.¬†html_text2()\n",
    "text": "Text with html_text() vs.¬†html_text2()\n\n\nhtml = read_html(\n  \"&lt;p&gt;  \n    This is the first sentence in the paragraph.\n    This is the second sentence that should be on the same line as the first sentence.&lt;br&gt;This third sentence should start on a new line.\n  &lt;/p&gt;\"\n)\n\n\n\nhtml |&gt; html_text()\n\n[1] \"  \\n    This is the first sentence in the paragraph.\\n    This is the second sentence that should be on the same line as the first sentence.This third sentence should start on a new line.\\n  \"\n\nhtml |&gt; html_text2()\n\n[1] \"This is the first sentence in the paragraph. This is the second sentence that should be on the same line as the first sentence.\\nThis third sentence should start on a new line.\""
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#html-tables-with-html_table",
    "href": "slides/10-web-scraping-slides.html#html-tables-with-html_table",
    "title": "Web scaping",
    "section": "HTML tables with html_table()\n",
    "text": "HTML tables with html_table()\n\n\nhtml_table = \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;table&gt;\n      &lt;tr&gt; &lt;th&gt;a&lt;/th&gt; &lt;th&gt;b&lt;/th&gt; &lt;th&gt;c&lt;/th&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;td&gt;5&lt;/td&gt; &lt;/tr&gt;\n    &lt;/table&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html_table) |&gt;\n  html_elements(\"table\") |&gt; \n  html_table()\n\n[[1]]\n# A tibble: 3 √ó 3\n      a     b     c\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     1     2     3\n2     2     3     4\n3     3     4     5"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#selectorgadget",
    "href": "slides/10-web-scraping-slides.html#selectorgadget",
    "title": "Web scaping",
    "section": "SelectorGadget",
    "text": "SelectorGadget\nSelectorGadget (selectorgadget.com) is a javascript based tool that helps you interactively build an appropriate CSS selector for the content you are interested in."
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#opinion-articles-in-the-chronicle",
    "href": "slides/10-web-scraping-slides.html#opinion-articles-in-the-chronicle",
    "title": "Web scaping",
    "section": "Opinion articles in The Chronicle",
    "text": "Opinion articles in The Chronicle\nGo to https://www.dukechronicle.com/section/opinion?page=1&per_page=500.\n\nHow many articles are on the page?"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#goal",
    "href": "slides/10-web-scraping-slides.html#goal",
    "title": "Web scaping",
    "section": "Goal",
    "text": "Goal\n\n\n\nScrape data and organize it in a tidy format in R\nPerform light text parsing to clean data\nSummarize and visualze the data"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#ae-09",
    "href": "slides/10-web-scraping-slides.html#ae-09",
    "title": "Web scaping",
    "section": "ae-09",
    "text": "ae-09\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called chronicle-scrape.R and follow along."
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#recap",
    "href": "slides/10-web-scraping-slides.html#recap",
    "title": "Web scaping",
    "section": "Recap",
    "text": "Recap\n\nUse the SelectorGadget identify tags for elements you want to grab\nUse rvest to first read the whole page (into R) and then parse the object you‚Äôve read in to the elements you‚Äôre interested in\nPut the components together in a data frame (a tibble) and analyze it like you analyze any other data"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#a-new-r-workflow",
    "href": "slides/10-web-scraping-slides.html#a-new-r-workflow",
    "title": "Web scaping",
    "section": "A new R workflow",
    "text": "A new R workflow\n\nWhen working in a Quarto document, your analysis is re-run each time you knit\nIf web scraping in a Quarto document, you‚Äôd be re-scraping the data each time you knit, which is undesirable (and not nice)!\n\nAn alternative workflow:\n\nUse an R script to save your code\nSaving interim data scraped using the code in the script as CSV or RDS files\nUse the saved data in your analysis in your Quarto document"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#ethics-can-you-vs-should-you",
    "href": "slides/10-web-scraping-slides.html#ethics-can-you-vs-should-you",
    "title": "Web scaping",
    "section": "Ethics: ‚ÄúCan you?‚Äù vs ‚ÄúShould you?‚Äù",
    "text": "Ethics: ‚ÄúCan you?‚Äù vs ‚ÄúShould you?‚Äù\n\n\n\n\n\n\nSource: Brian Resnick, Researchers just released profile data on 70,000 OkCupid users without permission, Vox."
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#can-you-vs-should-you",
    "href": "slides/10-web-scraping-slides.html#can-you-vs-should-you",
    "title": "Web scaping",
    "section": "‚ÄúCan you?‚Äù vs ‚ÄúShould you?‚Äù",
    "text": "‚ÄúCan you?‚Äù vs ‚ÄúShould you?‚Äù"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#challenges-unreliable-formatting",
    "href": "slides/10-web-scraping-slides.html#challenges-unreliable-formatting",
    "title": "Web scaping",
    "section": "Challenges: Unreliable formatting",
    "text": "Challenges: Unreliable formatting\n\n\n\n\n\n\nalumni.duke.edu/news/notable-alumni"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#challenges-data-broken-into-many-pages",
    "href": "slides/10-web-scraping-slides.html#challenges-data-broken-into-many-pages",
    "title": "Web scaping",
    "section": "Challenges: Data broken into many pages",
    "text": "Challenges: Data broken into many pages"
  },
  {
    "objectID": "slides/10-web-scraping-slides.html#workflow-screen-scraping-vs.-apis",
    "href": "slides/10-web-scraping-slides.html#workflow-screen-scraping-vs.-apis",
    "title": "Web scaping",
    "section": "Workflow: Screen scraping vs.¬†APIs",
    "text": "Workflow: Screen scraping vs.¬†APIs\nTwo different scenarios for web scraping:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy)\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/10-web-scraping.html#while-you-wait",
    "href": "slides/10-web-scraping.html#while-you-wait",
    "title": "Web scaping",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\n\n\n\nIf you haven‚Äôt yet done so: Install a Chrome browser and the SelectorGadget extension:\n\nChrome\nSelectorGadget\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-09-age-gaps-sales-import.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/10-web-scraping.html#announcements",
    "href": "slides/10-web-scraping.html#announcements",
    "title": "Web scaping",
    "section": "Announcements",
    "text": "Announcements\nMidterm things:\n\nPractice midterm: Posted on the course website\nLecture recordings: Available until the in-class midterm, link emailed earlier today\nApplication exercise catch-up: Complete all application exercises up to the midterm by the in-class midterm (and get any missed points!)\nMidterm review: In class on Thursday, come with questions!"
  },
  {
    "objectID": "slides/10-web-scraping.html#age-gaps",
    "href": "slides/10-web-scraping.html#age-gaps",
    "title": "Web scaping",
    "section": "Age gaps",
    "text": "Age gaps\nData prep:\n\nlibrary(tidyverse)\n\nage_gaps &lt;- read_csv(\"data/age-gaps.csv\")\n\nage_gaps_heterosexual &lt;- age_gaps |&gt;\n  filter(character_1_gender != character_2_gender)"
  },
  {
    "objectID": "slides/10-web-scraping.html#age-gaps-1",
    "href": "slides/10-web-scraping.html#age-gaps-1",
    "title": "Web scaping",
    "section": "Age gaps",
    "text": "Age gaps\nLabel the data:\n\nage_gaps_heterosexual &lt;- age_gaps_heterosexual |&gt;\n  mutate(\n    older = case_when(\n      character_1_gender == \"woman\" & actor_1_age &gt; actor_2_age ~ \"woman older\",\n      character_2_gender == \"woman\" & actor_2_age &gt; actor_1_age ~ \"woman older\",\n      character_1_gender == \"man\"   & actor_1_age &gt; actor_2_age ~ \"man older\",\n      character_2_gender == \"man\"   & actor_2_age &gt; actor_1_age ~ \"man older\",\n      actor_1_age == actor_2_age ~ \"same age\"\n    )\n  )"
  },
  {
    "objectID": "slides/10-web-scraping.html#age-gaps-2",
    "href": "slides/10-web-scraping.html#age-gaps-2",
    "title": "Web scaping",
    "section": "Age gaps",
    "text": "Age gaps\nAge gaps split:\n\nwoman_older &lt;- age_gaps_heterosexual |&gt; \n  filter(older == \"woman older\")\nman_older   &lt;- age_gaps_heterosexual |&gt; \n  filter(older == \"man older\")\nsame_age    &lt;- age_gaps_heterosexual |&gt;\n  filter(older == \"same age\")\n\n. . .\nCheck:\n\n(\n  nrow(woman_older) + nrow(man_older) + nrow(same_age)\n) == nrow(age_gaps_heterosexual)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/10-web-scraping.html#age-gaps-3",
    "href": "slides/10-web-scraping.html#age-gaps-3",
    "title": "Web scaping",
    "section": "Age gaps",
    "text": "Age gaps\nWrite data\n\nwrite_csv(woman_older, file = \"data/woman-older.csv\")\nwrite_csv(man_older, file = \"data/man-older.csv\")\nwrite_csv(same_age, file = \"data/same-age.csv\")"
  },
  {
    "objectID": "slides/10-web-scraping.html#reading-the-chronicle",
    "href": "slides/10-web-scraping.html#reading-the-chronicle",
    "title": "Web scaping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nHow often do you read The Chronicle?\n\nEvery day\n3-5 times a week\nOnce a week\nRarely"
  },
  {
    "objectID": "slides/10-web-scraping.html#reading-the-chronicle-1",
    "href": "slides/10-web-scraping.html#reading-the-chronicle-1",
    "title": "Web scaping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nWhat do you think is the most common word in the titles of The Chronicle opinion pieces?"
  },
  {
    "objectID": "slides/10-web-scraping.html#analyzing-the-chronicle",
    "href": "slides/10-web-scraping.html#analyzing-the-chronicle",
    "title": "Web scaping",
    "section": "Analyzing The Chronicle",
    "text": "Analyzing The Chronicle"
  },
  {
    "objectID": "slides/10-web-scraping.html#reading-the-chronicle-2",
    "href": "slides/10-web-scraping.html#reading-the-chronicle-2",
    "title": "Web scaping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nHow do you think the sentiments in opinion pieces in The Chronicle compare across authors? Roughly the same? Wildly different? Somewhere in between?"
  },
  {
    "objectID": "slides/10-web-scraping.html#analyzing-the-chronicle-1",
    "href": "slides/10-web-scraping.html#analyzing-the-chronicle-1",
    "title": "Web scaping",
    "section": "Analyzing The Chronicle",
    "text": "Analyzing The Chronicle"
  },
  {
    "objectID": "slides/10-web-scraping.html#all-of-this-analysis-is-done-in-r",
    "href": "slides/10-web-scraping.html#all-of-this-analysis-is-done-in-r",
    "title": "Web scaping",
    "section": "All of this analysis is done in R!",
    "text": "All of this analysis is done in R!\n\n(mostly) with tools you already know!"
  },
  {
    "objectID": "slides/10-web-scraping.html#common-words-in-the-chronicle-titles",
    "href": "slides/10-web-scraping.html#common-words-in-the-chronicle-titles",
    "title": "Web scaping",
    "section": "Common words in The Chronicle titles",
    "text": "Common words in The Chronicle titles\nCode for the earlier plot:\n\nstop_words &lt;- read_csv(\"data/stop-words.csv\")\nchronicle |&gt;\n  tidytext::unnest_tokens(word, title) |&gt;\n  mutate(word = str_replace_all(word, \"‚Äô\", \"'\")) |&gt;\n  anti_join(stop_words) |&gt;\n  count(word, sort = TRUE) |&gt;\n  filter(word != \"duke's\") |&gt;\n  slice_head(n = 20) |&gt;\n  mutate(word = fct_reorder(word, n)) |&gt;\n  ggplot(aes(y = word, x = n, fill = log(n))) +\n  geom_col(show.legend = FALSE) +\n  theme_minimal(base_size = 16) +\n  labs(\n    x = \"Number of mentions\",\n    y = \"Word\",\n    title = \"The Chronicle - Opinion pieces\",\n    subtitle = \"Common words in the 500 most recent opinion pieces\",\n    caption = \"Source: Data scraped from The Chronicle on Sep 30, 2024\"\n  ) +\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/10-web-scraping.html#avg-sentiment-scores-of-abstracts",
    "href": "slides/10-web-scraping.html#avg-sentiment-scores-of-abstracts",
    "title": "Web scaping",
    "section": "Avg sentiment scores of abstracts",
    "text": "Avg sentiment scores of abstracts\nCode for the earlier plot:\n\nafinn_sentiments &lt;- read_csv(\"data/afinn-sentiments.csv\")\nchronicle |&gt;\n  tidytext::unnest_tokens(word, abstract) |&gt;\n  mutate(word = str_replace_all(word, \"‚Äô\", \"'\")) |&gt;\n  anti_join(stop_words) |&gt;\n  left_join(afinn_sentiments) |&gt; \n  group_by(author, title) |&gt;\n  summarize(total_sentiment = sum(value, na.rm = TRUE), .groups = \"drop\") |&gt;\n  group_by(author) |&gt;\n  summarize(\n    n_articles = n(),\n    avg_sentiment = mean(total_sentiment, na.rm = TRUE),\n  ) |&gt;\n  filter(n_articles &gt; 1 & !is.na(author)) |&gt;\n  arrange(desc(avg_sentiment)) |&gt;\n  slice(c(1:10, 40:49)) |&gt;\n  mutate(\n    author = fct_reorder(author, avg_sentiment),\n    neg_pos = if_else(avg_sentiment &lt; 0, \"neg\", \"pos\"),\n    label_position = if_else(neg_pos == \"neg\", 0.25, -0.25)\n  ) |&gt;\n  ggplot(aes(y = author, x = avg_sentiment)) +\n  geom_col(aes(fill = neg_pos), show.legend = FALSE) +\n  geom_text(\n    aes(x = label_position, label = author, color = neg_pos),\n    hjust = c(rep(1,10), rep(0, 10)),\n    show.legend = FALSE,\n    fontface = \"bold\"\n  ) +\n  geom_text(\n    aes(label = round(avg_sentiment, 1)),\n    hjust = c(rep(1.25, 10), rep(-0.25, 10)),\n    color = \"white\",\n    fontface = \"bold\"\n  ) +\n  scale_fill_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_color_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  coord_cartesian(xlim = c(-8, 8)) +\n  labs(\n    x = \"negative  ‚Üê     Average sentiment score (AFINN)     ‚Üí  positive\",\n    y = NULL,\n    title = \"The Chronicle - Opinion pieces\\nAverage sentiment scores of abstracts by author\",\n    subtitle = \"Top 10 average positive and negative scores\",\n    caption = \"Source: Data scraped from The Chronicle on Sep 30, 2024\"\n  ) +\n  theme_void(base_size = 16) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5, margin = unit(c(0.5, 0, 1, 0), \"lines\")),\n    axis.title.x = element_text(color = \"gray30\", size = 12),\n    plot.caption = element_text(color = \"gray30\", size = 10)\n  )"
  },
  {
    "objectID": "slides/10-web-scraping.html#where-is-the-data-coming-from",
    "href": "slides/10-web-scraping.html#where-is-the-data-coming-from",
    "title": "Web scaping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\nhttps://www.dukechronicle.com/section/opinion"
  },
  {
    "objectID": "slides/10-web-scraping.html#where-is-the-data-coming-from-1",
    "href": "slides/10-web-scraping.html#where-is-the-data-coming-from-1",
    "title": "Web scaping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\n\n\n\n\n\n\n\nchronicle\n\n# A tibble: 500 √ó 6\n   title                       author date       abstract column url  \n   &lt;chr&gt;                       &lt;chr&gt;  &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;\n 1 The Chronicle is accepting‚Ä¶ Remem‚Ä¶ 2024-09-30 If you ‚Ä¶ Opini‚Ä¶ http‚Ä¶\n 2 Polls and prejudice         Cara ‚Ä¶ 2024-09-30 Sitting‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 3 I hate Duke‚Äôs sodding grass Shamb‚Ä¶ 2024-09-30 Duke‚Äôs ‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 4 We should reimagine our ve‚Ä¶ Zubin‚Ä¶ 2024-09-28 In addi‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 5 Imagining the restorative ‚Ä¶ Nik N‚Ä¶ 2024-09-28 With cr‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 6 Community members share re‚Ä¶ Remem‚Ä¶ 2024-09-27 We welc‚Ä¶ Opini‚Ä¶ http‚Ä¶\n 7 Costs of college campus ec‚Ä¶ Lisa ‚Ä¶ 2024-09-26 What ar‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 8 Embracing polyhedronism     Aaron‚Ä¶ 2024-09-26 But ins‚Ä¶ Campu‚Ä¶ http‚Ä¶\n 9 Comparison is the thief of‚Ä¶ Angar‚Ä¶ 2024-09-25 Why do ‚Ä¶ Campu‚Ä¶ http‚Ä¶\n10 We only live once: Protect‚Ä¶ Advik‚Ä¶ 2024-09-25 I am no‚Ä¶ Campu‚Ä¶ http‚Ä¶\n# ‚Ñπ 490 more rows"
  },
  {
    "objectID": "slides/10-web-scraping.html#scraping-the-web-what-why",
    "href": "slides/10-web-scraping.html#scraping-the-web-what-why",
    "title": "Web scaping",
    "section": "Scraping the web: what? why?",
    "text": "Scraping the web: what? why?\n\nIncreasing amount of data is available on the web\nThese data are provided in an unstructured format: you can always copy&paste, but it‚Äôs time-consuming and prone to errors\nWeb scraping is the process of extracting this information automatically and transform it into a structured dataset\n\nTwo different scenarios:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy).\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files."
  },
  {
    "objectID": "slides/10-web-scraping.html#hypertext-markup-language",
    "href": "slides/10-web-scraping.html#hypertext-markup-language",
    "title": "Web scaping",
    "section": "Hypertext Markup Language",
    "text": "Hypertext Markup Language\nMost of the data on the web is still largely available as HTML - while it is structured (hierarchical) it often is not available in a form useful for analysis (flat / tidy).\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;"
  },
  {
    "objectID": "slides/10-web-scraping.html#rvest",
    "href": "slides/10-web-scraping.html#rvest",
    "title": "Web scaping",
    "section": "rvest",
    "text": "rvest\n\n\n\nThe rvest package makes basic processing and manipulation of HTML data straight forward\nIt‚Äôs designed to work with pipelines built with |&gt;\n\nrvest.tidyverse.org\n\n\nlibrary(rvest)"
  },
  {
    "objectID": "slides/10-web-scraping.html#rvest-1",
    "href": "slides/10-web-scraping.html#rvest-1",
    "title": "Web scaping",
    "section": "rvest",
    "text": "rvest\nCore functions:\n\nread_html() - read HTML data from a url or character string.\nhtml_elements() - select specified elements from the HTML document using CSS selectors (or xpath).\nhtml_element() - select a single element from the HTML document using CSS selectors (or xpath).\nhtml_table() - parse an HTML table into a data frame.\nhtml_text() / html_text2() - extract tag‚Äôs text content.\nhtml_name - extract a tag/element‚Äôs name(s).\nhtml_attrs - extract all attributes.\nhtml_attr - extract attribute value(s) by name."
  },
  {
    "objectID": "slides/10-web-scraping.html#html-rvest-xml2",
    "href": "slides/10-web-scraping.html#html-rvest-xml2",
    "title": "Web scaping",
    "section": "html, rvest, & xml2",
    "text": "html, rvest, & xml2\n\nhtml &lt;- \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n. . .\n\nread_html(html)\n\n{html_document}\n&lt;html&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; cha ...\n[2] &lt;body&gt;\\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\\n    &lt;br&gt;&lt;div cl ..."
  },
  {
    "objectID": "slides/10-web-scraping.html#selecting-elements",
    "href": "slides/10-web-scraping.html#selecting-elements",
    "title": "Web scaping",
    "section": "Selecting elements",
    "text": "Selecting elements\n\nread_html(html) |&gt; html_elements(\"p\")\n\n{xml_nodeset (1)}\n[1] &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n\n\n. . .\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_text()\n\n[1] \"Hello world!\"\n\n\n. . .\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_name()\n\n[1] \"p\"\n\n\n. . .\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attrs()\n\n[[1]]\n   align \n\"center\" \n\n\n. . .\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attr(\"align\")\n\n[1] \"center\""
  },
  {
    "objectID": "slides/10-web-scraping.html#more-selecting-tags",
    "href": "slides/10-web-scraping.html#more-selecting-tags",
    "title": "Web scaping",
    "section": "More selecting tags",
    "text": "More selecting tags\n\n\nread_html(html) |&gt; html_elements(\"div\")\n\n{xml_nodeset (7)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n[3] &lt;div class=\"contact\"&gt;\\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/di ...\n[4] &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n[5] &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n[6] &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n[7] &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n\n\n\n. . .\n\n\nread_html(html) |&gt; html_elements(\"div\") |&gt; html_text()\n\n[1] \"John\"                                                                                  \n[2] \"Doe\"                                                                                   \n[3] \"\\n      555-555-1234\\n      555-555-2345\\n      555-555-9999\\n      555-555-8888\\n    \"\n[4] \"555-555-1234\"                                                                          \n[5] \"555-555-2345\"                                                                          \n[6] \"555-555-9999\"                                                                          \n[7] \"555-555-8888\""
  },
  {
    "objectID": "slides/10-web-scraping.html#css-selectors",
    "href": "slides/10-web-scraping.html#css-selectors",
    "title": "Web scaping",
    "section": "CSS selectors",
    "text": "CSS selectors\n\nWe will use a tool called SelectorGadget to help us identify the HTML elements of interest by constructing a CSS selector which can be used to subset the HTML document.\n\n. . .\n\nSome examples of basic selector syntax is below,\n\n\n\n\n\n\n\n\n\nSelector\nExample\nDescription\n\n\n\n.class\n.title\nSelect all elements with class=‚Äútitle‚Äù\n\n\n#id\n#name\nSelect all elements with id=‚Äúname‚Äù\n\n\nelement\np\nSelect all &lt;p&gt; elements\n\n\nelement element\ndiv p\nSelect all &lt;p&gt; elements inside a &lt;div&gt; element\n\n\nelement&gt;element\ndiv &gt; p\nSelect all &lt;p&gt; elements with &lt;div&gt; as a parent\n\n\n[attribute]\n[class]\nSelect all elements with a class attribute\n\n\n[attribute=value]\n[class=title]\nSelect all elements with class=‚Äútitle‚Äù"
  },
  {
    "objectID": "slides/10-web-scraping.html#css-classes-and-ids",
    "href": "slides/10-web-scraping.html#css-classes-and-ids",
    "title": "Web scaping",
    "section": "CSS classes and ids",
    "text": "CSS classes and ids\n\nread_html(html) |&gt; html_elements(\".name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n. . .\n\nread_html(html) |&gt; html_elements(\"div.name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n. . .\n\nread_html(html) |&gt; html_elements(\"#first\")\n\n{xml_nodeset (1)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;"
  },
  {
    "objectID": "slides/10-web-scraping.html#text-with-html_text-vs.-html_text2",
    "href": "slides/10-web-scraping.html#text-with-html_text-vs.-html_text2",
    "title": "Web scaping",
    "section": "Text with html_text() vs.¬†html_text2()\n",
    "text": "Text with html_text() vs.¬†html_text2()\n\n\nhtml = read_html(\n  \"&lt;p&gt;  \n    This is the first sentence in the paragraph.\n    This is the second sentence that should be on the same line as the first sentence.&lt;br&gt;This third sentence should start on a new line.\n  &lt;/p&gt;\"\n)\n\n. . .\n\nhtml |&gt; html_text()\n\n[1] \"  \\n    This is the first sentence in the paragraph.\\n    This is the second sentence that should be on the same line as the first sentence.This third sentence should start on a new line.\\n  \"\n\nhtml |&gt; html_text2()\n\n[1] \"This is the first sentence in the paragraph. This is the second sentence that should be on the same line as the first sentence.\\nThis third sentence should start on a new line.\""
  },
  {
    "objectID": "slides/10-web-scraping.html#html-tables-with-html_table",
    "href": "slides/10-web-scraping.html#html-tables-with-html_table",
    "title": "Web scaping",
    "section": "HTML tables with html_table()\n",
    "text": "HTML tables with html_table()\n\n\nhtml_table = \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;table&gt;\n      &lt;tr&gt; &lt;th&gt;a&lt;/th&gt; &lt;th&gt;b&lt;/th&gt; &lt;th&gt;c&lt;/th&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;td&gt;5&lt;/td&gt; &lt;/tr&gt;\n    &lt;/table&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n. . .\n\nread_html(html_table) |&gt;\n  html_elements(\"table\") |&gt; \n  html_table()\n\n[[1]]\n# A tibble: 3 √ó 3\n      a     b     c\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     1     2     3\n2     2     3     4\n3     3     4     5"
  },
  {
    "objectID": "slides/10-web-scraping.html#selectorgadget",
    "href": "slides/10-web-scraping.html#selectorgadget",
    "title": "Web scaping",
    "section": "SelectorGadget",
    "text": "SelectorGadget\nSelectorGadget (selectorgadget.com) is a javascript based tool that helps you interactively build an appropriate CSS selector for the content you are interested in."
  },
  {
    "objectID": "slides/10-web-scraping.html#opinion-articles-in-the-chronicle",
    "href": "slides/10-web-scraping.html#opinion-articles-in-the-chronicle",
    "title": "Web scaping",
    "section": "Opinion articles in The Chronicle",
    "text": "Opinion articles in The Chronicle\nGo to https://www.dukechronicle.com/section/opinion?page=1&per_page=500.\n\nHow many articles are on the page?"
  },
  {
    "objectID": "slides/10-web-scraping.html#goal",
    "href": "slides/10-web-scraping.html#goal",
    "title": "Web scaping",
    "section": "Goal",
    "text": "Goal\n\n\n\nScrape data and organize it in a tidy format in R\nPerform light text parsing to clean data\nSummarize and visualze the data"
  },
  {
    "objectID": "slides/10-web-scraping.html#ae-09",
    "href": "slides/10-web-scraping.html#ae-09",
    "title": "Web scaping",
    "section": "ae-09",
    "text": "ae-09\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called chronicle-scrape.R and follow along."
  },
  {
    "objectID": "slides/10-web-scraping.html#recap",
    "href": "slides/10-web-scraping.html#recap",
    "title": "Web scaping",
    "section": "Recap",
    "text": "Recap\n\nUse the SelectorGadget identify tags for elements you want to grab\nUse rvest to first read the whole page (into R) and then parse the object you‚Äôve read in to the elements you‚Äôre interested in\nPut the components together in a data frame (a tibble) and analyze it like you analyze any other data"
  },
  {
    "objectID": "slides/10-web-scraping.html#a-new-r-workflow",
    "href": "slides/10-web-scraping.html#a-new-r-workflow",
    "title": "Web scaping",
    "section": "A new R workflow",
    "text": "A new R workflow\n\nWhen working in a Quarto document, your analysis is re-run each time you knit\nIf web scraping in a Quarto document, you‚Äôd be re-scraping the data each time you knit, which is undesirable (and not nice)!\n\nAn alternative workflow:\n\nUse an R script to save your code\nSaving interim data scraped using the code in the script as CSV or RDS files\nUse the saved data in your analysis in your Quarto document"
  },
  {
    "objectID": "slides/10-web-scraping.html#ethics-can-you-vs-should-you",
    "href": "slides/10-web-scraping.html#ethics-can-you-vs-should-you",
    "title": "Web scaping",
    "section": "Ethics: ‚ÄúCan you?‚Äù vs ‚ÄúShould you?‚Äù",
    "text": "Ethics: ‚ÄúCan you?‚Äù vs ‚ÄúShould you?‚Äù\n\n\n\n\n\n\nSource: Brian Resnick, Researchers just released profile data on 70,000 OkCupid users without permission, Vox."
  },
  {
    "objectID": "slides/10-web-scraping.html#can-you-vs-should-you",
    "href": "slides/10-web-scraping.html#can-you-vs-should-you",
    "title": "Web scaping",
    "section": "‚ÄúCan you?‚Äù vs ‚ÄúShould you?‚Äù",
    "text": "‚ÄúCan you?‚Äù vs ‚ÄúShould you?‚Äù"
  },
  {
    "objectID": "slides/10-web-scraping.html#challenges-unreliable-formatting",
    "href": "slides/10-web-scraping.html#challenges-unreliable-formatting",
    "title": "Web scaping",
    "section": "Challenges: Unreliable formatting",
    "text": "Challenges: Unreliable formatting\n\n\n\n\n\n\nalumni.duke.edu/news/notable-alumni"
  },
  {
    "objectID": "slides/10-web-scraping.html#challenges-data-broken-into-many-pages",
    "href": "slides/10-web-scraping.html#challenges-data-broken-into-many-pages",
    "title": "Web scaping",
    "section": "Challenges: Data broken into many pages",
    "text": "Challenges: Data broken into many pages"
  },
  {
    "objectID": "slides/10-web-scraping.html#workflow-screen-scraping-vs.-apis",
    "href": "slides/10-web-scraping.html#workflow-screen-scraping-vs.-apis",
    "title": "Web scaping",
    "section": "Workflow: Screen scraping vs.¬†APIs",
    "text": "Workflow: Screen scraping vs.¬†APIs\nTwo different scenarios for web scraping:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy)\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files"
  },
  {
    "objectID": "lab/lab-3.html",
    "href": "lab/lab-3.html",
    "title": "Lab 3",
    "section": "",
    "text": "In this lab you‚Äôll build the data wrangling and visualization skills you‚Äôve developed so far and data tidying and joining to your repertoire.\n\n\n\n\n\n\nNote\n\n\n\nThis lab assumes you‚Äôve completed the labs so far and doesn‚Äôt repeat setup and overview content from those labs. If you have not yet done those, you should go back and review the previous labs before starting on this one.\n\n\n\nBy the end of the lab, you will‚Ä¶\n\nBe able to pivot/reshape data using tidyr\n\nContinue developing your data wrangling skills using dplyr\n\nBuild on your mastery of data visualizations using ggplot2\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub\n\nLog in to RStudio, clone your lab-3 repo from GitHub, open your lab-3.qmd document, and get started!\n\n\n\n\n\n\nClick here if you prefer to see step-by-step instructions\n\n\n\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-f24 organization on GitHub. Click on the repo with the prefix lab-3. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you‚Äôll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ‚ûõ New Project ‚ûõVersion Control ‚ûõ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-3.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-3.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., ‚ÄúAdded author name‚Äù), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIf you run into any issues with the first steps outlined above, flag a TA for help before proceeding.\n\n\n\nIn this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a ‚Äútidy‚Äù way.\n\nlibrary(tidyverse)\n\n\n\nRun the code cell by clicking on the green triangle (play) button for the code cell labeled load-packages. This loads the package to make its features (the functions and datasets in it) be accessible from your Console.\nThen, render the document which loads this package to make its features (the functions and datasets in it) be available for other code cells in your Quarto document.\n\nAs we‚Äôve discussed in lecture, your plots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\nAdditionally, code should follow the tidyverse style. Particularly,\n\nthere should be spaces before and line breaks after each + when building a ggplot,\nthere should also be spaces before and line breaks after each |&gt; in a data transformation pipeline,\ncode should be properly indented,\nthere should be spaces around = signs and spaces after commas.\n\nFurthermore, all code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks.\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub.\n\n\n\n\n\n\nImportant\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "lab/lab-3.html#learning-objectives",
    "href": "lab/lab-3.html#learning-objectives",
    "title": "Lab 3",
    "section": "",
    "text": "By the end of the lab, you will‚Ä¶\n\nBe able to pivot/reshape data using tidyr\n\nContinue developing your data wrangling skills using dplyr\n\nBuild on your mastery of data visualizations using ggplot2\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub"
  },
  {
    "objectID": "lab/lab-3.html#getting-started",
    "href": "lab/lab-3.html#getting-started",
    "title": "Lab 3",
    "section": "",
    "text": "Log in to RStudio, clone your lab-3 repo from GitHub, open your lab-3.qmd document, and get started!\n\n\n\n\n\n\nClick here if you prefer to see step-by-step instructions\n\n\n\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-f24 organization on GitHub. Click on the repo with the prefix lab-3. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you‚Äôll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ‚ûõ New Project ‚ûõVersion Control ‚ûõ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-3.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-3.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., ‚ÄúAdded author name‚Äù), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIf you run into any issues with the first steps outlined above, flag a TA for help before proceeding."
  },
  {
    "objectID": "lab/lab-3.html#packages",
    "href": "lab/lab-3.html#packages",
    "title": "Lab 3",
    "section": "",
    "text": "In this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a ‚Äútidy‚Äù way.\n\nlibrary(tidyverse)\n\n\n\nRun the code cell by clicking on the green triangle (play) button for the code cell labeled load-packages. This loads the package to make its features (the functions and datasets in it) be accessible from your Console.\nThen, render the document which loads this package to make its features (the functions and datasets in it) be available for other code cells in your Quarto document."
  },
  {
    "objectID": "lab/lab-3.html#guidelines",
    "href": "lab/lab-3.html#guidelines",
    "title": "Lab 3",
    "section": "",
    "text": "As we‚Äôve discussed in lecture, your plots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\nAdditionally, code should follow the tidyverse style. Particularly,\n\nthere should be spaces before and line breaks after each + when building a ggplot,\nthere should also be spaces before and line breaks after each |&gt; in a data transformation pipeline,\ncode should be properly indented,\nthere should be spaces around = signs and spaces after commas.\n\nFurthermore, all code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks.\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub.\n\n\n\n\n\n\nImportant\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "lab/lab-3.html#part-1",
    "href": "lab/lab-3.html#part-1",
    "title": "Lab 3",
    "section": "Part 1",
    "text": "Part 1\nInflation across the world\nFor this part of the analysis you will work with inflation data from various countries in the world over the last 30 years.\n\ncountry_inflation &lt;- read_csv(\"data/country-inflation.csv\")\n\nQuestion 1\nGet to know the data.\n\nglimpse() at the country_inflation data frame and answer the following questions based on the output. How many rows does country_inflation have and what does each row represent? How many columns does country_inflation have and what does each column represent?\nDisplay a list of the unique countries included in the dataset. Hint: Another word for ‚Äúunique‚Äù is distinct().\n\n\n\n\n\n\n\nTip\n\n\n\nA function that can be useful for part (b) is pull(). Check out its documentation for examples of usage.\n\n\nQuestion 2\nWhich countries had the top three highest inflation rates in 2023? Your output should be a data frame with two columns, country and 2023, with inflation rates in descending order, and three rows for the top three countries. Briefly comment on how the inflation rates for these countries compare to the inflation rate for United States in that year.\n\n\n\n\n\n\nTip\n\n\n\nColumn names that are numbers are not considered ‚Äúproper‚Äù in R, therefore to select them you‚Äôll need to surround them with backticks, e.g.¬†select( ` 1993 ` ).\n\n\nQuestion 3\nIn a single pipeline,\n\ncalculate the ratio of the inflation in 2023 and inflation in 1993 for each country and store this information in a new column called inf_ratio,\nselect the variables country and inf_ratio, and\nstore the result in a new data frame called country_inflation_ratios.\n\nThen, in two separate pipelines,\n\narrange country_inflation_ratios in increasing order of inf_ratio and\narrange country_inflation_ratios in decreasing order of inf_ratio.\n\nWhich country‚Äôs inflation increase is the largest over this time period and by how much? Which country‚Äôs inflation decrease is the largest over this time period and by how much?\n\n\n\n\n\n\nTip\n\n\n\nFor this question you‚Äôll once again need to use variables whose names are numbers (years) in your pipeline. Make sure to surround the names of such variables with backticks (`).\n\n\nQuestion 4\nReshape (pivot) country_inflation such that each row represents a country/year combination, with columns country, year, and annual_inflation. Then, display the resulting data frame and state how many rows and columns it has.\nRequirements:\n\nYour code must use one of pivot_longer() or pivot_wider(). There are other ways you can do this reshaping move in R, but this question requires solving this problem by pivoting.\nIn your pivot_*() function, you must use names_transform = as.numeric as an argument to transform the variable type to numeric as you pivot the data so that in the resulting data frame the year variable is numeric.\nThe resulting data frame must be saved as something other than country_inflation so you (1) can refer to this data frame later in your analysis and (2) do not overwrite country_inflation. Use a short but informative name.\n\n\n\n\n\n\n\nImportant\n\n\n\nThe remaining questions in Part 1 require the use of the pivoted data frame from Question 4.\n\n\n\nIf you haven‚Äôt yet done so, now is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.\n\nQuestion 5\nUse a separate, single pipeline to answer each of the following questions.\nRequirement: Your code must use the filter() function for each part, not arrange().\n\nWhat is the highest inflation rate observed between 1993 and 2023? The output of the pipeline should be a data frame with one row and three columns. In addition to code and output, your response should include a single sentence stating the country and year.\nWhat is the lowest inflation rate observed between 1993 and 2023? The output of the pipeline should be a data frame with one row and three columns. In addition to code and output, your response should include a single sentence stating the country and year.\nPutting (a) and (b) together: What are the highest and the lowest inflation rates observed between 1993 and 2023? The output of the pipeline should be a data frame with two rows and three columns.\nQuestion 6\na. Create a vector called countries_of_interest which contains the names of up to five countries you want to visualize the inflation rates for over the years. For example, if these countries are T√ºrkiye and United States, you can express this as follows:\n\ncountries_of_interest &lt;- c(\"T√ºrkiye\", \"United States\")\n\nIf they are T√ºrkiye, United States, and Chile, you can express this as follows:\n\ncountries_of_interest &lt;- c(\n  \"T√ºrkiye\", \"United States\", \"Chile\"\n)\n\nSo on and so forth‚Ä¶ Then, in 1-2 sentences, state why you chose these countries.\n\n\n\n\n\n\nNote\n\n\n\nYour countries_of_interest should consist of no more than five countries. Make sure that the spelling of your countries matches how they appear in the dataset.\n\n\nb. In a single pipeline, filter your reshaped dataset to include only the countries_of_interest from part (a), and save the resulting data frame with a new name so you (1) can refer to this data frame later in your analysis and (2) do not overwrite the data frame you‚Äôre starting with. Use a short but informative name. Then, in a new pipeline, find the distinct() countries in the data frame you created.\n\n\n\n\n\n\nTip\n\n\n\nThe number of distinct countries in the filtered data frame you created in part (b) should equal the number of countries you chose in part (a). If it doesn‚Äôt, you might have misspelled a country name or made a mistake in filtering for these countries. Go back and correct your work.\n\n\nQuestion 7\nUsing your data frame from the previous question, create a plot of annual inflation vs.¬†year for these countries. Then, in a few sentences, describe the patterns you observe in the plot, particularly focusing on anything you find surprising or not surprising, based on your knowledge (or lack thereof) of these countries economies.\nRequirements for the plot:\n\nData should be represented with points as well as lines connecting the points for each country.\nEach country should be represented by a different color line and different color and shape points.\nAxes and legend should be properly labeled.\nThe plot should have an appropriate title (and optionally a subtitle).\nPlot should be customized in at least one way ‚Äì you could use a different than default color scale, or different than default theme, or some other customization.\n\n\nNow is another good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "lab/lab-3.html#part-2",
    "href": "lab/lab-3.html#part-2",
    "title": "Lab 3",
    "section": "Part 2",
    "text": "Part 2\nInflation in the US\nThe OECD defines inflation as follows:\n\nInflation is a rise in the general level of prices of goods and services that households acquire for the purpose of consumption in an economy over a period of time.\nThe main measure of inflation is the annual inflation rate which is the movement of the Consumer Price Index (CPI) from one month/period to the same month/period of the previous year expressed as percentage over time.\nSource: OECD CPI FAQ\n\nCPI is broken down into 12 expenditures such as food, housing, health, etc. Your goal in this part is to create another time series plot of annual inflation, this time for US only.\nThe data you will need to create this visualization is spread across two files:\n\n\nus-inflation.csv: Annual inflation rate for the US for 12 CPI expenditures. Each expenditure is identified by an ID number.\n\ncpi-expenditures.csv: A ‚Äúlookup table‚Äù of CPI expenditure ID numbers and their descriptions.\n\nLet‚Äôs load both of these files.\n\nus_inflation &lt;- read_csv(\"data/us-inflation.csv\")\ncpi_expenditures &lt;- read_csv(\"data/cpi-expenditures.csv\")\n\nQuestion 8\na. How many columns and how many rows does the us_inflation dataset have? What are the variables in it? Which years do these data span? Write a brief (1-2 sentences) narrative summarizing this information.\nb. How many columns and how many rows does the cpi_expenditures dataset have? What are the variables in it? Write a brief (1-2 sentences) narrative summarizing this information.\nc. Create a new dataset by joining the us_inflation dataset with the cpi_expenditure_id dataset.\n\nDetermine which type of join is the most appropriate one and use that.\nNote that the two datasets don‚Äôt have a variable with a common name, though they do have variables that contain common information but are named differently. You will need to first figure out which variables those are, and then define the by argument and use the join_by() function to indicate these variables to join the datasets by.\nUse a short but informative name for the joined dataset, and do not overwrite either of the datasets that go into creating it.\n\nThen, find the number of rows and columns of the resulting dataset and report the names of its columns. Add a brief (1-2 sentences) narrative summarizing this information.\nQuestion 9\na. Create a vector called expenditures_of_interest which contains the descriptions or IDs of CPI expenditures you want to visualize. Your expenditures_of_interest should consist of no more than five expenditures. If you‚Äôre using descriptions, make sure that the spelling of your expenditures matches how they appear in the dataset. Then, in 1-2 sentences, state why you chose these expenditures.\n\n\n\n\n\n\nTip\n\n\n\nRefer back to the guidance provided in Question 6 if you‚Äôre not sure how to create this vector.\n\n\nb. In a single pipeline, filter your joined dataset to include only the expenditures_of_interest from part (a), and save the resulting data frame with a new name so you (1) can refer to this data frame later in your analysis and (2) do not overwrite the data frame you‚Äôre starting with. Use a short but informative name. Then, in a new pipeline, find the distinct() expenditures in the data frame you created.\nQuestion 10\nUsing your data frame from the previous question, create a plot of annual inflation vs.¬†year for these expenditures. Then, in a few sentences, describe the patterns you observe in the plot, particularly focusing on anything you find surprising or not surprising, based on your knowledge (or lack thereof) of inflation rates in the US over the last decade.\n\nData should be represented with points as well as lines connecting the points for each expenditure.\nEach expenditure should be represented by a different color line and different color and shape points.\nAxes and legend should be properly labeled.\nThe plot should have an appropriate title (and optionally a subtitle).\nPlot should be customized in at least one way ‚Äì you could use a different than default color scale, or different than default theme, or some other customization.\nIf your legend has labels that are too long, you can try moving the legend to the bottom and stack the labels vertically. Hint: The legend.position and legend.direction arguments of the theme() functions will be useful.\n\n\nggplot(...) +\n  ... +\n  theme(\n    legend.position = \"bottom\", \n    legend.direction = \"vertical\"\n  )\n\n\nIf you haven‚Äôt yet done so since Part 1, now is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "lab/lab-3.html#submission",
    "href": "lab/lab-3.html#submission",
    "title": "Lab 3",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered ‚Äúon time‚Äù.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you‚Äôll be prompted to submit it.\nMark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be ‚Äúchecked‚Äù).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope"
  },
  {
    "objectID": "lab/lab-3.html#grading-and-feedback",
    "href": "lab/lab-3.html#grading-and-feedback",
    "title": "Lab 3",
    "section": "Grading and feedback",
    "text": "Grading and feedback\n\nSome of the questions will be graded for accuracy.\nSome will be graded for completion.\nThere are also workflow points, for coding style, for committing at least three times as you work through your lab, and for overall organization.\nYou‚Äôll receive feedback on your lab on Gradescope within a week."
  },
  {
    "objectID": "lab/lab-0.html",
    "href": "lab/lab-0.html",
    "title": "Lab 0",
    "section": "",
    "text": "This lab will set you up for the computing workflow and give you an opportunity to introduce yourselves to each other and the teaching team."
  },
  {
    "objectID": "lab/lab-0.html#access-r-and-rstudio",
    "href": "lab/lab-0.html#access-r-and-rstudio",
    "title": "Lab 0",
    "section": "Access R and RStudio",
    "text": "Access R and RStudio\n\nGo to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 to log into the Docker container. You should now see the RStudio environment.\n\nGo to https://cmgr.oit.duke.edu/containers and under Reservations available click on reserve STA 198-199 to reserve a container for yourself.\n\n\n\n\n\n\nNote\n\n\n\nA container is a self-contained instance of RStudio for you, and you alone. You will do all of your computing in your container.\n\n\nOnce you‚Äôve reserved the container you‚Äôll see that it will show up under My reservations.\nTo launch your container click on it under My reservations, then click Login, and then Start.1"
  },
  {
    "objectID": "lab/lab-0.html#create-a-github-account",
    "href": "lab/lab-0.html#create-a-github-account",
    "title": "Lab 0",
    "section": "Create a GitHub account",
    "text": "Create a GitHub account\nGo to https://github.com/ and walk through the steps for creating an account. You do not have to use your Duke email address, but I recommend doing so.2\n\n\n\n\n\n\nNote\n\n\n\nYou‚Äôll need to choose a user name. I recommend reviewing the user name advice at https://happygitwithr.com/github-acct#username-advice before choosing a username.\n\n\n\n\n\n\n\n\nWhat if I already have a GitHub account?\n\n\n\n\n\nIf you already have a GitHub account, you do not need to create a new one for this course. Just log in to that account to make sure you still remember your username and password."
  },
  {
    "objectID": "lab/lab-0.html#set-up-your-ssh-key",
    "href": "lab/lab-0.html#set-up-your-ssh-key",
    "title": "Lab 0",
    "section": "Set up your SSH key",
    "text": "Set up your SSH key\nYou will authenticate GitHub using SSH (Secure Shell Protocol ‚Äì it doesn‚Äôt really matter what this means for the purpose of this course). Below is an outline of the authentication steps; you are encouraged to follow along as your TA demonstrates the steps.\n\n\n\n\n\n\nNote\n\n\n\nYou only need to do this authentication process one time on a single system.\n\n\n\nGo back to your RStudio container and type credentials::ssh_setup_github() into your console.\nR will ask ‚ÄúNo SSH key found. Generate one now?‚Äù You should click 1 for yes.\nYou will generate a key. R will then ask ‚ÄúWould you like to open a browser now?‚Äù You should click 1 for yes.\nYou may be asked to provide your GitHub username and password to log into GitHub. After entering this information, you should paste the key in and give it a name. You might name it in a way that indicates where the key will be used, e.g., sta199).\n\nYou can find more detailed instructions here if you‚Äôre interested."
  },
  {
    "objectID": "lab/lab-0.html#configure-git-to-introduce-yourself",
    "href": "lab/lab-0.html#configure-git-to-introduce-yourself",
    "title": "Lab 0",
    "section": "Configure Git to introduce yourself",
    "text": "Configure Git to introduce yourself\nThere is one more thing we need to do before getting started on the assignment. Specifically, we need to configure your git so that RStudio can communicate with GitHub. This requires two pieces of information: your name and email address.\nTo do so, you will use the use_git_config() function from the usethis package.\n\n\n\n\n\n\nNote\n\n\n\nYou‚Äôll hear about üì¶ packages a lot in the context of R ‚Äì basically they‚Äôre how developers write functions and bundle them to distribute to the community (and more on this later too!).\n\n\nType the following lines of code in the console in RStudio filling in your name and the address associated with your GitHub account.\n\nusethis::use_git_config(\n  user.name = \"Your name\", \n  user.email = \"Email associated with your GitHub account\"\n)\n\nFor example, mine would be\n\nusethis::use_git_config(\n  user.name = \"Mine √áetinkaya-Rundel\", \n  user.email = \"cetinkaya.mine@gmail.com\"\n)\n\n\n\n\n\n\n\nNote\n\n\n\nI used my gmail because that is the one I used to create my GitHub account. You should also be using the email address you used to create your GitHub account, it‚Äôs ok if it isn‚Äôt your Duke email.\n\n\nYou are now ready interact with GitHub via RStudio!\nIf you don‚Äôt do this, we won‚Äôt be able to tell who you are and give you points for the work you do‚Ä¶\n\n\n\n\n\n\nNote\n\n\n\nWell, a more accurate statement would be that we will be reaching out to you to get things right during the first few weeks of classes. But, it‚Äôs best if you can get it right today!\n\n\n\n\n\n\n\n\nNeed a recap? Watch this video!\n\n\n\n\n\nThe following video walks you through the steps outlined in the SSH key generation and Git configuration sections above."
  },
  {
    "objectID": "lab/lab-0.html#footnotes",
    "href": "lab/lab-0.html#footnotes",
    "title": "Lab 0",
    "section": "Footnotes",
    "text": "Footnotes\n\nYes, it‚Äôs too many steps. I don‚Äôt know why! But it works, and you‚Äôll get used to it. Trust me, it beats downloading and installing everything you need on your computers!‚Ü©Ô∏é\nGitHub has some perks for students you can take advantage of later in the course or in your future work, and it helps to have a .edu address to get verified as a student.‚Ü©Ô∏é"
  },
  {
    "objectID": "computing-code-alongs.html",
    "href": "computing-code-alongs.html",
    "title": "Code alongs",
    "section": "",
    "text": "The following videos feature ‚Äúcode alongs‚Äù as an additional resource for getting coding practice.",
    "crumbs": [
      "Computing",
      "Code alongs"
    ]
  },
  {
    "objectID": "computing-code-alongs.html#data-visualization-and-transformation",
    "href": "computing-code-alongs.html#data-visualization-and-transformation",
    "title": "Code alongs",
    "section": "Data visualization and transformation",
    "text": "Data visualization and transformation\n\nUN Votes\nFirst look at R amd RStudio.\n\n\n\nFirst look at Palmer Penguins\nFirst look at data science with the tidyverse.\n\n\n\nFlights and pipes\nData transformation\n\n\n\nStarwars characters\nData visualization\n\n\n\nDiving deeper with Palmer Penguins\nData visualization and transformation",
    "crumbs": [
      "Computing",
      "Code alongs"
    ]
  },
  {
    "objectID": "computing-troubleshooting.html",
    "href": "computing-troubleshooting.html",
    "title": "Computing troubleshooting",
    "section": "",
    "text": "If you‚Äôre having difficulty launching an RStudio session from your reserved container, go to status.oit.duke.edu and scroll down to Teaching and Learning Tools. Under this heading you‚Äôll find an entry called Container Manager (CMGR Coursework Containers).\n\nIf the status shows something other than Operational, this means there is a known incident with the containers. Check back later to see if it‚Äôs been resolved. If there‚Äôs a deadline coming up soon, post on the Ed Discussions to let us know that there‚Äôs an issue. We can look into how quickly it might get resolved and decide on what to do about the deadline accordingly. Note: We don‚Äôt anticipate this to happen regularly, the systems are Operational a huge majority of the time!\nIf the status shows Operational, this means the system is expected to be working. If you‚Äôre still having trouble, follow the steps in the order given below:\n\nRestart your browser.\nMake sure there are no updates pending for your browser. If there are, install those updates and restart your browser again.\nRequest a restart of your container ‚Äì To do so, select your container as you usually do and then, instead of Login, click on Request Restart. Read the warning in the next page, and then click once more to restart your container.\nClear your browser cache and restart your browser again.\nRestart your computer to ensure a fresh new connection.\nIf your issue persists, post on the course forum with details on what you‚Äôve tried and the errors you see (including verbatim errors and/or screenshots).",
    "crumbs": [
      "Computing",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "lab/lab-1.html",
    "href": "lab/lab-1.html",
    "title": "Lab 1",
    "section": "",
    "text": "This lab will introduce you to the course computing workflow. The main goal is to reinforce our demo of R and RStudio, which we will be using throughout the course both to learn the statistical concepts discussed in the course and to analyze real data and come to informed conclusions.\n\n\n\n\n\n\nNote\n\n\n\nR is the name of the programming language itself and RStudio is a convenient interface, commonly referred to as an integrated development environment or an IDE, for short.\n\n\nAn additional goal is to reinforce Git and GitHub, the version control, web hosting, and collaboration systems that we will be using throughout the course.\n\n\n\n\n\n\nNote\n\n\n\nGit is a version control system (like ‚ÄúTrack Changes‚Äù features from Microsoft Word but more powerful) and GitHub is the home for your Git-based projects on the internet (like DropBox but much better).\n\n\nAs the labs progress, you are encouraged to explore beyond what the labs dictate; a willingness to experiment will make you a much better programmer. Before we get to that stage, however, you need to build some basic fluency in R. Today we begin with the fundamental building blocks of R and RStudio: the interface, reading in data, and basic commands.\n\n\n\n\n\n\nWarning\n\n\n\nThis lab assumes that you have already completed Lab 0. If you have not, please\n\ngo back and do that first before proceeding and\nlet your TA know as they will need to set up a Lab 1 repository for you before you can complete this lab.\n\n\n\n\nBy the end of the lab, you will‚Ä¶\n\nBe familiar with the workflow using R, RStudio, Git, and GitHub\nGain practice writing a reproducible report using Quarto\nPractice version control using Git and GitHub\nBe able to create data visualizations using ggplot2\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nBelow are the components of the RStudio IDE.\n\nBelow are the components of a Quarto (.qmd) file.\n\n\n\nGo to the course organization at github.com/sta199-f24 organization on GitHub. Click on the repo with the prefix lab-1. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you‚Äôll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ‚ûõ New Project ‚ûõVersion Control ‚ûõ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-1.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nThe top portion of your Quarto file (between the three dashed lines) is called YAML. It stands for ‚ÄúYAML Ain‚Äôt Markup Language‚Äù. It is a human-friendly data representation for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\n\nOpen the Quarto (.qmd) file in your project, change the author name to your name, and render the document.\nIf you get a popup window error, click ‚ÄúTry again‚Äù.\nExamine the rendered document and make sure your name is updated in the document.\n\n\n\nGo to the Git pane in RStudio. This will be in the top right hand corner in a separate tab.\nIf you have made changes to your Quarto (.qmd) file, you should see it listed here. If you have rendered the document, you should also see its output, a PDF file, listed there.\n\n\nClick on it to select it in this list and then click on Diff.\nThis shows you the difference between the last committed state of the document and its current state including changes. You should see deletions in red and additions in green.\n\n\nIf you‚Äôre happy with these changes, prepare the changes to be pushed to your remote repository.\n\nFirst, stage your changes by checking the appropriate box on the files you want to prepare.\nNext, write a meaningful commit message (for instance, ‚ÄúUpdated author name‚Äù) in the Commit message box.\nFinally, click Commit. Note that every commit needs to have a commit message associated with it.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nYou don‚Äôt have to commit after every change, as this would get quite tedious. You should commit states that are meaningful to you for inspection, comparison, or restoration (e.g., restoring a previous version of your document).\nIn the first few assignments, we will tell you exactly when to commit and, in some cases, what commit message to use. As the semester progresses, we will let you make these decisions.\n\n\n\nNow that you have made an update and committed this change, it‚Äôs time to push these changes to your repo on GitHub.\n\nIn the Git pane, click on Push.\nThen, make sure all the changes went to GitHub. Go to your GitHub repo in your browser and refresh the page. You should see your commit message next to the updated files. If you see this, all your changes are on GitHub, and you‚Äôre good to go!\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you don‚Äôt see your update, go back to Step 4. Remember that in order to push your changes to GitHub, you must have staged (checked boxes) your commit (with a commit message) to be pushed and then click on Push.\n\n\n\nIn this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a ‚Äútidy‚Äù way.\n\nlibrary(tidyverse)\n\n\n\nRun the code cell by clicking on the green triangle (play) button for the code cell labeled load-packages. This loads the package to make its features (the functions and datasets in it) be accessible from your Console.\nThen, render the document which loads this package to make its features (the functions and datasets in it) be available for other code cells in your Quarto document.\n\n\nThe tidyverse is a meta-package. When you load it you get nine packages loaded for you:\n\n\ndplyr: for data wrangling\n\nforcats: for dealing with factors\n\nggplot2: for data visualization\n\nlubridate: for dealing with dates\n\npurrr: for iteration with functional programming\n\nreadr: for reading and writing data\n\nstringr: for string manipulation\n\ntibble: for modern, tidy data frames\n\ntidyr: for data tidying and rectangling\n\nAs we‚Äôve discussed in lecture, your plots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\nAdditionally, code should follow the tidyverse style. Particularly,\n\nthere should be spaces before and line breaks after each + when building a ggplot,\nthere should also be spaces before and line breaks after each |&gt; in a data transformation pipeline,\ncode should be properly indented,\nthere should be spaces around = signs and spaces after commas.\n\nFurthermore, all code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks.1\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub.\n\n\n\n\n\n\nImportant\n\n\n\nYou should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "lab/lab-1.html#learning-objectives",
    "href": "lab/lab-1.html#learning-objectives",
    "title": "Lab 1",
    "section": "",
    "text": "By the end of the lab, you will‚Ä¶\n\nBe familiar with the workflow using R, RStudio, Git, and GitHub\nGain practice writing a reproducible report using Quarto\nPractice version control using Git and GitHub\nBe able to create data visualizations using ggplot2"
  },
  {
    "objectID": "lab/lab-1.html#getting-started",
    "href": "lab/lab-1.html#getting-started",
    "title": "Lab 1",
    "section": "",
    "text": "Go to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nBelow are the components of the RStudio IDE.\n\nBelow are the components of a Quarto (.qmd) file.\n\n\n\nGo to the course organization at github.com/sta199-f24 organization on GitHub. Click on the repo with the prefix lab-1. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you‚Äôll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ‚ûõ New Project ‚ûõVersion Control ‚ûõ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-1.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nThe top portion of your Quarto file (between the three dashed lines) is called YAML. It stands for ‚ÄúYAML Ain‚Äôt Markup Language‚Äù. It is a human-friendly data representation for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\n\nOpen the Quarto (.qmd) file in your project, change the author name to your name, and render the document.\nIf you get a popup window error, click ‚ÄúTry again‚Äù.\nExamine the rendered document and make sure your name is updated in the document.\n\n\n\nGo to the Git pane in RStudio. This will be in the top right hand corner in a separate tab.\nIf you have made changes to your Quarto (.qmd) file, you should see it listed here. If you have rendered the document, you should also see its output, a PDF file, listed there.\n\n\nClick on it to select it in this list and then click on Diff.\nThis shows you the difference between the last committed state of the document and its current state including changes. You should see deletions in red and additions in green.\n\n\nIf you‚Äôre happy with these changes, prepare the changes to be pushed to your remote repository.\n\nFirst, stage your changes by checking the appropriate box on the files you want to prepare.\nNext, write a meaningful commit message (for instance, ‚ÄúUpdated author name‚Äù) in the Commit message box.\nFinally, click Commit. Note that every commit needs to have a commit message associated with it.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nYou don‚Äôt have to commit after every change, as this would get quite tedious. You should commit states that are meaningful to you for inspection, comparison, or restoration (e.g., restoring a previous version of your document).\nIn the first few assignments, we will tell you exactly when to commit and, in some cases, what commit message to use. As the semester progresses, we will let you make these decisions.\n\n\n\nNow that you have made an update and committed this change, it‚Äôs time to push these changes to your repo on GitHub.\n\nIn the Git pane, click on Push.\nThen, make sure all the changes went to GitHub. Go to your GitHub repo in your browser and refresh the page. You should see your commit message next to the updated files. If you see this, all your changes are on GitHub, and you‚Äôre good to go!\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you don‚Äôt see your update, go back to Step 4. Remember that in order to push your changes to GitHub, you must have staged (checked boxes) your commit (with a commit message) to be pushed and then click on Push."
  },
  {
    "objectID": "lab/lab-1.html#packages",
    "href": "lab/lab-1.html#packages",
    "title": "Lab 1",
    "section": "",
    "text": "In this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a ‚Äútidy‚Äù way.\n\nlibrary(tidyverse)\n\n\n\nRun the code cell by clicking on the green triangle (play) button for the code cell labeled load-packages. This loads the package to make its features (the functions and datasets in it) be accessible from your Console.\nThen, render the document which loads this package to make its features (the functions and datasets in it) be available for other code cells in your Quarto document.\n\n\nThe tidyverse is a meta-package. When you load it you get nine packages loaded for you:\n\n\ndplyr: for data wrangling\n\nforcats: for dealing with factors\n\nggplot2: for data visualization\n\nlubridate: for dealing with dates\n\npurrr: for iteration with functional programming\n\nreadr: for reading and writing data\n\nstringr: for string manipulation\n\ntibble: for modern, tidy data frames\n\ntidyr: for data tidying and rectangling"
  },
  {
    "objectID": "lab/lab-1.html#guidelines",
    "href": "lab/lab-1.html#guidelines",
    "title": "Lab 1",
    "section": "",
    "text": "As we‚Äôve discussed in lecture, your plots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\nAdditionally, code should follow the tidyverse style. Particularly,\n\nthere should be spaces before and line breaks after each + when building a ggplot,\nthere should also be spaces before and line breaks after each |&gt; in a data transformation pipeline,\ncode should be properly indented,\nthere should be spaces around = signs and spaces after commas.\n\nFurthermore, all code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks.1\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub.\n\n\n\n\n\n\nImportant\n\n\n\nYou should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "lab/lab-1.html#part-1",
    "href": "lab/lab-1.html#part-1",
    "title": "Lab 1",
    "section": "Part 1",
    "text": "Part 1\nLet‚Äôs take a trip to the Midwest!\nWe will use the midwest data frame for this lab. It is part of the ggplot2 R package, so the midwest data set is automatically loaded when you load the tidyverse package.\nThe data contains demographic characteristics of counties in the Midwest region of the United States.\nBecause the data set is part of the ggplot2 package, you can read documentation for the data set, including variable definitions by typing ?midwest in the Console or searching for midwest in the Help pane.\nQuestion 1\nVisualize the distribution of population density of counties using a histogram with geom_histogram() with four separate binwidths: a binwidth of 100, a binwidth of 1,000, a binwidth of 10,000, and a binwidth of 100,000. For example, you can create the first plot with:\n\nggplot(midwest, aes(x = popdensity)) +\n  geom_histogram(binwidth = 100) +\n  labs(\n    x = \"Population density\",\n    y = \"Count\",\n    title = \"Population density of Midwestern counties\",\n    subtitle = \"Binwidth = 100\"\n  )\n\nYou will need to make four different histograms. Make sure to set informative titles and axis labels for each of your plots. Then, comment on which binwidth is most appropriate for these data and why.\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 1‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 2\nVisualize the distribution of population density of counties again, this time using a boxplot with geom_boxplot(). Make sure to set informative titles and axis labels for your plot. Then, using information as needed from the box plot as well as the histogram from Question 1, describe the distribution of population density of counties and comment on any potential outliers, making sure to identify at least one county that is a clear outlier by name in your narrative and commenting on whether it makes sense to you that this county is an outlier. You can use the data viewer to identify the outliers interactively, you do not have to write code to identify them.\n\n\n\n\n\n\nImportant\n\n\n\nIn describing a distribution, make sure to mention shape, center, spread, and any unusual observations.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 2‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 3\nCreate a scatterplot of the percentage below poverty (percbelowpoverty on the y-axis) versus percentage of people with a college degree (percollege on the x-axis), where the color and shape of points are determined by state. Make sure to set informative titles, axis, and legend labels for your plot. First, describe the overall relationship between percentage of people with a college degree and percentage below poverty in Midwestern states, making sure to identify at least one county that is a clear outlier by name in your narrative. You can use the data viewer to identify the outliers interactively, you do not have to write code to identify them. Then, comment on whether you can identify how this relationship varies across states.\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 3‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 4\nNow, let‚Äôs examine the relationship between the same two variables, once again using different colors and shapes to represent each state, and using a separate plot for each state, i.e., with faceting with facet_wrap(). In addition to points (geom_point()), represent the data with a smooth curve fit to the data with geom_smooth(), with the argument se = FALSE. Make sure to set informative titles, axis, and legend labels for your plot. Which plot do you prefer - this plot or the plot in Question 3? Briefly explain your choice.\n\n\n\n\n\n\nNote\n\n\n\nse = FALSE removes the confidence bands around the line. These bands show the uncertainty around the smooth curve. We‚Äôll discuss uncertainty around estimates later in the course and bring these bands back then.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 4‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 5\nDo some states have counties that tend to be geographically larger than others?\nTo explore this question, create side-by-side boxplots of area (area) of a county based on state (state). How do typical county area sizes compare across states? How do variabilities of county sizes compare across states? Which state has the single largest county? Identify the name of this county. You can use the data viewer to identify it interactively, you do not have to write code.\n\nNow is another good time to render, commit, and push your changes to GitHub with a meaningful commit message.\nOnce again, make sure to commit and push all changed files so that your Git pane is empty afterwards.\n\nQuestion 6\nDo some states have a higher percentage of their counties located in a metropolitan area?\nCreate a segmented bar chart with one bar per state and the bar filled with colors according to the value of metro ‚Äì one color indicating Yes and the other color indicating No for whether a county is considered to be a metro area. The y-axis of the segmented barplot should range from 0 to 1, indicating proportions. Compare the percentage of counties in metro areas across the states based on this plot. Make sure to supplement your narrative with rough estimates of these percentages.\n\n\n\n\n\n\nHint\n\n\n\nFor this question, you should begin with the data wrangling pipeline below. We will learn more about data wrangling in the coming weeks, so this is a mini-preview. This pipeline creates a new variable called metro based on the value of the existing variable called inmetro. If the value of inmetro is equal to 1 (inmetro == 1), it sets the value of metro to \"Yes\", and if not, it sets the value of metro to \"No\". The resulting data frame is assigned back to midwest, overwriting the existing midwest data frame with a version that includes the new metro variable.\n\nmidwest &lt;- midwest |&gt;\n  mutate(metro = if_else(inmetro == 1, \"Yes\", \"No\"))\n\n\n\n\nNow is another good time to render, commit, and push your changes to GitHub with a meaningful commit message.\nAnd once again, make sure to commit and push all changed files so that your Git pane is empty afterward. We keep repeating this because it‚Äôs important and because we see students forget to do this. So take a moment to make sure you‚Äôre following along with the version control instructions.\n\nQuestion 7\nRecreate the plot below, and then give it a title. Then, identify at least one county that is a clear outlier in Wisconsin (WI) by name. You can use the data viewer to identify them interactively, you do not have to write code. Comment on the population composition of this county by investigating the percentage of other races living there.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe ggplot2 reference for themes will be helpful in determining the theme.\nThe size of the points is 2.\nThe transparency (alpha) of the points is 0.5.\nYou can put line breaks in labels with \\n.\n\n\n\n\nRender, commit, and push your final changes to GitHub with a meaningful commit message.\nMake sure to commit and push all changed files so that your Git pane is empty afterwards."
  },
  {
    "objectID": "lab/lab-1.html#part-2",
    "href": "lab/lab-1.html#part-2",
    "title": "Lab 1",
    "section": "Part 2",
    "text": "Part 2\nEnough about the Midwest!\nIn this part we will use a new, more recent, and potentially more relevant dataset on counties in North Carolina.\nThis dataset is stored in a file called nc-county.csv in the data folder of your project/repository.\nYou can read this file into R with the following code:\n\nnc_county &lt;- read_csv(\"data/nc-county.csv\")\n\nThis will read the CSV (comma separated values) file from the data folder and store the dataset as a data frame called nc_county in R.\nThe variables in the dataset and their descriptions are as follows:\n\n\ncounty: Name of county.\n\nstate_abb: State abbreviation (NC).\n\nstate_name: State name (North Carolina).\n\nland_area_m2: Land area of county in meters-squared, based on the 2020 census.\n\nland_area_mi2: Land area of county in miles-squared, based on the 2020 census.\n\npopulation: Population of county, based on the 2020 census.\n\ndensity: Population density calculated as population divided by land area in miles-squared.\n\nIn addition to being more recent and more relevant, this dataset is also more complete in the sense that we know the units of population density: people per mile-squared!\nQuestion 8\nFirst, guess what the relationship between population density and land area might be ‚Äì positive? negative? no relationship?\nThen, make a scatter plot of population density (density on the y-axis) vs.¬†land area in miles-squared (land_area_mi2 on the x-axis). Make sure to set an informative title and axis labels for your plot. Describe the relationship. Was your guess correct?\nQuestion 9\nNow make a scatter plot of population density (density on the y-axis) vs.¬†land area in meters-squared (land_area_m2 on the x-axis). Make sure to set an informative title and axis labels for your plot. Comment on how this scatterplot compares to the one in Exercise 8 ‚Äî is the relationship displayed same or different. Explain why.\nQuestion 10\nDid you select your pages on Gradescope? You don‚Äôt need to write an answer for this question, if you select your pages when you upload your lab to Gradescope, you‚Äôll get full points on this question. Otherwise, you‚Äôll get a 0 on this question.2"
  },
  {
    "objectID": "lab/lab-1.html#submission",
    "href": "lab/lab-1.html#submission",
    "title": "Lab 1",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered ‚Äúon time‚Äù.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you‚Äôll be prompted to submit it.\nMark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be ‚Äúchecked‚Äù).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope"
  },
  {
    "objectID": "lab/lab-1.html#grading-and-feedback",
    "href": "lab/lab-1.html#grading-and-feedback",
    "title": "Lab 1",
    "section": "Grading and feedback",
    "text": "Grading and feedback\n\nSome of the questions will be graded for accuracy.\nSome will be graded for completion.\nQuestion 10 is just asking you to select your pages on Gradescope, and you get points for following the instructions!\nThere are also workflow points, for coding style, for committing at least three times as you work through your lab, and for overall organization.\nYou‚Äôll receive feedback on your lab on Gradescope within a week.\n\nGood luck, and have fun with it!"
  },
  {
    "objectID": "lab/lab-1.html#footnotes",
    "href": "lab/lab-1.html#footnotes",
    "title": "Lab 1",
    "section": "Footnotes",
    "text": "Footnotes\n\nRemember, haikus not novellas when writing code!‚Ü©Ô∏é\nWe‚Äôre assigning points to this seemingly trivial task because not selecting your pages and questions will greatly slow down the grading. So we want to make sure you‚Äôre properly motivated to complete this task!‚Ü©Ô∏é"
  },
  {
    "objectID": "lab/lab-2.html",
    "href": "lab/lab-2.html",
    "title": "Lab 2",
    "section": "",
    "text": "In this lab, you‚Äôll continue to hone your data science workflow and integrate what you learned so far in the course (data visualization) with what‚Äôs coming up (data wrangling).\n\n\n\n\n\n\nNote\n\n\n\nThis lab assumes you‚Äôve completed Lab 0 and Lab 1 and doesn‚Äôt repeat setup and overview content from those labs. If you haven‚Äôt done those yet, you should review them before starting with this one.\n\n\n\nBy the end of the lab, you will‚Ä¶\n\nBe able to create transform data using dplyr\n\nBuild on your mastery of data visualizations using ggplot2\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-f24 organization on GitHub. Click on the repo with the prefix lab-2. It contains the starter documents you need to complete the lab.\nClick on the green CODE button and select Use SSH (this might already be selected by default; if it is, you‚Äôll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ‚ûõ New Project ‚ûõVersion Control ‚ûõ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-2.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-2.qmd, update the author field to your name, render your document, and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., ‚ÄúAdded author name‚Äù), and click Commit. Then, push the changes to your GitHub repository and, in your browser, confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\nImportant\n\n\n\nIf you encounter any issues with the above steps, flag a TA for help before proceeding.\n\n\n\nIn this lab, we will work with the tidyverse package, a collection of packages for performing data analysis in a ‚Äútidy‚Äù way.\n\nlibrary(tidyverse)\n\n\n\nRun the code cell by clicking on the green triangle (play) button for the code cell labeled load-packages. This loads the package so that its features (the functions and datasets in it) are accessible from your Console.\nThen, render the document that loads this package to make its features (the functions and datasets in it) available for other code cells in your Quarto document.\n\nAs we‚Äôve discussed in the lecture, your plots should include an informative title, axes and legends should have human-readable labels and aesthetic choices should be carefully considered.\nAdditionally, code should follow the tidyverse style. Particularly,\n\nthere should be spaces before and line breaks after each + when building a ggplot,\nthere should also be spaces before and line breaks after each |&gt; in a data transformation pipeline,\ncode should be properly indented,\nthere should be spaces around = signs and spaces after commas.\n\nFurthermore, all code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks.1\nAs you complete the lab and other assignments in this course, remember to develop a sound workflow for reproducible data analysis. This assignment will periodically remind you to render, commit, and push your changes to GitHub.\n\n\n\n\n\n\nImportant\n\n\n\nYou should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "lab/lab-2.html#learning-objectives",
    "href": "lab/lab-2.html#learning-objectives",
    "title": "Lab 2",
    "section": "",
    "text": "By the end of the lab, you will‚Ä¶\n\nBe able to create transform data using dplyr\n\nBuild on your mastery of data visualizations using ggplot2\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub"
  },
  {
    "objectID": "lab/lab-2.html#getting-started",
    "href": "lab/lab-2.html#getting-started",
    "title": "Lab 2",
    "section": "",
    "text": "Go to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-f24 organization on GitHub. Click on the repo with the prefix lab-2. It contains the starter documents you need to complete the lab.\nClick on the green CODE button and select Use SSH (this might already be selected by default; if it is, you‚Äôll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ‚ûõ New Project ‚ûõVersion Control ‚ûõ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-2.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-2.qmd, update the author field to your name, render your document, and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., ‚ÄúAdded author name‚Äù), and click Commit. Then, push the changes to your GitHub repository and, in your browser, confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\nImportant\n\n\n\nIf you encounter any issues with the above steps, flag a TA for help before proceeding."
  },
  {
    "objectID": "lab/lab-2.html#packages",
    "href": "lab/lab-2.html#packages",
    "title": "Lab 2",
    "section": "",
    "text": "In this lab, we will work with the tidyverse package, a collection of packages for performing data analysis in a ‚Äútidy‚Äù way.\n\nlibrary(tidyverse)\n\n\n\nRun the code cell by clicking on the green triangle (play) button for the code cell labeled load-packages. This loads the package so that its features (the functions and datasets in it) are accessible from your Console.\nThen, render the document that loads this package to make its features (the functions and datasets in it) available for other code cells in your Quarto document."
  },
  {
    "objectID": "lab/lab-2.html#guidelines",
    "href": "lab/lab-2.html#guidelines",
    "title": "Lab 2",
    "section": "",
    "text": "As we‚Äôve discussed in the lecture, your plots should include an informative title, axes and legends should have human-readable labels and aesthetic choices should be carefully considered.\nAdditionally, code should follow the tidyverse style. Particularly,\n\nthere should be spaces before and line breaks after each + when building a ggplot,\nthere should also be spaces before and line breaks after each |&gt; in a data transformation pipeline,\ncode should be properly indented,\nthere should be spaces around = signs and spaces after commas.\n\nFurthermore, all code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks.1\nAs you complete the lab and other assignments in this course, remember to develop a sound workflow for reproducible data analysis. This assignment will periodically remind you to render, commit, and push your changes to GitHub.\n\n\n\n\n\n\nImportant\n\n\n\nYou should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "lab/lab-2.html#part-1",
    "href": "lab/lab-2.html#part-1",
    "title": "Lab 2",
    "section": "Part 1",
    "text": "Part 1\nAll about group_by()!\nUse the following data frame for Question 1 and Question 2:\n\ndf &lt;- tibble(\n  var_1 = c(10, 20, 30, 40, 50),\n  var_2 = c(\"Pizza\", \"Burger\", \"Pizza\", \"Pizza\", \"Burger\"),\n  var_3 = c(\"Apple\", \"Apple\", \"Pear\", \"Pear\", \"Banana\")\n)\n\ndf\n\n# A tibble: 5 √ó 3\n  var_1 var_2  var_3 \n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; \n1    10 Pizza  Apple \n2    20 Burger Apple \n3    30 Pizza  Pear  \n4    40 Pizza  Pear  \n5    50 Burger Banana\n\n\nQuestion 1\nGrouping by a single variable.\na. What does the following code chunk do? Run it, analyze the result, and articulate in words what arrange() does.\n\ndf |&gt;\n  arrange(var_2)\n\nb. What does the following code chunk do? Run it, analyze the result, and articulate in words what group_by() does. Also, comment on how it‚Äôs different from the arrange() in part (a).\n\ndf |&gt;\n  group_by(var_2)\n\nc. What does the following code chunk do? Run it, analyze the result, and articulate in words what the pipeline does.\n\ndf |&gt;\n  group_by(var_2) |&gt;\n  summarize(mean_var_1 = mean(var_1))\n\nQuestion 2\nGrouping by two variables.\na. What does the following code chunk do? Run it, analyze the result, and articulate in words what the pipeline does. Then, comment on what the message says.\n\ndf |&gt;\n  group_by(var_2, var_3) |&gt;\n  summarize(mean_var_1 = mean(var_1))\n\nb. What does the following code chunk do? Run it, analyze the result, and articulate in words what the pipeline does, especially mentioning what the .groups argument does. How is the output different from the one in part (a)?\n\ndf |&gt;\n  group_by(var_2, var_3) |&gt;\n  summarize(mean_var_1 = mean(var_1), .groups = \"drop\")\n\nc. What do the following pipelines do? Run both, analyze their results, and articulate in words what each pipeline does. How are the outputs of the two pipelines different?\n\ndf |&gt;\n  group_by(var_2, var_3) |&gt;\n  summarize(mean_var_1 = mean(var_1), .groups = \"drop\")\n\ndf |&gt;\n  group_by(var_2, var_3) |&gt;\n  mutate(mean_var_1 = mean(var_1))\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answers for Questions 1 and 2‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward."
  },
  {
    "objectID": "lab/lab-2.html#part-2",
    "href": "lab/lab-2.html#part-2",
    "title": "Lab 2",
    "section": "Part 2",
    "text": "Part 2\nBack to the Midwest!\nIn this part, you will revisit and build on some of your findings from Lab 1, where you explored the midwest data frame. Remember that this data frame is bundled with the ggplot2 package and is automatically loaded when you load the tidyverse package. As a refresher, the data contains demographic characteristics of counties in the Midwest region of the United States. You can read the documentation for the data set, including variable definitions, by typing ?midwest in the Console or searching for midwest in the Help pane.\nQuestion 3\nCalculate the number of counties in each state and display your results in descending order of number of counties. Which state has the highest number of counties, and how many? Which state has the lowest number, and how many?\n\n\n\n\n\n\nNote\n\n\n\nThe number of counties in a state can change over time, so the values you see in this output may not be true today.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 3‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 4\nWhile two counties in a given state can‚Äôt have the same name, some county names might be shared across states. A classmate says ‚ÄúLook at that, there is a county called ___ in each state in this dataset!‚Äù In a single pipeline, discover all counties that could fill in the blanks. Your response should be a data frame with only the county names that could fill in the blank and the number of times they appear in the data.\n\n\n\n\n\n\nTip\n\n\n\nYou will want to use the filter() function in your answer, which requires a logical condition to describe what you want to filter for. For example, filter(x &gt; 2) means filter for values of x greater than 2, and filter(y &lt;= 3) means filter for values of y less than or equal to 3.\nThe table below is a summary of logical operators and how to articulate them in R.\n\n\noperator\ndefinition\n\n\n\n&lt;\nless than\n\n\n&lt;=\nless than or equal to\n\n\n&gt;\ngreater than\n\n\n&gt;=\ngreater than or equal to\n\n\n==\nexactly equal to\n\n\n!=\nnot equal to\n\n\nx & y\n\nx AND y\n\n\n\n\nx¬†|¬†y\n\n\nx OR y\n\n\n\nis.na(x)\ntest if x is NA\n\n\n\n!is.na(x)\ntest if x is not NA\n\n\n\nx %in% y\ntest if x is in y\n\n\n\n!(x %in% y)\ntest if x is not in y\n\n\n\n!x\nnot x\n\n\n\n\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 4‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 5\nReturn to the following box plot of population densities where you were asked to identify at least one outlier.\n\n\n\n\n\n\n\n\nIn this question, we want you to revisit this box plot and identify the counties described in each section.\na. The counties with a population density higher than 25,000. Your code must use the filter() function.\nb. The county with the highest population density. Your code must use the max() function.\nAnswer using a single data wrangling pipeline for each part. Your response should be a data frame with five columns: county name, state name, population density, total population, and area, in this order. If your response has multiple rows, the data frame should be arranged in descending order of population density.\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 5‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 6\nIn Lab 1 you were also asked to describe the distribution of population densities. The following is one acceptable description that touches on the shape, center, and spread of this distribution. Calculate the values that should go into the blanks.\n\nThe distribution of population density of counties is unimodal and extremely right-skewed. A typical Midwestern county has population density of ____ people per unit area. The middle 50% of the counties have population densities between ___ to ___ people per unit area.\n\n\n\n\n\n\n\nTip\n\n\n\nThink about which measures of center and spread are appropriate for skewed distributions.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 6‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 7\nAnother visualization from Lab 1 was the following, which showed the proportion of urban counties in each state.\n\n\n\n\n\n\n\n\nCalculate these proportions in a single data pipeline.\n\n\n\n\n\n\nTip\n\n\n\nRemember, you‚Äôll first need to create a new variable called metro which takes on the value Yes if the value of inmetro is 1, and No otherwise. You can refer to Lab 1 if you need a refresher on how to do this.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 7‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 8\nReturn to the following scatter plot of percentage below poverty vs.¬†percentage of people with a college degree, where the color and shape of points are determined by state where you were asked to identify at least one county that is a clear outlier by name.\n\n\n\n\n\n\n\n\na. In a single pipeline, identify the observations marked in the orange square in the upper left corner. Your answer should be a data frame with four variables: county, state, percentage below poverty, and percentage college educated.\nb. In a single pipeline, identify the observations marked in the red square in the plot above. Your answer should again be a data frame with four variables: county, state, percentage below poverty, and percentage college educated.\nc. Bring your answers from part (a) and part (b) together! In a single pipeline, and a single filter() statement, identify the observations marked in the red and orange square in the plot above. Your answer should again be a data frame with four variables: county, state, percentage below poverty, and percentage college educated.\nd. Create a new variable in midwest called potential_outlier. This variable should take on the value:\n\nYes if the point is one the ones you identified in part (c), i.e., one of the points marked in the squares in the plot above.\nNo otherwise.\n\nThen, display the updated midwest data frame, with county, state, percentage below poverty, percentage college educated, potential_outlier as the selected variables, arranged in descending order of potential_outlier.\ne. Recreate the visualization above, i.e., a scatterplot of the percentage below poverty vs.¬†the percentage of people with a college degree. However, color the points by the newly created potential_outlier variable instead of the state.\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 8‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 9\na. In a single pipeline, calculate the total population for each state and save the resulting data frame as state_population. Then, display the data frame, state_population, in descending order of total population.\nb. Then, in a separate pipeline, calculate the proportion of the total population in each state. Once again, display the results in descending order of proportion of population.\n\n\n\n\n\n\nTip\n\n\n\nIn answering parts (a) and (b), you‚Äôll create two new variables, one for the total population and the other for the proportion of total proportion. Make sure to give them ‚Äúreasonable‚Äù names ‚Äì short but evocative.\n\n\nc. Which Midwestern state is most populous, and what percent of the Midwest population lives there? Which is the least populous and what percent lives there?\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 9‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 10\nCalculate the average percentage below poverty for each state and save the resulting data frame as state_poverty with the columns state and mean_percbelowpoverty.\nThen, in a new pipeline, display the state_poverty data frame in ascending order of mean_percbelowpoverty. Which state has the lowest average percentage below poverty across its counties? Which state has the highest average percentage below poverty across its counties?\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answer for Question 10‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterward."
  },
  {
    "objectID": "lab/lab-2.html#submission",
    "href": "lab/lab-2.html#submission",
    "title": "Lab 2",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nTo be considered ‚Äù on time, ‚Äù you must turn in a PDF file to the Gradescope page by the submission deadline.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you‚Äôll be prompted to submit it.\nMark all the pages associated with each question. All the pages of your lab should be associated with at least one question (i.e., should be ‚Äúchecked‚Äù).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope"
  },
  {
    "objectID": "lab/lab-2.html#grading-and-feedback",
    "href": "lab/lab-2.html#grading-and-feedback",
    "title": "Lab 2",
    "section": "Grading and feedback",
    "text": "Grading and feedback\n\nSome of the questions will be graded for accuracy.\nSome will be graded for completion.\nThere are also workflow points, for coding style, for committing at least three times as you work through your lab, and for overall organization.\nYou‚Äôll receive feedback on your lab on Gradescope within a week."
  },
  {
    "objectID": "lab/lab-2.html#footnotes",
    "href": "lab/lab-2.html#footnotes",
    "title": "Lab 2",
    "section": "Footnotes",
    "text": "Footnotes\n\nRemember, haikus, not novellas, when writing code!‚Ü©Ô∏é"
  },
  {
    "objectID": "lab/lab-4.html",
    "href": "lab/lab-4.html",
    "title": "Lab 4",
    "section": "",
    "text": "In this lab, you‚Äôll review topics you‚Äôve worked with in previous labs, practice importing data, and dive into the concepts of data types and classes.\n\n\n\n\n\n\nNote\n\n\n\nThis lab assumes you‚Äôve completed the labs so far and doesn‚Äôt repeat setup and overview content from those labs. If you haven‚Äôt done those yet, you should review the previous labs before starting on this one.\n\n\n\nBy the end of the lab, you will‚Ä¶\n\nLearn to read data in from Excel spreadsheets\nGain more experience with joining and pivoting data frames\nReview Quarto cell options\n\nAnd, as usual, you will also‚Ä¶\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub\n\nLog in to RStudio, clone your lab-4 repo from GitHub, open your lab-4.qmd document, and get started!\n\n\n\n\n\n\nClick here if you prefer to see step-by-step instructions\n\n\n\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-f24 organization on GitHub. Click on the repo with the prefix lab-4. It contains the starter documents you need to complete the lab.\nClick on the green CODE button and select Use SSH. This might already be selected by default; if it is, you‚Äôll see the text Clone with SSH. Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ‚ûõ New Project ‚ûõVersion Control ‚ûõ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-4.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-4.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., ‚ÄúAdded author name‚Äù), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIf you run into any issues with the first steps outlined above, flag a TA for help before proceeding.\n\n\n\nIn this lab, we will work with the\n\n\ntidyverse package for doing data analysis in a ‚Äútidy‚Äù way,\n\nreadxl package for reading in Excel files,\n\njanitor package for cleaning up variable names, and\n\npalmerpenguins and datasauRus packages for some datasets\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(janitor)\nlibrary(palmerpenguins)\nlibrary(datasauRus)\n\n\n\nRun the code cell by clicking on the green triangle (play) button for the code cell labeled load-packages. This loads the package so that its features (the functions and datasets in it) are accessible from your Console.\nThen, render the document that loads this package to make its features (the functions and datasets in it) available for other code cells in your Quarto document.\n\nAs we‚Äôve discussed in lecture, your plots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\nAdditionally, code should follow the tidyverse style. Particularly,\n\nthere should be spaces before and line breaks after each + when building a ggplot,\nthere should also be spaces before and line breaks after each |&gt; in a data transformation pipeline,\ncode should be properly indented,\nthere should be spaces around = signs and spaces after commas.\n\nFurthermore, all code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks.\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub.\n\n\n\n\n\n\nImportant\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nStarting with this lab, you are expected to pay attention to code smell in addition to code style and readability. You should review and improve your code to avoid redundant steps (e.g., grouping, ungrouping, and grouping again by the same variable in a pipeline), using inconsistent syntax (e.g., ! to say ‚Äúnot‚Äù in one place and - in another place), etc."
  },
  {
    "objectID": "lab/lab-4.html#learning-objectives",
    "href": "lab/lab-4.html#learning-objectives",
    "title": "Lab 4",
    "section": "",
    "text": "By the end of the lab, you will‚Ä¶\n\nLearn to read data in from Excel spreadsheets\nGain more experience with joining and pivoting data frames\nReview Quarto cell options\n\nAnd, as usual, you will also‚Ä¶\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub"
  },
  {
    "objectID": "lab/lab-4.html#getting-started",
    "href": "lab/lab-4.html#getting-started",
    "title": "Lab 4",
    "section": "",
    "text": "Log in to RStudio, clone your lab-4 repo from GitHub, open your lab-4.qmd document, and get started!\n\n\n\n\n\n\nClick here if you prefer to see step-by-step instructions\n\n\n\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-f24 organization on GitHub. Click on the repo with the prefix lab-4. It contains the starter documents you need to complete the lab.\nClick on the green CODE button and select Use SSH. This might already be selected by default; if it is, you‚Äôll see the text Clone with SSH. Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ‚ûõ New Project ‚ûõVersion Control ‚ûõ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-4.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-4.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., ‚ÄúAdded author name‚Äù), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIf you run into any issues with the first steps outlined above, flag a TA for help before proceeding."
  },
  {
    "objectID": "lab/lab-4.html#packages",
    "href": "lab/lab-4.html#packages",
    "title": "Lab 4",
    "section": "",
    "text": "In this lab, we will work with the\n\n\ntidyverse package for doing data analysis in a ‚Äútidy‚Äù way,\n\nreadxl package for reading in Excel files,\n\njanitor package for cleaning up variable names, and\n\npalmerpenguins and datasauRus packages for some datasets\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(janitor)\nlibrary(palmerpenguins)\nlibrary(datasauRus)\n\n\n\nRun the code cell by clicking on the green triangle (play) button for the code cell labeled load-packages. This loads the package so that its features (the functions and datasets in it) are accessible from your Console.\nThen, render the document that loads this package to make its features (the functions and datasets in it) available for other code cells in your Quarto document."
  },
  {
    "objectID": "lab/lab-4.html#guidelines",
    "href": "lab/lab-4.html#guidelines",
    "title": "Lab 4",
    "section": "",
    "text": "As we‚Äôve discussed in lecture, your plots should include an informative title, axes and legends should have human-readable labels, and careful consideration should be given to aesthetic choices.\nAdditionally, code should follow the tidyverse style. Particularly,\n\nthere should be spaces before and line breaks after each + when building a ggplot,\nthere should also be spaces before and line breaks after each |&gt; in a data transformation pipeline,\ncode should be properly indented,\nthere should be spaces around = signs and spaces after commas.\n\nFurthermore, all code should be visible in the PDF output, i.e., should not run off the page on the PDF. Long lines that run off the page should be split across multiple lines with line breaks.\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub.\n\n\n\n\n\n\nImportant\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nStarting with this lab, you are expected to pay attention to code smell in addition to code style and readability. You should review and improve your code to avoid redundant steps (e.g., grouping, ungrouping, and grouping again by the same variable in a pipeline), using inconsistent syntax (e.g., ! to say ‚Äúnot‚Äù in one place and - in another place), etc."
  },
  {
    "objectID": "lab/lab-4.html#part-1---team-usa-at-the-olympics",
    "href": "lab/lab-4.html#part-1---team-usa-at-the-olympics",
    "title": "Lab 4",
    "section": "Part 1 - Team USA at the Olympics",
    "text": "Part 1 - Team USA at the Olympics\nFor this part, you‚Äôll work with data from the rosters of Team USA from the 2020 and 2024 Olympics. The data come from https://www.teamusa.com and the rosters for the two games are in a single Excel file (team-usa.xlsx in your data folder), accross two separate spreadsheets within that file. Figure¬†1 shows screenshots of these spreadsheets.\n\n\n\n\n\n\nTeam USA 2020\n\n\n\n\n\nTeam USA 2024\n\n\n\n\n\nFigure¬†1: Excel file with two sheets for rosters of Team USA 2020 and 2024.\n\n\nYour goal is to answer questions about athletes who competed in both games and only one of the games.\nQuestion 1\n\nRead data from the two sheets of team-usa.xlsx as two separate data frames called team_usa_2020 and team_usa_2024.\n\n\n\n\n\n\n\nTip\n\n\n\nThe names of the sheets are shown in the screenshots in Figure¬†1, or you can use the excel_sheets() function to discover them. Additionally, note that the first row of the sheets contain a logo and a title describing the contents of the data, and not the header row containing variable names.\n\n\n\nRead the documentation for the clean_names() function from the janitor package at https://sfirke.github.io/janitor/reference/clean_names.html. Use this function to ‚Äúclean‚Äù the variable names of team_usa_2020 and team_usa_2024 and save the data frames with the new variable names.\n\nCreate a new variable in both of the datasets called name that:\n\n\npaste()s together the first_name and last_name variables with a space in between and\nis the first variable in the resulting data frame.\n\n\nUsing the appropriate *_join() function, determine how many athletes participated in both Olympic Games?\n\n\n\n\n\n\n\nImportant\n\n\n\nYour answer to this question, based on the data frames you created, should be 0, even if it doesn‚Äôt make sense in context of actual Olympic athletes.\n\n\nQuestion 2\nIf you have even a passing knowledge of the Olympic Games, you might know that there are some athletes that participated in both the 2020 and 2024 games, e.g., Simone Biles, Katie Ledecky, etc.\n\nThe reason why athlete names didn‚Äôt match across the two data frames is that in one data frame, names are in UPPER CASE, and in the other, they‚Äôre in Title Case. Update the 2020 data frame to make name all upper case. Display the first 10 rows of team_usa_2020 with upper case names.\n\n\n\n\n\n\n\nImportant\n\n\n\nYour answer must use the str_to_upper() function.\n\n\n\nLet‚Äôs try that question again: How many athletes participated in both Olympic Games?\nHow many athletes participated in the 2020 Olympic Games but not the 2024 Olympic Games? How many athletes participated in the 2024 Olympic Games but not the 2020 Olympic Games?"
  },
  {
    "objectID": "lab/lab-4.html#part-2---datasaurus",
    "href": "lab/lab-4.html#part-2---datasaurus",
    "title": "Lab 4",
    "section": "Part 2 - DatasauRus",
    "text": "Part 2 - DatasauRus\nThe data frame you will be working with in this part is called datasaurus_dozen and it‚Äôs in the datasauRus package. This single data frame contains 13 datasets, designed to show us why data visualization is important and how summary statistics alone can be misleading. The different datasets are marked by the dataset variable, as shown in Figure¬†2.\n\n\n\n\n\nFigure¬†2: The `datasaurus_dozen` data frame stacks 13 datasets on top of each other. This figure shows the first three datasets.\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf it‚Äôs confusing that the data frame is called datasaurus_dozen when it contains 13 datasets, you‚Äôre not alone! Have you heard of a baker‚Äôs dozen?\n\n\nHere is a peek at the top 10 rows of the dataset:\n\ndatasaurus_dozen\n\n# A tibble: 1,846 √ó 3\n   dataset     x     y\n   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 dino     55.4  97.2\n 2 dino     51.5  96.0\n 3 dino     46.2  94.5\n 4 dino     42.8  91.4\n 5 dino     40.8  88.3\n 6 dino     38.7  84.9\n 7 dino     35.6  79.9\n 8 dino     33.1  77.6\n 9 dino     29.0  74.5\n10 dino     26.2  71.4\n# ‚Ñπ 1,836 more rows\n\n\nQuestion 3\nIn a single pipeline, calculate the mean of x, mean of y, standard deviation of x, standard deviation of y, and the correlation between x and y for each level of the dataset variable. Then, in 1-2 sentences, comment on how these summary statistics compare across groups (datasets).\n\n\n\n\n\n\nTip\n\n\n\nThere are 13 groups but tibbles only print out 10 rows by default. To display all rows, add print(n = 13) as the last step of your pipeline.\n\n\nQuestion 4\nCreate a scatterplot of y versus x and color and facet it by dataset. Then, in 1-2 sentences, how these plots compare across groups (datasets). How does your response in this question compare to your response to the previous question and what does this say about using visualizations and summary statistics when getting to know a dataset?\n\n\n\n\n\n\nTip\n\n\n\nWhen you both color and facet by the same variable, you‚Äôll end up with a redundant legend. Turn off the legend by adding show.legend = FALSE to the geom creating the legend.\n\n\n\nRender, commit, and push your changes. Make sure that you commit and push all changed documents and that your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "lab/lab-4.html#part-3---medical-marijuana-in-nc",
    "href": "lab/lab-4.html#part-3---medical-marijuana-in-nc",
    "title": "Lab 4",
    "section": "Part 3 - Medical marijuana in NC",
    "text": "Part 3 - Medical marijuana in NC\nSurveyUSA polled 900 NC adults between September 4-7, 2024. Of the 900 NC adults, 771 were identified by SurveyUSA as being registered to vote.1 The following question was asked to these 771 adults:\n\nShould the use of marijuana for medical use remain against the law in North Carolina? Or be legalized?\n\nResponses were broken down into the following categories:\n\n\nVariable\nLevels\n\n\n\nAge\n18-49; 50+\n\n\nOpinion\nRemain Against The Law; Be Made Legal; Not Sure\n\n\n\nOf the 771 responses, 391 were between the ages of 18-49. Of the individuals that are between 18-49, 59 individuals responded that they think medical marijuana should remain against the law, 292 said it should be made legal, and the remainder were not sure. Of the individuals that are 50+, 67 individuals responded that they think medical marijuana should remain against the law, 245 said it should be made legal, and the remainder were not sure.\nQuestion 5\n\n\nFill in the code below to create a two-way table that summarizes these data.\n\nsurvey_counts &lt;- tibble( \n  age = c(),\n  opinion = c(),\n  n = c()\n  )\n\nsurvey_counts |&gt;\n  pivot_wider( \n    names_from = ___,\n    values_from = ___\n  )\n\n\n\nFor parts b-d below, use a your response single pipeline starting with survey_counts, calculate the desired proportions, and make sure the result is an ungrouped data frame with a column for relevant counts, a column for relevant proportions, and a column for the groups you‚Äôre interested in.\n\nCalculate the proportions of 18-49 year olds and 50+ year-olds in this sample.\nCalculate the proportions of those who think medical marijuana should remain against the law, should be made legal, and who are not sure.\n\nCalculate the proportions of individuals in this sample who think medical marijuana should remain against the law, should be made legal, and who are not sure\n\namong those who are 18-49 years old and\namong those who are 50+ years old.\n\n\nQuestion 6\n\n\nCreate a visualization that can be used to evaluate the relationship between age and opinion on legalizing medical marijuana in North Carolina based on this survey‚Äôs results.\n\n\n\n\n\n\nTip\n\n\n\nYour visualization should display the proportions you calculated in Question 5d.\n\n\n\nBased on your calculations so far, as well as your visualization, write 1-2 sentences that describe the relationship, in this sample, between age and opinion on legalizing medical marijuana in North Carolina.\n\n\nRender, commit, and push one last time. Make sure that you commit and push all changed documents and that your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "lab/lab-4.html#part-4---mtcars",
    "href": "lab/lab-4.html#part-4---mtcars",
    "title": "Lab 4",
    "section": "Part 4 - mtcars\n",
    "text": "Part 4 - mtcars\n\nIn this part, you‚Äôll work with one of the most basic and overused datasets in R: mtcars. The data in this dataset come from the 1974 Motor Trend US magazine (so, yes, they‚Äôre old!) and provide information on fuel efficiency and other car characteristics.\nQuestion 7\nSince the dataset is used in many code examples, it‚Äôs not unexpected that some analyses of the data are good and some not so much.\n\n\n\n\n\n\nTip\n\n\n\nFor both parts of this question, you should review the data dictionary that is in the documentation for the dataset which you can find at https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/mtcars.html or by typing ?mtcars in your Console.\n\n\na. You come across the following visualization of these data. First, determine what is wrong with this visualization and describe it in one sentence. Then, fix and improve the visualization. As part of your improvement, make sure your legend\n\nis on top of the plot,\nis informative, and\nlists levels in the order they appear in the plot.\n\n\nggplot(mtcars, aes(x = wt, y = mpg, color = am)) +\n  geom_point() +\n  labs(\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles / gallon\"\n  )\n\nb. Update your plot from part (a) further, this time using different shaped points for cars with V-shaped and straight engines. Once again, some requirements for your legend ‚Äì it should be informative and on the right of the plot.\nQuestion 8\nYour task is to make your plot from Question 7b as ugly and as ineffective as possible. Change colors, axes, fonts, themes, or anything else you can think of in the code chunk below. You can also search online for other themes, fonts, etc. that you want to tweak. Try to make it as ugly as possible, the sky is the limit! You must make at least 5 updates to the plot.\nYour answer must include\n\na list of the at least 5 updates you‚Äôve made to your plot from Question 7b, and\n1-2 sentence explanation of why the plot you created is ugly (to you, at least) and ineffective.\n\n\nRender, commit, and push your work so far. Make sure that you commit and push all changed documents and that your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "lab/lab-4.html#part-5---all-about-quarto",
    "href": "lab/lab-4.html#part-5---all-about-quarto",
    "title": "Lab 4",
    "section": "Part 5 - All about Quarto",
    "text": "Part 5 - All about Quarto\nQuestion 9\nYou have the following code chunk:\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point()\n\nAdd the following code cell options, one at a time, and set each to false and then to true. After each value, render your document and observe its effect. Ultimately, choose the values that are the most appropriate for this code cell. Based on the behaviors you observe, describe what each code cell option does.\n\necho\nwarning\neval\nQuestion 10\n\nYou have the following code cell again.\n\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point()\n\nAdd fig-width and fig-asp as code chunk options. Try setting fig-width to values between 1 and 10. Try setting fig-asp to values between 0.1 and 1. Re-render the document after each value and observe its effect. Ultimately, choose values that make the plot look visually pleasing in the rendered document. Based on the behavior you observe, describe what each chunk option does.\n\n\n\n\n\n\nTip\n\n\n\nNow that you‚Äôve had more practice with figure sizing in Quarto documents, review all of the plots you made in this lab and adjust their widths and aspect rations to improve how they look in your rendered document.\n\n\nb. You have the following code cell, but look carefully, it‚Äôs not exactly the same!\n\ngplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point()\n\nAdd error as a code chunk option and set it to false and then set it to true. After each value, render your document and observe its effect. Ultimately, choose the value that allows you to render your document without altering the code. Based on the behavior you observe, describe what this code chunk option does.\n\n\n\n\n\n\nTip\n\n\n\nReading the documentation might also be helpful.\n\n\n\nRender, commit, and push your work. Make sure that you commit and push all changed documents and that your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "lab/lab-4.html#footnotes",
    "href": "lab/lab-4.html#footnotes",
    "title": "Lab 4",
    "section": "Footnotes",
    "text": "Footnotes\n\nFull survey results can be found at https://www.surveyusa.com/client/PollReport.aspx?g=c6995e17-3837-413e-ac98-3684e1c74dc1.‚Ü©Ô∏é"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STA 199: Introduction to Data Science and Statistical Thinking",
    "section": "",
    "text": "This page contains an outline of the topics, content, and assignments for the semester. Note that this schedule will be updated as the semester progresses and the timeline of topics and assignments might be updated throughout the semester.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWEEK\nDATE\nPREPARE\nTOPIC\nMATERIALS\nDUE\n\n\n\n1\nMon, Aug 26\n\nLab 0: Hello, World and STA 199!\nüíª lab 0\nLab 0 due at the end of lab session\n\n\n\nTue, Aug 27\n\nWelcome to STA 199\nüñ•Ô∏è slides 00  üóíÔ∏è notes 00  ‚å®Ô∏è ae 00\n\n\n\n\nThu, Aug 29\nüìó r4ds - intro  üìò ims - chp 1  üé• Meet the toolkit :: R and RStudio  üé• Meet the toolkit :: Quarto  üé• Code along :: First data viz with UN Votes\nMeet the toolkit\nüñ•Ô∏è slides 01  üóíÔ∏è notes 01  ‚å®Ô∏è ae 01\n\n\n\n2\nMon, Sep 2\n\nNo lab - Labor Day\n\n\n\n\n\nTue, Sep 3\nüìó r4ds - chp 1  üìò ims - chp 4  üé• Visualizing data  üé• Building a plot step-by-step with ggplot2  üé• Grammar of graphics  üé• Code along :: First look at Palmer Penguins\nGrammar of data visualization\nüñ•Ô∏è slides 02  üóíÔ∏è notes 02  ‚å®Ô∏è ae 02  ‚òëÔ∏è ae 02\n\n\n\n\nThu, Sep 5\nüìó r4ds - chp 2  üìó r4ds - chp 3.1-3.5  üé• Grammar of data transformation  üé• Code along :: Flights and pipes\nGrammar of data transformation\nüñ•Ô∏è slides 03  üóíÔ∏è notes 03  ‚å®Ô∏è ae 03  ‚òëÔ∏è ae 03\n\n\n\n3\nMon, Sep 9\n\nLab 1: From the Midwest to North Carolina\nüíª lab 1  ‚òëÔ∏è lab 1\n\n\n\n\nTue, Sep 10\nüìó r4ds - chp 3.6-3.7  üé• Visualizing and summarizing categorical data  üé• Visualizing and summarizing numerical data  üé• Visualizing and summarizing relationships  üé• Code along :: Star Wars characters\nExploring data I\nüñ•Ô∏è slides 04  üóíÔ∏è notes 04  ‚å®Ô∏è ae 04  ‚òëÔ∏è ae 04\n\n\n\n\nThu, Sep 12\nüìò ims - chp 5  üìò ims - chp 6  üé• Code along :: Diving deeper with Palmer Penguins\nExploring data II\nüñ•Ô∏è slides 05  üóíÔ∏è notes 05  ‚å®Ô∏è ae 05  ‚òëÔ∏è ae 05\n\n\n\n4\nMon, Sep 16\nüìó r4ds - chp 4\nLab 2: Revisiting the Midwest\nüíª lab 2\nLab 1 at 8:30 am\n\n\n\nTue, Sep 17\nüé• Tidy data  üé• Tidying data  üé• Code along :: Country populations over time  üìó r4ds - chp 5\nTidying data\nüñ•Ô∏è slides 06  üóíÔ∏è notes 06  ‚å®Ô∏è ae 06  ‚òëÔ∏è ae 06\n\n\n\n\nThu, Sep 19\nüé• Joining data  üé• Code along :: Continent populations  üìó r4ds - chp 19.1-19.3\nJoining data\nüñ•Ô∏è slides 07  üóíÔ∏è notes 07  ‚å®Ô∏è ae 07  ‚òëÔ∏è ae 07\n\n\n\n5\nMon, Sep 23\n\nLab 3: Inflation everywhere\nüíª lab 3\nLab 2 at 8:30 am\n\n\n\nTue, Sep 24\nüé• Data types  üé• Data classes  üé• Code along :: That‚Äôs my type  üìó r4ds - chp 16\nData types and classes\nüñ•Ô∏è slides 08  üóíÔ∏è notes 08  ‚å®Ô∏è ae 08  ‚òëÔ∏è ae 08\n\n\n\n\nThu, Sep 26\nüé• Importing data  üé• Code along :: Halving CO2 emissions  üé• Code along :: Student survey  üìó r4ds - chp 7  üìó r4ds - chp 17.1 - 17.3\nImporting and recoding data\nüñ•Ô∏è slides 09  üóíÔ∏è notes 09  ‚å®Ô∏è ae 09  ‚òëÔ∏è ae 09\n\n\n\n6\nMon, Sep 30\n\nLab 4: Everything so far I\nüíª lab 4\nLab 3 at 8:30 am\n\n\n\nTue, Oct 1\nüé• Web scraping basics  üé• Code along :: Scraping an eCommerce page  üé• Code along :: Scraping many eCommerce pages  üé• Web scraping considerations  üìó r4ds - chp 24.1 - 24.6  üìó r4ds - chp 25.1 - 25.2\nWeb scraping\nüñ•Ô∏è slides 10  üóíÔ∏è notes 10  ‚å®Ô∏è ae 10  ‚å®Ô∏è ae 10\n\n\n\n\nThu, Oct 3\n\nMidterm review\nüìù midterm review  ‚úÖ midterm review\n\n\n\n7\nMon, Oct 7\n\nProject milestone 1 - Working collaboratively\nüìì project milestone 1\nLab 4 due at 8:30 am  Project milestone 1 at the end of lab session\n\n\n\nTue, Oct 8\nTo be posted\nMidterm - In-class + take-home released\n\n\n\n\n\nThu, Oct 10\nTo be posted\nWorking with generative AI tools\nTo be posted\nPeer evaluation 1 due by 5:00 pm\n\n\n\nFri, Oct 11\nTo be posted\n\n\nMidterm take-home due at 5:00 pm\n\n\n8\nMon, Oct 14\nTo be posted\nNo lab - Fall Break\n\n\n\n\n\nTue, Oct 15\nTo be posted\nNo lecture - Fall Break\n\n\n\n\n\nThu, Oct 17\nTo be posted\nData science ethics\nTo be posted\n\n\n\n\nFri, Oct 18\nTo be posted\n\n\nMidterm course evaluation due by 5:00 pm (optional)\n\n\n9\nMon, Oct 21\nTo be posted\nProject milestone 2 - Project proposals\nüìì project milestone 2\n\n\n\n\nTue, Oct 22\nTo be posted\nThe language of models\nTo be posted\n\n\n\n\nThu, Oct 24\nTo be posted\nLinear regression with a single predictor\nTo be posted\n\n\n\n\nFri, Oct 25\nTo be posted\n\n\nPeer evaluation 2 due by 5:00 pm\n\n\n10\nMon, Oct 28\nTo be posted\nLab 5: Modeling I\nTo be posted\nProject milestone 2 at 8:30 am\n\n\n\nTue, Oct 29\nTo be posted\nLinear regression with multiple predictors I\nTo be posted\n\n\n\n\nThu, Oct 31\nTo be posted\nLinear regression with multiple predictors II\nTo be posted\n\n\n\n11\nMon, Nov 4\nTo be posted\nLab 6: Modeling II\nTo be posted\nLab 5 at 8:30 am\n\n\n\nTue, Nov 5\nTo be posted\nModel selection and overfitting\nTo be posted\n\n\n\n\nThu, Nov 7\nTo be posted\nLogistic regression\nTo be posted\n\n\n\n12\nMon, Nov 11\nTo be posted\nLab 7: Modeling III\nTo be posted\nLab 6 at 8:30 am\n\n\n\nTue, Nov 12\nTo be posted\nQuantifying uncertainty with bootstrap intervals\nTo be posted\n\n\n\n\nThu, Nov 14\nTo be posted\nMaking decisions with randomization tests\nTo be posted\n\n\n\n13\nMon, Nov 18\nTo be posted\nLab 8: Everything so far II\nTo be posted\nLab 7 at 8:30 am\n\n\n\nTue, Nov 19\nTo be posted\nCommunicating data science results effectively\nTo be posted\n\n\n\n\nThu, Nov 21\nTo be posted\nCustomizing Quarto reports and presentations\nTo be posted\n\n\n\n\nFri, Nov 22\nTo be posted\n\n\n\n\n\n14\nMon, Nov 25\nTo be posted\nProject milestone 4 - Peer review\nüìì project milestone 4\nLab 8 at 8:30 am  Project milestone 3 at the end of lab session\n\n\n\nTue, Nov 26\nTo be posted\n\n\n\n\n\n\nThu, Nov 28\nTo be posted\nNo lecture - Thanksgiving\n\n\n\n\n15\nMon, Dec 2\nTo be posted\nProject milestone 5 - Work on writeup and presentations\nüìì project milestone 5\n\n\n\n\nTue, Dec 3\nTo be posted\nLooking further: Interactive web applications with Shiny\nTo be posted\n\n\n\n\nThu, Dec 5\nTo be posted\nFinal review\nüìù final review  ‚úÖ final review\nProject milestone 4 - Writeup and presentation videos by 5:00 pm\n\n\n\nFri, Dec 6\nTo be posted\n\n\nPeer evaluation 4 due by 5:00 pm\n\n\n16\nThu, Dec 12\nTo be posted\nFinal (9 am - 12 pm)",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#announcements",
    "href": "slides/02-grammar-of-data-visualization.html#announcements",
    "title": "Grammar of data visualization",
    "section": "Announcements",
    "text": "Announcements\n\nOffice hours are posted on the course website!\n\nIf you can follow along with today‚Äôs application exercise steps, great! If something doesn‚Äôt work as expected, ask me/TA during the exercise. We‚Äôll either:\n\nhelp you on the spot and get you unstuck or\nidentify that you‚Äôre missing an earlier step, ask you to follow along with your neighbor, and visit office hours before Thursday for one-on-one help"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#outline",
    "href": "slides/02-grammar-of-data-visualization.html#outline",
    "title": "Grammar of data visualization",
    "section": "Outline",
    "text": "Outline\n\n\nLast time:\n\nWe introduced you to the course toolkit.\nYou cloned your ae repositories and started making some updates in your Quarto documents.\nYou did not commit and push your changes back.\n\n\n\n. . .\n\n\nToday:\n\nYou will commit your changes from last time and push them to wrap up that application exercise.\nWe will introduce data visualization.\nYou will pull to get today‚Äôs application exercise file.\nYou will work on the new application exercise on data visualization, commit your changes, and push them."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#ae-01-meet-the-penguins",
    "href": "slides/02-grammar-of-data-visualization.html#ae-01-meet-the-penguins",
    "title": "Grammar of data visualization",
    "section": "ae-01-meet-the-penguins",
    "text": "ae-01-meet-the-penguins\n\nGo to RStudio, confirm that you‚Äôre in the ae project, and open the document ae-01-meet-the-penguins.qmd."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#tour-recap-quarto",
    "href": "slides/02-grammar-of-data-visualization.html#tour-recap-quarto",
    "title": "Grammar of data visualization",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#tour-recap-git-github",
    "href": "slides/02-grammar-of-data-visualization.html#tour-recap-git-github",
    "title": "Grammar of data visualization",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\nOnce we made changes to our Quarto document, we\n\nwent to the Git pane in RStudio\nstaged our changes by clicking the checkboxes next to the relevant files\ncommitted our changes with an informative commit message\n\npushed our changes to our application exercise repos\n\nif this failed, we pulled first to get the new application exercise files, and then pushed\n\n\nconfirmed on GitHub that we could see our changes pushed from RStudio"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#how-will-we-use-quarto",
    "href": "slides/02-grammar-of-data-visualization.html#how-will-we-use-quarto",
    "title": "Grammar of data visualization",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery application exercise, lab, project, etc. is an Quarto document\nYou‚Äôll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#whats-with-all-the-hexes",
    "href": "slides/02-grammar-of-data-visualization.html#whats-with-all-the-hexes",
    "title": "Grammar of data visualization",
    "section": "What‚Äôs with all the hexes?",
    "text": "What‚Äôs with all the hexes?"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#we-have-hexes-too",
    "href": "slides/02-grammar-of-data-visualization.html#we-have-hexes-too",
    "title": "Grammar of data visualization",
    "section": "We have hexes too!",
    "text": "We have hexes too!\n\nGrab one before you leave!"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#un-votes",
    "href": "slides/02-grammar-of-data-visualization.html#un-votes",
    "title": "Grammar of data visualization",
    "section": "UN Votes",
    "text": "UN Votes\n\nRemember this visualization from the first day of class?"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#let-see",
    "href": "slides/02-grammar-of-data-visualization.html#let-see",
    "title": "Grammar of data visualization",
    "section": "Let‚Äô see‚Ä¶",
    "text": "Let‚Äô see‚Ä¶\n\nhow the sausage is made!"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#load-packages",
    "href": "slides/02-grammar-of-data-visualization.html#load-packages",
    "title": "Grammar of data visualization",
    "section": "Load packages",
    "text": "Load packages\n\nlibrary(unvotes)\nlibrary(tidyverse)\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#prepare-the-data",
    "href": "slides/02-grammar-of-data-visualization.html#prepare-the-data",
    "title": "Grammar of data visualization",
    "section": "Prepare the data",
    "text": "Prepare the data\n\nus_uk_tr_votes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship = \"many-to-many\") |&gt;\n  filter(country %in% c(\"United Kingdom\", \"United States\", \"Turkey\")) |&gt;\n  mutate(year = year(date)) |&gt;\n  group_by(country, year, issue) |&gt;\n  summarize(percent_yes = mean(vote == \"yes\"), .groups = \"drop\")\n\n. . .\n\n\n\n\n\n\nNote\n\n\n\nLet‚Äôs leave these details aside for a bit, we‚Äôll revisit this code at a later point in the semester. For now, let‚Äôs agree that we need to do some ‚Äúdata wrangling‚Äù to get the data into the right format for the plot we want to create. Just note that we called the data frame we‚Äôll visualize us_uk_tr_votes."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#visualize-the-data",
    "href": "slides/02-grammar-of-data-visualization.html#visualize-the-data",
    "title": "Grammar of data visualization",
    "section": "Visualize the data",
    "text": "Visualize the data\n\nggplot(\n  us_uk_tr_votes, \n  mapping = aes(x = year, y = percent_yes, color = country)\n  ) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(se = FALSE) +\n  facet_wrap(~issue) +\n  scale_color_colorblind() +\n  labs(\n    x = \"Year\", \n    y = \"% yes\", \n    color = \"Country\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-1.-prepare-a-canvas-for-plotting",
    "href": "slides/02-grammar-of-data-visualization.html#step-1.-prepare-a-canvas-for-plotting",
    "title": "Grammar of data visualization",
    "section": "Step 1. Prepare a canvas for plotting",
    "text": "Step 1. Prepare a canvas for plotting"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-2.-map-variables-to-aesthetics",
    "href": "slides/02-grammar-of-data-visualization.html#step-2.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 2. Map variables to aesthetics",
    "text": "Step 2. Map variables to aesthetics\nMap year to the x aesthetic"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-3.-map-variables-to-aesthetics",
    "href": "slides/02-grammar-of-data-visualization.html#step-3.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 3. Map variables to aesthetics",
    "text": "Step 3. Map variables to aesthetics\nMap percent_yes to the y aesthetic"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#mapping-and-aesthetics",
    "href": "slides/02-grammar-of-data-visualization.html#mapping-and-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Mapping and aesthetics",
    "text": "Mapping and aesthetics\n\nAesthetics are visual properties of a plot\nIn the grammar of graphics, variables from the data frame are mapped to aesthetics"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#argument-names",
    "href": "slides/02-grammar-of-data-visualization.html#argument-names",
    "title": "Grammar of data visualization",
    "section": "Argument names",
    "text": "Argument names\nIt‚Äôs common practice in R to omit the names of first two arguments of a function:\n. . .\n\nInstead of\n\nggplot(data = us_uk_tr_votes, mapping = aes(x = year, y = percent_yes))\n\nUse\n\nggplot(us_uk_tr_votes, aes(x = year, y = percent_yes))"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-4.-represent-data-on-your-canvas",
    "href": "slides/02-grammar-of-data-visualization.html#step-4.-represent-data-on-your-canvas",
    "title": "Grammar of data visualization",
    "section": "Step 4. Represent data on your canvas",
    "text": "Step 4. Represent data on your canvas\nwith a geom"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-5.-map-variables-to-aesthetics",
    "href": "slides/02-grammar-of-data-visualization.html#step-5.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 5. Map variables to aesthetics",
    "text": "Step 5. Map variables to aesthetics\nMap country to the color aesthetic"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-6.-represent-data-on-your-canvas",
    "href": "slides/02-grammar-of-data-visualization.html#step-6.-represent-data-on-your-canvas",
    "title": "Grammar of data visualization",
    "section": "Step 6. Represent data on your canvas",
    "text": "Step 6. Represent data on your canvas\nwith another geom"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#warnings-and-messages",
    "href": "slides/02-grammar-of-data-visualization.html#warnings-and-messages",
    "title": "Grammar of data visualization",
    "section": "Warnings and messages",
    "text": "Warnings and messages\n\nAdding geom_smooth() resulted in the following warning:\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n. . .\n\nIt tells us the type of smoothing ggplot2 does under the hood when drawing the smooth curves that represent trends for each country.\n\n. . .\n\nGoing forward we‚Äôll suppress this warning to save some space."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-7.-split-plot-into-facets",
    "href": "slides/02-grammar-of-data-visualization.html#step-7.-split-plot-into-facets",
    "title": "Grammar of data visualization",
    "section": "Step 7. Split plot into facets",
    "text": "Step 7. Split plot into facets"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-8.-use-a-different-color-scale",
    "href": "slides/02-grammar-of-data-visualization.html#step-8.-use-a-different-color-scale",
    "title": "Grammar of data visualization",
    "section": "Step 8. Use a different color scale",
    "text": "Step 8. Use a different color scale"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-10.-apply-a-different-theme",
    "href": "slides/02-grammar-of-data-visualization.html#step-10.-apply-a-different-theme",
    "title": "Grammar of data visualization",
    "section": "Step 10. Apply a different theme",
    "text": "Step 10. Apply a different theme"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-11.-add-labels",
    "href": "slides/02-grammar-of-data-visualization.html#step-11.-add-labels",
    "title": "Grammar of data visualization",
    "section": "Step 11. Add labels",
    "text": "Step 11. Add labels"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-12.-set-transparency-of-points",
    "href": "slides/02-grammar-of-data-visualization.html#step-12.-set-transparency-of-points",
    "title": "Grammar of data visualization",
    "section": "Step 12. Set transparency of points",
    "text": "Step 12. Set transparency of points\nwith alpha"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#step-13.-hide-standard-errors-of-curves",
    "href": "slides/02-grammar-of-data-visualization.html#step-13.-hide-standard-errors-of-curves",
    "title": "Grammar of data visualization",
    "section": "Step 13. Hide standard errors of curves",
    "text": "Step 13. Hide standard errors of curves\nwith se = FALSE"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#grammar-of-graphics",
    "href": "slides/02-grammar-of-data-visualization.html#grammar-of-graphics",
    "title": "Grammar of data visualization",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\n\n\nWe built a plot layer-by-layer\n\njust like described in the book The Grammar of Graphics and\nimplemented in the ggplot2 package, the data visualization package of the tidyverse."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#ae-02-bechdel-dataviz",
    "href": "slides/02-grammar-of-data-visualization.html#ae-02-bechdel-dataviz",
    "title": "Grammar of data visualization",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization.html#recap",
    "href": "slides/02-grammar-of-data-visualization.html#recap",
    "title": "Grammar of data visualization",
    "section": "Recap",
    "text": "Recap\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#announcements",
    "href": "slides/02-grammar-of-data-visualization-slides.html#announcements",
    "title": "Grammar of data visualization",
    "section": "Announcements",
    "text": "Announcements\n\nOffice hours are posted on the course website!\n\nIf you can follow along with today‚Äôs application exercise steps, great! If something doesn‚Äôt work as expected, ask me/TA during the exercise. We‚Äôll either:\n\nhelp you on the spot and get you unstuck or\nidentify that you‚Äôre missing an earlier step, ask you to follow along with your neighbor, and visit office hours before Thursday for one-on-one help"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#outline",
    "href": "slides/02-grammar-of-data-visualization-slides.html#outline",
    "title": "Grammar of data visualization",
    "section": "Outline",
    "text": "Outline\n\n\nLast time:\n\nWe introduced you to the course toolkit.\nYou cloned your ae repositories and started making some updates in your Quarto documents.\nYou did not commit and push your changes back.\n\n\n\n\n\n\nToday:\n\nYou will commit your changes from last time and push them to wrap up that application exercise.\nWe will introduce data visualization.\nYou will pull to get today‚Äôs application exercise file.\nYou will work on the new application exercise on data visualization, commit your changes, and push them."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#ae-01-meet-the-penguins",
    "href": "slides/02-grammar-of-data-visualization-slides.html#ae-01-meet-the-penguins",
    "title": "Grammar of data visualization",
    "section": "ae-01-meet-the-penguins",
    "text": "ae-01-meet-the-penguins\n\nGo to RStudio, confirm that you‚Äôre in the ae project, and open the document ae-01-meet-the-penguins.qmd."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#tour-recap-quarto",
    "href": "slides/02-grammar-of-data-visualization-slides.html#tour-recap-quarto",
    "title": "Grammar of data visualization",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#tour-recap-git-github",
    "href": "slides/02-grammar-of-data-visualization-slides.html#tour-recap-git-github",
    "title": "Grammar of data visualization",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\nOnce we made changes to our Quarto document, we\n\nwent to the Git pane in RStudio\nstaged our changes by clicking the checkboxes next to the relevant files\ncommitted our changes with an informative commit message\n\npushed our changes to our application exercise repos\n\nif this failed, we pulled first to get the new application exercise files, and then pushed\n\n\nconfirmed on GitHub that we could see our changes pushed from RStudio"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#how-will-we-use-quarto",
    "href": "slides/02-grammar-of-data-visualization-slides.html#how-will-we-use-quarto",
    "title": "Grammar of data visualization",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery application exercise, lab, project, etc. is an Quarto document\nYou‚Äôll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#whats-with-all-the-hexes",
    "href": "slides/02-grammar-of-data-visualization-slides.html#whats-with-all-the-hexes",
    "title": "Grammar of data visualization",
    "section": "What‚Äôs with all the hexes?",
    "text": "What‚Äôs with all the hexes?"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#we-have-hexes-too",
    "href": "slides/02-grammar-of-data-visualization-slides.html#we-have-hexes-too",
    "title": "Grammar of data visualization",
    "section": "We have hexes too!",
    "text": "We have hexes too!\n\nGrab one before you leave!"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#un-votes",
    "href": "slides/02-grammar-of-data-visualization-slides.html#un-votes",
    "title": "Grammar of data visualization",
    "section": "UN Votes",
    "text": "UN Votes\n\nRemember this visualization from the first day of class?"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#let-see",
    "href": "slides/02-grammar-of-data-visualization-slides.html#let-see",
    "title": "Grammar of data visualization",
    "section": "Let‚Äô see‚Ä¶",
    "text": "Let‚Äô see‚Ä¶\n\nhow the sausage is made!"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#load-packages",
    "href": "slides/02-grammar-of-data-visualization-slides.html#load-packages",
    "title": "Grammar of data visualization",
    "section": "Load packages",
    "text": "Load packages\n\nlibrary(unvotes)\nlibrary(tidyverse)\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#prepare-the-data",
    "href": "slides/02-grammar-of-data-visualization-slides.html#prepare-the-data",
    "title": "Grammar of data visualization",
    "section": "Prepare the data",
    "text": "Prepare the data\n\nus_uk_tr_votes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship = \"many-to-many\") |&gt;\n  filter(country %in% c(\"United Kingdom\", \"United States\", \"Turkey\")) |&gt;\n  mutate(year = year(date)) |&gt;\n  group_by(country, year, issue) |&gt;\n  summarize(percent_yes = mean(vote == \"yes\"), .groups = \"drop\")\n\n\n\n\n\n\n\n\nNote\n\n\nLet‚Äôs leave these details aside for a bit, we‚Äôll revisit this code at a later point in the semester. For now, let‚Äôs agree that we need to do some ‚Äúdata wrangling‚Äù to get the data into the right format for the plot we want to create. Just note that we called the data frame we‚Äôll visualize us_uk_tr_votes."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#visualize-the-data",
    "href": "slides/02-grammar-of-data-visualization-slides.html#visualize-the-data",
    "title": "Grammar of data visualization",
    "section": "Visualize the data",
    "text": "Visualize the data\n\nggplot(\n  us_uk_tr_votes, \n  mapping = aes(x = year, y = percent_yes, color = country)\n  ) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(se = FALSE) +\n  facet_wrap(~issue) +\n  scale_color_colorblind() +\n  labs(\n    x = \"Year\", \n    y = \"% yes\", \n    color = \"Country\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#visualize-the-data-output",
    "href": "slides/02-grammar-of-data-visualization-slides.html#visualize-the-data-output",
    "title": "Grammar of data visualization",
    "section": "Visualize the data",
    "text": "Visualize the data"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-1.-prepare-a-canvas-for-plotting",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-1.-prepare-a-canvas-for-plotting",
    "title": "Grammar of data visualization",
    "section": "Step 1. Prepare a canvas for plotting",
    "text": "Step 1. Prepare a canvas for plotting"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-2.-map-variables-to-aesthetics",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-2.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 2. Map variables to aesthetics",
    "text": "Step 2. Map variables to aesthetics\nMap year to the x aesthetic"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-3.-map-variables-to-aesthetics",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-3.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 3. Map variables to aesthetics",
    "text": "Step 3. Map variables to aesthetics\nMap percent_yes to the y aesthetic"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#mapping-and-aesthetics",
    "href": "slides/02-grammar-of-data-visualization-slides.html#mapping-and-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Mapping and aesthetics",
    "text": "Mapping and aesthetics\n\nAesthetics are visual properties of a plot\nIn the grammar of graphics, variables from the data frame are mapped to aesthetics"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#argument-names",
    "href": "slides/02-grammar-of-data-visualization-slides.html#argument-names",
    "title": "Grammar of data visualization",
    "section": "Argument names",
    "text": "Argument names\nIt‚Äôs common practice in R to omit the names of first two arguments of a function:\n\n\nInstead of\n\nggplot(data = us_uk_tr_votes, mapping = aes(x = year, y = percent_yes))\n\nUse\n\nggplot(us_uk_tr_votes, aes(x = year, y = percent_yes))"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-4.-represent-data-on-your-canvas",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-4.-represent-data-on-your-canvas",
    "title": "Grammar of data visualization",
    "section": "Step 4. Represent data on your canvas",
    "text": "Step 4. Represent data on your canvas\nwith a geom"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-5.-map-variables-to-aesthetics",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-5.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 5. Map variables to aesthetics",
    "text": "Step 5. Map variables to aesthetics\nMap country to the color aesthetic"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-6.-represent-data-on-your-canvas",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-6.-represent-data-on-your-canvas",
    "title": "Grammar of data visualization",
    "section": "Step 6. Represent data on your canvas",
    "text": "Step 6. Represent data on your canvas\nwith another geom"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#warnings-and-messages",
    "href": "slides/02-grammar-of-data-visualization-slides.html#warnings-and-messages",
    "title": "Grammar of data visualization",
    "section": "Warnings and messages",
    "text": "Warnings and messages\n\nAdding geom_smooth() resulted in the following warning:\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nIt tells us the type of smoothing ggplot2 does under the hood when drawing the smooth curves that represent trends for each country.\n\n\n\n\nGoing forward we‚Äôll suppress this warning to save some space."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-7.-split-plot-into-facets",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-7.-split-plot-into-facets",
    "title": "Grammar of data visualization",
    "section": "Step 7. Split plot into facets",
    "text": "Step 7. Split plot into facets"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-8.-use-a-different-color-scale",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-8.-use-a-different-color-scale",
    "title": "Grammar of data visualization",
    "section": "Step 8. Use a different color scale",
    "text": "Step 8. Use a different color scale"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-10.-apply-a-different-theme",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-10.-apply-a-different-theme",
    "title": "Grammar of data visualization",
    "section": "Step 10. Apply a different theme",
    "text": "Step 10. Apply a different theme"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-11.-add-labels",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-11.-add-labels",
    "title": "Grammar of data visualization",
    "section": "Step 11. Add labels",
    "text": "Step 11. Add labels"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-12.-set-transparency-of-points",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-12.-set-transparency-of-points",
    "title": "Grammar of data visualization",
    "section": "Step 12. Set transparency of points",
    "text": "Step 12. Set transparency of points\nwith alpha"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#step-13.-hide-standard-errors-of-curves",
    "href": "slides/02-grammar-of-data-visualization-slides.html#step-13.-hide-standard-errors-of-curves",
    "title": "Grammar of data visualization",
    "section": "Step 13. Hide standard errors of curves",
    "text": "Step 13. Hide standard errors of curves\nwith se = FALSE"
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#grammar-of-graphics",
    "href": "slides/02-grammar-of-data-visualization-slides.html#grammar-of-graphics",
    "title": "Grammar of data visualization",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\n\n\nWe built a plot layer-by-layer\n\njust like described in the book The Grammar of Graphics and\nimplemented in the ggplot2 package, the data visualization package of the tidyverse."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#ae-02-bechdel-dataviz",
    "href": "slides/02-grammar-of-data-visualization-slides.html#ae-02-bechdel-dataviz",
    "title": "Grammar of data visualization",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/02-grammar-of-data-visualization-slides.html#recap",
    "href": "slides/02-grammar-of-data-visualization-slides.html#recap",
    "title": "Grammar of data visualization",
    "section": "Recap",
    "text": "Recap\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#announcements",
    "href": "slides/03-grammar-of-data-transformation.html#announcements",
    "title": "Grammar of data transformation",
    "section": "Announcements",
    "text": "Announcements\n\nAE 01 and AE 02 suggested answers posted on the course website.\nEd Discussion posts:\n\nKeep them coming!\nKeep them public!\nFeel free to make them anonymous if you prefer.\n\nMonday‚Äôs lab:\n\nShow up on time\nShow up to learn and get support\nLeave with all questions answered and a plan to work on the lab throughout the week"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#ae-02-bechdel-dataviz",
    "href": "slides/03-grammar-of-data-transformation.html#ae-02-bechdel-dataviz",
    "title": "Grammar of data transformation",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\nGo to RStudio, confirm that you‚Äôre in the ae project, and open the document ae-02-bechdel-dataviz.qmd."
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#recap-code-cells-aka-code-chunks",
    "href": "slides/03-grammar-of-data-transformation.html#recap-code-cells-aka-code-chunks",
    "title": "Grammar of data transformation",
    "section": "Recap: Code cells (aka code chunks)",
    "text": "Recap: Code cells (aka code chunks)\n . . .\n\nCell labels are helpful for describing what the code is doing, for jumping between code cells in the editor, and for troubleshooting\nmessage: false hides any messages emitted by the code in your rendered document"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#ae-03-bechdel-data-viz-transform",
    "href": "slides/03-grammar-of-data-transformation.html#ae-03-bechdel-data-viz-transform",
    "title": "Grammar of data transformation",
    "section": "ae-03-bechdel-data-viz-transform",
    "text": "ae-03-bechdel-data-viz-transform\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-03-bechdel-data-viz-transform.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#a-quick-reminder",
    "href": "slides/03-grammar-of-data-transformation.html#a-quick-reminder",
    "title": "Grammar of data transformation",
    "section": "A quick reminder",
    "text": "A quick reminder\n\n1bechdel |&gt;\n2  filter(roi &gt; 400) |&gt;\n3  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n\n1\n\nStart with the bechdel data frame\n\n2\n\nFilter for movies with roi greater than 400 (gross is more than 400 times budget)\n\n3\n\nSelect the columns title, roi, budget_2013, gross_2013, year, and clean_test\n\n\n\n\n# A tibble: 3 √ó 6\n  title                    roi budget_2013 gross_2013  year clean_test\n  &lt;chr&gt;                  &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 Paranormal Activity     671.      505595  339424558  2007 dubious   \n2 The Blair Witch Proje‚Ä¶  648.      839077  543776715  1999 ok        \n3 El Mariachi             583.       11622    6778946  1992 nowomen"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#the-pipe",
    "href": "slides/03-grammar-of-data-transformation.html#the-pipe",
    "title": "Grammar of data transformation",
    "section": "The pipe |>",
    "text": "The pipe |&gt;\nThe pipe operator passes what comes before it into the function that comes after it as the first argument in that function.\n\n\n\nsum(1, 2)\n\n[1] 3\n\n\n\n\n1 |&gt; \n  sum(2)\n\n[1] 3\n\n\n\n\n\n\n\n\nselect(filter(bechdel, roi &gt; 400), title)\n\n# A tibble: 3 √ó 1\n  title                  \n  &lt;chr&gt;                  \n1 Paranormal Activity    \n2 The Blair Witch Project\n3 El Mariachi            \n\n\n\n\nbechdel |&gt;\n  filter(roi &gt; 400) |&gt;\n  select(title)\n\n# A tibble: 3 √ó 1\n  title                  \n  &lt;chr&gt;                  \n1 Paranormal Activity    \n2 The Blair Witch Project\n3 El Mariachi"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#code-style-tip",
    "href": "slides/03-grammar-of-data-transformation.html#code-style-tip",
    "title": "Grammar of data transformation",
    "section": "Code style tip ",
    "text": "Code style tip \n\nIn data transformation pipelines, always use a\n\nspace before |&gt;\nline break after |&gt;\nindent the next line of code\n\n\n. . .\n\nIn data visualization layers, always use a\n\nspace before +\nline break after +\nindent the next line of code"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#the-pipe-in-action",
    "href": "slides/03-grammar-of-data-transformation.html#the-pipe-in-action",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n\n. . .\nStart with the bechdel data frame:"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#the-pipe-in-action-1",
    "href": "slides/03-grammar-of-data-transformation.html#the-pipe-in-action-1",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n\nFilter for rows where binary is equal to \"PASS\":"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#the-pipe-in-action-2",
    "href": "slides/03-grammar-of-data-transformation.html#the-pipe-in-action-2",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n\nArrange the rows in descending order of roi:"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#the-pipe-in-action-3",
    "href": "slides/03-grammar-of-data-transformation.html#the-pipe-in-action-3",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n\nSelect columns title and roi:"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation.html#time-permitting",
    "href": "slides/03-grammar-of-data-transformation.html#time-permitting",
    "title": "Grammar of data transformation",
    "section": "Time permitting",
    "text": "Time permitting\n\nAsk another question of the data that can be answered with a data transformation pipeline."
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#announcements",
    "href": "slides/03-grammar-of-data-transformation-slides.html#announcements",
    "title": "Grammar of data transformation",
    "section": "Announcements",
    "text": "Announcements\n\nAE 01 and AE 02 suggested answers posted on the course website.\nEd Discussion posts:\n\nKeep them coming!\nKeep them public!\nFeel free to make them anonymous if you prefer.\n\nMonday‚Äôs lab:\n\nShow up on time\nShow up to learn and get support\nLeave with all questions answered and a plan to work on the lab throughout the week"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#ae-02-bechdel-dataviz",
    "href": "slides/03-grammar-of-data-transformation-slides.html#ae-02-bechdel-dataviz",
    "title": "Grammar of data transformation",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\nGo to RStudio, confirm that you‚Äôre in the ae project, and open the document ae-02-bechdel-dataviz.qmd."
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#recap-code-cells-aka-code-chunks",
    "href": "slides/03-grammar-of-data-transformation-slides.html#recap-code-cells-aka-code-chunks",
    "title": "Grammar of data transformation",
    "section": "Recap: Code cells (aka code chunks)",
    "text": "Recap: Code cells (aka code chunks)\n . . .\n\nCell labels are helpful for describing what the code is doing, for jumping between code cells in the editor, and for troubleshooting\nmessage: false hides any messages emitted by the code in your rendered document"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#ae-03-bechdel-data-viz-transform",
    "href": "slides/03-grammar-of-data-transformation-slides.html#ae-03-bechdel-data-viz-transform",
    "title": "Grammar of data transformation",
    "section": "ae-03-bechdel-data-viz-transform",
    "text": "ae-03-bechdel-data-viz-transform\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-03-bechdel-data-viz-transform.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#a-quick-reminder",
    "href": "slides/03-grammar-of-data-transformation-slides.html#a-quick-reminder",
    "title": "Grammar of data transformation",
    "section": "A quick reminder",
    "text": "A quick reminder\n\n1bechdel |&gt;\n2  filter(roi &gt; 400) |&gt;\n3  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n\n1\n\nStart with the bechdel data frame\n\n2\n\nFilter for movies with roi greater than 400 (gross is more than 400 times budget)\n\n3\n\nSelect the columns title, roi, budget_2013, gross_2013, year, and clean_test\n\n\n\n\n# A tibble: 3 √ó 6\n  title                    roi budget_2013 gross_2013  year clean_test\n  &lt;chr&gt;                  &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 Paranormal Activity     671.      505595  339424558  2007 dubious   \n2 The Blair Witch Proje‚Ä¶  648.      839077  543776715  1999 ok        \n3 El Mariachi             583.       11622    6778946  1992 nowomen"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#the-pipe",
    "href": "slides/03-grammar-of-data-transformation-slides.html#the-pipe",
    "title": "Grammar of data transformation",
    "section": "The pipe |>",
    "text": "The pipe |&gt;\nThe pipe operator passes what comes before it into the function that comes after it as the first argument in that function.\n\n\n\nsum(1, 2)\n\n[1] 3\n\n\n\n\n1 |&gt; \n  sum(2)\n\n[1] 3\n\n\n\n\n\n\n\nselect(filter(bechdel, roi &gt; 400), title)\n\n# A tibble: 3 √ó 1\n  title                  \n  &lt;chr&gt;                  \n1 Paranormal Activity    \n2 The Blair Witch Project\n3 El Mariachi            \n\n\n\n\nbechdel |&gt;\n  filter(roi &gt; 400) |&gt;\n  select(title)\n\n# A tibble: 3 √ó 1\n  title                  \n  &lt;chr&gt;                  \n1 Paranormal Activity    \n2 The Blair Witch Project\n3 El Mariachi"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#code-style-tip",
    "href": "slides/03-grammar-of-data-transformation-slides.html#code-style-tip",
    "title": "Grammar of data transformation",
    "section": "Code style tip ",
    "text": "Code style tip \n\nIn data transformation pipelines, always use a\n\nspace before |&gt;\nline break after |&gt;\nindent the next line of code\n\n\n\n\nIn data visualization layers, always use a\n\nspace before +\nline break after +\nindent the next line of code"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#the-pipe-in-action",
    "href": "slides/03-grammar-of-data-transformation-slides.html#the-pipe-in-action",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n\n\nStart with the bechdel data frame:"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#the-pipe-in-action-1",
    "href": "slides/03-grammar-of-data-transformation-slides.html#the-pipe-in-action-1",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n\nFilter for rows where binary is equal to \"PASS\":"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#the-pipe-in-action-2",
    "href": "slides/03-grammar-of-data-transformation-slides.html#the-pipe-in-action-2",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n\nArrange the rows in descending order of roi:"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#the-pipe-in-action-3",
    "href": "slides/03-grammar-of-data-transformation-slides.html#the-pipe-in-action-3",
    "title": "Grammar of data transformation",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n\nSelect columns title and roi:"
  },
  {
    "objectID": "slides/03-grammar-of-data-transformation-slides.html#time-permitting",
    "href": "slides/03-grammar-of-data-transformation-slides.html#time-permitting",
    "title": "Grammar of data transformation",
    "section": "Time permitting",
    "text": "Time permitting\n\nAsk another question of the data that can be answered with a data transformation pipeline.\n\n\n\n\n\n\n\n\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#while-you-wait",
    "href": "slides/04-exploring-data-I.html#while-you-wait",
    "title": "Exploring data I",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\nPrepare for today‚Äôs application exercise: ae-04-gerrymander-explore-I\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-04-gerrymander-explore-I.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/04-exploring-data-I.html#announcements",
    "href": "slides/04-exploring-data-I.html#announcements",
    "title": "Exploring data I",
    "section": "Announcements",
    "text": "Announcements\n\n\nWeekend office hours in Old Chem ‚Äì bring your Duke Card, you‚Äôll need to swipe/tap in to get in\nAEs are due by the end of class (precisely, by 2 pm) ‚Äì done = at least one commit + push\nCoding principles bonus office hour, RSVP at https://forms.gle/mufcsHnPXejZbkdT8 ‚Äì Thursday, 9/12 at 7:30 pm at Old Chem 116\n\nRStudio visual editor acting up?\n\nUsing Chrome ‚Äì make sure to update!\nUsing another browser or update doesn‚Äôt solve the problem, come by my office hours to diagnose\n\n\nNew resource: Code along videos\nAny questions about lab before we get started?"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#packages",
    "href": "slides/04-exploring-data-I.html#packages",
    "title": "Exploring data I",
    "section": "Packages",
    "text": "Packages\n\nFor the data: usdata\n\n\n\nlibrary(usdata)\n\n\nFor the analysis: tidyverse and ggthemes\n\n\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#data-gerrymander",
    "href": "slides/04-exploring-data-I.html#data-gerrymander",
    "title": "Exploring data I",
    "section": "Data: gerrymander\n",
    "text": "Data: gerrymander\n\n\ngerrymander\n\n# A tibble: 435 √ó 12\n   district last_name first_name party16 clinton16 trump16 dem16 state\n   &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 AK-AL    Young     Don        R            37.6    52.8     0 AK   \n 2 AL-01    Byrne     Bradley    R            34.1    63.5     0 AL   \n 3 AL-02    Roby      Martha     R            33      64.9     0 AL   \n 4 AL-03    Rogers    Mike D.    R            32.3    65.3     0 AL   \n 5 AL-04    Aderholt  Rob        R            17.4    80.4     0 AL   \n 6 AL-05    Brooks    Mo         R            31.3    64.7     0 AL   \n 7 AL-06    Palmer    Gary       R            26.1    70.8     0 AL   \n 8 AL-07    Sewell    Terri      D            69.8    28.6     1 AL   \n 9 AR-01    Crawford  Rick       R            30.2    65       0 AR   \n10 AR-02    Hill      French     R            41.7    52.4     0 AR   \n# ‚Ñπ 425 more rows\n# ‚Ñπ 4 more variables: party18 &lt;chr&gt;, dem18 &lt;dbl&gt;, flip18 &lt;dbl&gt;,\n#   gerry &lt;fct&gt;"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#what-is-gerrymandering",
    "href": "slides/04-exploring-data-I.html#what-is-gerrymandering",
    "title": "Exploring data I",
    "section": "What is gerrymandering?",
    "text": "What is gerrymandering?"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#data-gerrymander-1",
    "href": "slides/04-exploring-data-I.html#data-gerrymander-1",
    "title": "Exploring data I",
    "section": "Data: gerrymander\n",
    "text": "Data: gerrymander\n\n\nWhat is a good first function to use to get to know a dataset?"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#data-gerrymander-2",
    "href": "slides/04-exploring-data-I.html#data-gerrymander-2",
    "title": "Exploring data I",
    "section": "Data: gerrymander\n",
    "text": "Data: gerrymander\n\n\nRows: Congressional districts\n\nColumns:\n\nCongressional district and state\n2016 election: winning party, % for Clinton, % for Trump, whether a Democrat won the House election, name of election winner\n2018 election: winning party, whether a Democrat won the 2018 House election\nWhether a Democrat flipped the seat in the 2018 election\nPrevalence of gerrymandering: low, mid, and high"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#variable-types",
    "href": "slides/04-exploring-data-I.html#variable-types",
    "title": "Exploring data I",
    "section": "Variable types",
    "text": "Variable types\n\n\n\n\n\nVariable\nType\n\n\n\ndistrict\ncategorical, ID\n\n\nlast_name\ncategorical, ID\n\n\nfirst_name\ncategorical, ID\n\n\nparty16\ncategorical\n\n\nclinton16\nnumerical, continuous\n\n\ntrump16\nnumerical, continuous\n\n\ndem16\ncategorical\n\n\nstate\ncategorical\n\n\nparty18\ncategorical\n\n\ndem18\ncategorical\n\n\nflip18\ncategorical\n\n\ngerry\ncategorical, ordinal"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#univariate-analysis-1",
    "href": "slides/04-exploring-data-I.html#univariate-analysis-1",
    "title": "Exploring data I",
    "section": "Univariate analysis",
    "text": "Univariate analysis\nAnalyzing a single variable:\n\n\nNumerical: histogram, box plot, density plot, etc.\nCategorical: bar plot, pie chart, etc."
  },
  {
    "objectID": "slides/04-exploring-data-I.html#histogram---step-1",
    "href": "slides/04-exploring-data-I.html#histogram---step-1",
    "title": "Exploring data I",
    "section": "Histogram - Step 1",
    "text": "Histogram - Step 1\n\nggplot(gerrymander)"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#histogram---step-2",
    "href": "slides/04-exploring-data-I.html#histogram---step-2",
    "title": "Exploring data I",
    "section": "Histogram - Step 2",
    "text": "Histogram - Step 2\n\nggplot(gerrymander, aes(x = trump16))"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#histogram---step-3",
    "href": "slides/04-exploring-data-I.html#histogram---step-3",
    "title": "Exploring data I",
    "section": "Histogram - Step 3",
    "text": "Histogram - Step 3\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "slides/04-exploring-data-I.html#histogram---step-4",
    "href": "slides/04-exploring-data-I.html#histogram---step-4",
    "title": "Exploring data I",
    "section": "Histogram - Step 4",
    "text": "Histogram - Step 4"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#histogram---step-5",
    "href": "slides/04-exploring-data-I.html#histogram---step-5",
    "title": "Exploring data I",
    "section": "Histogram - Step 5",
    "text": "Histogram - Step 5\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_histogram(binwidth = 5) +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = \"Count\"\n  )"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#box-plot---step-1",
    "href": "slides/04-exploring-data-I.html#box-plot---step-1",
    "title": "Exploring data I",
    "section": "Box plot - Step 1",
    "text": "Box plot - Step 1\n\nggplot(gerrymander)"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#box-plot---step-2",
    "href": "slides/04-exploring-data-I.html#box-plot---step-2",
    "title": "Exploring data I",
    "section": "Box plot - Step 2",
    "text": "Box plot - Step 2\n\nggplot(gerrymander, aes(x = trump16))"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#box-plot---step-3",
    "href": "slides/04-exploring-data-I.html#box-plot---step-3",
    "title": "Exploring data I",
    "section": "Box plot - Step 3",
    "text": "Box plot - Step 3\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#box-plot---alternative-step-2-3",
    "href": "slides/04-exploring-data-I.html#box-plot---alternative-step-2-3",
    "title": "Exploring data I",
    "section": "Box plot - Alternative Step 2 + 3",
    "text": "Box plot - Alternative Step 2 + 3"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#box-plot---step-4",
    "href": "slides/04-exploring-data-I.html#box-plot---step-4",
    "title": "Exploring data I",
    "section": "Box plot - Step 4",
    "text": "Box plot - Step 4\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_boxplot() +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = NULL\n  )"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plot---step-1",
    "href": "slides/04-exploring-data-I.html#density-plot---step-1",
    "title": "Exploring data I",
    "section": "Density plot - Step 1",
    "text": "Density plot - Step 1\n\nggplot(gerrymander)"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plot---step-2",
    "href": "slides/04-exploring-data-I.html#density-plot---step-2",
    "title": "Exploring data I",
    "section": "Density plot - Step 2",
    "text": "Density plot - Step 2\n\nggplot(gerrymander, aes(x = trump16))"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plot---step-3",
    "href": "slides/04-exploring-data-I.html#density-plot---step-3",
    "title": "Exploring data I",
    "section": "Density plot - Step 3",
    "text": "Density plot - Step 3\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plot---step-4",
    "href": "slides/04-exploring-data-I.html#density-plot---step-4",
    "title": "Exploring data I",
    "section": "Density plot - Step 4",
    "text": "Density plot - Step 4"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plot---step-5",
    "href": "slides/04-exploring-data-I.html#density-plot---step-5",
    "title": "Exploring data I",
    "section": "Density plot - Step 5",
    "text": "Density plot - Step 5"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plot---step-6",
    "href": "slides/04-exploring-data-I.html#density-plot---step-6",
    "title": "Exploring data I",
    "section": "Density plot - Step 6",
    "text": "Density plot - Step 6"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plot---step-7",
    "href": "slides/04-exploring-data-I.html#density-plot---step-7",
    "title": "Exploring data I",
    "section": "Density plot - Step 7",
    "text": "Density plot - Step 7"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plot---step-8",
    "href": "slides/04-exploring-data-I.html#density-plot---step-8",
    "title": "Exploring data I",
    "section": "Density plot - Step 8",
    "text": "Density plot - Step 8\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density(color = \"firebrick\", fill = \"firebrick1\", alpha = 0.5, linewidth = 2) +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = \"Density\"\n  )"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#summary-statistics",
    "href": "slides/04-exploring-data-I.html#summary-statistics",
    "title": "Exploring data I",
    "section": "Summary statistics",
    "text": "Summary statistics"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#distribution-of-votes-for-trump-in-the-2016-election",
    "href": "slides/04-exploring-data-I.html#distribution-of-votes-for-trump-in-the-2016-election",
    "title": "Exploring data I",
    "section": "Distribution of votes for Trump in the 2016 election",
    "text": "Distribution of votes for Trump in the 2016 election\n\nDescribe the distribution of percent of vote received by Trump in 2016 Presidential Election from Congressional Districts.\n\n\nShape: The distribution of votes for Trump in the 2016 election from Congressional Districts is unimodal and left-skewed.\nCenter: The percent of vote received by Trump in the 2016 Presidential Election from a typical Congressional Districts is 48.7%.\nSpread: In the middle 50% of Congressional Districts, 34.8% to 58.1% of voters voted for Trump in the 2016 Presidential Election.\nUnusual observations: -"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#bivariate-analysis-1",
    "href": "slides/04-exploring-data-I.html#bivariate-analysis-1",
    "title": "Exploring data I",
    "section": "Bivariate analysis",
    "text": "Bivariate analysis\nAnalyzing the relationship between two variables:\n\n\nNumerical + numerical: scatterplot\nNumerical + categorical: side-by-side box plots, violin plots, etc.\nCategorical + categorical: stacked bar plots\nUsing an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#side-by-side-box-plots",
    "href": "slides/04-exploring-data-I.html#side-by-side-box-plots",
    "title": "Exploring data I",
    "section": "Side-by-side box plots",
    "text": "Side-by-side box plots\n\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    y = gerry\n    )\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#summary-statistics-1",
    "href": "slides/04-exploring-data-I.html#summary-statistics-1",
    "title": "Exploring data I",
    "section": "Summary statistics",
    "text": "Summary statistics"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#density-plots",
    "href": "slides/04-exploring-data-I.html#density-plots",
    "title": "Exploring data I",
    "section": "Density plots",
    "text": "Density plots\n\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    color = gerry\n    )\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#filled-density-plots",
    "href": "slides/04-exploring-data-I.html#filled-density-plots",
    "title": "Exploring data I",
    "section": "Filled density plots",
    "text": "Filled density plots\n\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    color = gerry,\n    fill = gerry\n    )\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#better-filled-density-plots",
    "href": "slides/04-exploring-data-I.html#better-filled-density-plots",
    "title": "Exploring data I",
    "section": "Better filled density plots",
    "text": "Better filled density plots\n\nggplot(\n  gerrymander, \n  aes(x = trump16, color = gerry, fill = gerry)\n  ) +\n  geom_density(alpha = 0.5)"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#better-colors",
    "href": "slides/04-exploring-data-I.html#better-colors",
    "title": "Exploring data I",
    "section": "Better colors",
    "text": "Better colors\n\nggplot(\n  gerrymander, \n  aes(x = trump16, color = gerry, fill = gerry)\n  ) +\n  geom_density(alpha = 0.5) +\n  scale_color_colorblind() +\n  scale_fill_colorblind()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#violin-plots",
    "href": "slides/04-exploring-data-I.html#violin-plots",
    "title": "Exploring data I",
    "section": "Violin plots",
    "text": "Violin plots\n\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#multiple-geoms",
    "href": "slides/04-exploring-data-I.html#multiple-geoms",
    "title": "Exploring data I",
    "section": "Multiple geoms",
    "text": "Multiple geoms\n\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_point() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#multiple-geoms-1",
    "href": "slides/04-exploring-data-I.html#multiple-geoms-1",
    "title": "Exploring data I",
    "section": "Multiple geoms",
    "text": "Multiple geoms\n\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#remove-legend",
    "href": "slides/04-exploring-data-I.html#remove-legend",
    "title": "Exploring data I",
    "section": "Remove legend",
    "text": "Remove legend\n\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  scale_color_colorblind() +\n  scale_fill_colorblind() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#multivariate-analysis-1",
    "href": "slides/04-exploring-data-I.html#multivariate-analysis-1",
    "title": "Exploring data I",
    "section": "Multivariate analysis",
    "text": "Multivariate analysis\nAnalyzing the relationship between multiple variables:\n\n\nIn general, one variable is identified as the outcome of interest\nThe remaining variables are predictors or explanatory variables\n\nPlots for exploring multivariate relationships are the same as those for bivariate relationships, but conditional on one or more variables\n\nConditioning can be done via faceting or aesthetic mappings (e.g., scatterplot of y vs.¬†x1, colored by x2, faceted by x3)\n\n\n\nSummary statistics for exploring multivariate relationships are the same as those for bivariate relationships, but conditional on one or more variables\n\nConditioning can be done via grouping (e.g., correlation between y and x1, grouped by levels of x2 and x3)"
  },
  {
    "objectID": "slides/04-exploring-data-I.html#ae-04-gerrymander-explore-i",
    "href": "slides/04-exploring-data-I.html#ae-04-gerrymander-explore-i",
    "title": "Exploring data I",
    "section": "ae-04-gerrymander-explore-I",
    "text": "ae-04-gerrymander-explore-I\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-04-gerrymander-explore-I.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#while-you-wait",
    "href": "slides/04-exploring-data-I-slides.html#while-you-wait",
    "title": "Exploring data I",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\nPrepare for today‚Äôs application exercise: ae-04-gerrymander-explore-I\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-04-gerrymander-explore-I.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#announcements",
    "href": "slides/04-exploring-data-I-slides.html#announcements",
    "title": "Exploring data I",
    "section": "Announcements",
    "text": "Announcements\n\n\nWeekend office hours in Old Chem ‚Äì bring your Duke Card, you‚Äôll need to swipe/tap in to get in\nAEs are due by the end of class (precisely, by 2 pm) ‚Äì done = at least one commit + push\nCoding principles bonus office hour, RSVP at https://forms.gle/mufcsHnPXejZbkdT8 ‚Äì Thursday, 9/12 at 7:30 pm at Old Chem 116\n\nRStudio visual editor acting up?\n\nUsing Chrome ‚Äì make sure to update!\nUsing another browser or update doesn‚Äôt solve the problem, come by my office hours to diagnose\n\n\nNew resource: Code along videos\nAny questions about lab before we get started?"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#packages",
    "href": "slides/04-exploring-data-I-slides.html#packages",
    "title": "Exploring data I",
    "section": "Packages",
    "text": "Packages\n\nFor the data: usdata\n\n\n\nlibrary(usdata)\n\n\nFor the analysis: tidyverse and ggthemes\n\n\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#data-gerrymander",
    "href": "slides/04-exploring-data-I-slides.html#data-gerrymander",
    "title": "Exploring data I",
    "section": "Data: gerrymander\n",
    "text": "Data: gerrymander\n\n\ngerrymander\n\n# A tibble: 435 √ó 12\n   district last_name first_name party16 clinton16 trump16 dem16 state\n   &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 AK-AL    Young     Don        R            37.6    52.8     0 AK   \n 2 AL-01    Byrne     Bradley    R            34.1    63.5     0 AL   \n 3 AL-02    Roby      Martha     R            33      64.9     0 AL   \n 4 AL-03    Rogers    Mike D.    R            32.3    65.3     0 AL   \n 5 AL-04    Aderholt  Rob        R            17.4    80.4     0 AL   \n 6 AL-05    Brooks    Mo         R            31.3    64.7     0 AL   \n 7 AL-06    Palmer    Gary       R            26.1    70.8     0 AL   \n 8 AL-07    Sewell    Terri      D            69.8    28.6     1 AL   \n 9 AR-01    Crawford  Rick       R            30.2    65       0 AR   \n10 AR-02    Hill      French     R            41.7    52.4     0 AR   \n# ‚Ñπ 425 more rows\n# ‚Ñπ 4 more variables: party18 &lt;chr&gt;, dem18 &lt;dbl&gt;, flip18 &lt;dbl&gt;,\n#   gerry &lt;fct&gt;"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#what-is-gerrymandering",
    "href": "slides/04-exploring-data-I-slides.html#what-is-gerrymandering",
    "title": "Exploring data I",
    "section": "What is gerrymandering?",
    "text": "What is gerrymandering?"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#data-gerrymander-1",
    "href": "slides/04-exploring-data-I-slides.html#data-gerrymander-1",
    "title": "Exploring data I",
    "section": "Data: gerrymander\n",
    "text": "Data: gerrymander\n\n\nWhat is a good first function to use to get to know a dataset?"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#data-gerrymander-2",
    "href": "slides/04-exploring-data-I-slides.html#data-gerrymander-2",
    "title": "Exploring data I",
    "section": "Data: gerrymander\n",
    "text": "Data: gerrymander\n\n\nRows: Congressional districts\n\nColumns:\n\nCongressional district and state\n2016 election: winning party, % for Clinton, % for Trump, whether a Democrat won the House election, name of election winner\n2018 election: winning party, whether a Democrat won the 2018 House election\nWhether a Democrat flipped the seat in the 2018 election\nPrevalence of gerrymandering: low, mid, and high"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#variable-types",
    "href": "slides/04-exploring-data-I-slides.html#variable-types",
    "title": "Exploring data I",
    "section": "Variable types",
    "text": "Variable types\n\n\n\n\n\nVariable\nType\n\n\n\ndistrict\ncategorical, ID\n\n\nlast_name\ncategorical, ID\n\n\nfirst_name\ncategorical, ID\n\n\nparty16\ncategorical\n\n\nclinton16\nnumerical, continuous\n\n\ntrump16\nnumerical, continuous\n\n\ndem16\ncategorical\n\n\nstate\ncategorical\n\n\nparty18\ncategorical\n\n\ndem18\ncategorical\n\n\nflip18\ncategorical\n\n\ngerry\ncategorical, ordinal"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#univariate-analysis-1",
    "href": "slides/04-exploring-data-I-slides.html#univariate-analysis-1",
    "title": "Exploring data I",
    "section": "Univariate analysis",
    "text": "Univariate analysis\nAnalyzing a single variable:\n\n\nNumerical: histogram, box plot, density plot, etc.\nCategorical: bar plot, pie chart, etc."
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#histogram---step-1",
    "href": "slides/04-exploring-data-I-slides.html#histogram---step-1",
    "title": "Exploring data I",
    "section": "Histogram - Step 1",
    "text": "Histogram - Step 1\n\nggplot(gerrymander)"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#histogram---step-2",
    "href": "slides/04-exploring-data-I-slides.html#histogram---step-2",
    "title": "Exploring data I",
    "section": "Histogram - Step 2",
    "text": "Histogram - Step 2\n\nggplot(gerrymander, aes(x = trump16))"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#histogram---step-3",
    "href": "slides/04-exploring-data-I-slides.html#histogram---step-3",
    "title": "Exploring data I",
    "section": "Histogram - Step 3",
    "text": "Histogram - Step 3\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#histogram---step-4",
    "href": "slides/04-exploring-data-I-slides.html#histogram---step-4",
    "title": "Exploring data I",
    "section": "Histogram - Step 4",
    "text": "Histogram - Step 4"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#histogram---step-5",
    "href": "slides/04-exploring-data-I-slides.html#histogram---step-5",
    "title": "Exploring data I",
    "section": "Histogram - Step 5",
    "text": "Histogram - Step 5\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_histogram(binwidth = 5) +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = \"Count\"\n  )"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#box-plot---step-1",
    "href": "slides/04-exploring-data-I-slides.html#box-plot---step-1",
    "title": "Exploring data I",
    "section": "Box plot - Step 1",
    "text": "Box plot - Step 1\n\nggplot(gerrymander)"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#box-plot---step-2",
    "href": "slides/04-exploring-data-I-slides.html#box-plot---step-2",
    "title": "Exploring data I",
    "section": "Box plot - Step 2",
    "text": "Box plot - Step 2\n\nggplot(gerrymander, aes(x = trump16))"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#box-plot---step-3",
    "href": "slides/04-exploring-data-I-slides.html#box-plot---step-3",
    "title": "Exploring data I",
    "section": "Box plot - Step 3",
    "text": "Box plot - Step 3\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#box-plot---alternative-step-2-3",
    "href": "slides/04-exploring-data-I-slides.html#box-plot---alternative-step-2-3",
    "title": "Exploring data I",
    "section": "Box plot - Alternative Step 2 + 3",
    "text": "Box plot - Alternative Step 2 + 3"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#box-plot---step-4",
    "href": "slides/04-exploring-data-I-slides.html#box-plot---step-4",
    "title": "Exploring data I",
    "section": "Box plot - Step 4",
    "text": "Box plot - Step 4\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_boxplot() +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = NULL\n  )"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plot---step-1",
    "href": "slides/04-exploring-data-I-slides.html#density-plot---step-1",
    "title": "Exploring data I",
    "section": "Density plot - Step 1",
    "text": "Density plot - Step 1\n\nggplot(gerrymander)"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plot---step-2",
    "href": "slides/04-exploring-data-I-slides.html#density-plot---step-2",
    "title": "Exploring data I",
    "section": "Density plot - Step 2",
    "text": "Density plot - Step 2\n\nggplot(gerrymander, aes(x = trump16))"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plot---step-3",
    "href": "slides/04-exploring-data-I-slides.html#density-plot---step-3",
    "title": "Exploring data I",
    "section": "Density plot - Step 3",
    "text": "Density plot - Step 3\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plot---step-4",
    "href": "slides/04-exploring-data-I-slides.html#density-plot---step-4",
    "title": "Exploring data I",
    "section": "Density plot - Step 4",
    "text": "Density plot - Step 4"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plot---step-5",
    "href": "slides/04-exploring-data-I-slides.html#density-plot---step-5",
    "title": "Exploring data I",
    "section": "Density plot - Step 5",
    "text": "Density plot - Step 5"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plot---step-6",
    "href": "slides/04-exploring-data-I-slides.html#density-plot---step-6",
    "title": "Exploring data I",
    "section": "Density plot - Step 6",
    "text": "Density plot - Step 6"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plot---step-7",
    "href": "slides/04-exploring-data-I-slides.html#density-plot---step-7",
    "title": "Exploring data I",
    "section": "Density plot - Step 7",
    "text": "Density plot - Step 7"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plot---step-8",
    "href": "slides/04-exploring-data-I-slides.html#density-plot---step-8",
    "title": "Exploring data I",
    "section": "Density plot - Step 8",
    "text": "Density plot - Step 8\n\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density(color = \"firebrick\", fill = \"firebrick1\", alpha = 0.5, linewidth = 2) +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = \"Density\"\n  )"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#summary-statistics",
    "href": "slides/04-exploring-data-I-slides.html#summary-statistics",
    "title": "Exploring data I",
    "section": "Summary statistics",
    "text": "Summary statistics"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#distribution-of-votes-for-trump-in-the-2016-election",
    "href": "slides/04-exploring-data-I-slides.html#distribution-of-votes-for-trump-in-the-2016-election",
    "title": "Exploring data I",
    "section": "Distribution of votes for Trump in the 2016 election",
    "text": "Distribution of votes for Trump in the 2016 election\n\nDescribe the distribution of percent of vote received by Trump in 2016 Presidential Election from Congressional Districts.\n\n\nShape: The distribution of votes for Trump in the 2016 election from Congressional Districts is unimodal and left-skewed.\nCenter: The percent of vote received by Trump in the 2016 Presidential Election from a typical Congressional Districts is 48.7%.\nSpread: In the middle 50% of Congressional Districts, 34.8% to 58.1% of voters voted for Trump in the 2016 Presidential Election.\nUnusual observations: -"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#bivariate-analysis-1",
    "href": "slides/04-exploring-data-I-slides.html#bivariate-analysis-1",
    "title": "Exploring data I",
    "section": "Bivariate analysis",
    "text": "Bivariate analysis\nAnalyzing the relationship between two variables:\n\n\nNumerical + numerical: scatterplot\nNumerical + categorical: side-by-side box plots, violin plots, etc.\nCategorical + categorical: stacked bar plots\nUsing an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#side-by-side-box-plots",
    "href": "slides/04-exploring-data-I-slides.html#side-by-side-box-plots",
    "title": "Exploring data I",
    "section": "Side-by-side box plots",
    "text": "Side-by-side box plots\n\n\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    y = gerry\n    )\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#summary-statistics-1",
    "href": "slides/04-exploring-data-I-slides.html#summary-statistics-1",
    "title": "Exploring data I",
    "section": "Summary statistics",
    "text": "Summary statistics"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#density-plots",
    "href": "slides/04-exploring-data-I-slides.html#density-plots",
    "title": "Exploring data I",
    "section": "Density plots",
    "text": "Density plots\n\n\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    color = gerry\n    )\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#filled-density-plots",
    "href": "slides/04-exploring-data-I-slides.html#filled-density-plots",
    "title": "Exploring data I",
    "section": "Filled density plots",
    "text": "Filled density plots\n\n\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    color = gerry,\n    fill = gerry\n    )\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#better-filled-density-plots",
    "href": "slides/04-exploring-data-I-slides.html#better-filled-density-plots",
    "title": "Exploring data I",
    "section": "Better filled density plots",
    "text": "Better filled density plots\n\nggplot(\n  gerrymander, \n  aes(x = trump16, color = gerry, fill = gerry)\n  ) +\n  geom_density(alpha = 0.5)"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#better-colors",
    "href": "slides/04-exploring-data-I-slides.html#better-colors",
    "title": "Exploring data I",
    "section": "Better colors",
    "text": "Better colors\n\n\nggplot(\n  gerrymander, \n  aes(x = trump16, color = gerry, fill = gerry)\n  ) +\n  geom_density(alpha = 0.5) +\n  scale_color_colorblind() +\n  scale_fill_colorblind()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#violin-plots",
    "href": "slides/04-exploring-data-I-slides.html#violin-plots",
    "title": "Exploring data I",
    "section": "Violin plots",
    "text": "Violin plots\n\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#multiple-geoms",
    "href": "slides/04-exploring-data-I-slides.html#multiple-geoms",
    "title": "Exploring data I",
    "section": "Multiple geoms",
    "text": "Multiple geoms\n\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_point() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#multiple-geoms-1",
    "href": "slides/04-exploring-data-I-slides.html#multiple-geoms-1",
    "title": "Exploring data I",
    "section": "Multiple geoms",
    "text": "Multiple geoms\n\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#remove-legend",
    "href": "slides/04-exploring-data-I-slides.html#remove-legend",
    "title": "Exploring data I",
    "section": "Remove legend",
    "text": "Remove legend\n\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  scale_color_colorblind() +\n  scale_fill_colorblind() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#multivariate-analysis-1",
    "href": "slides/04-exploring-data-I-slides.html#multivariate-analysis-1",
    "title": "Exploring data I",
    "section": "Multivariate analysis",
    "text": "Multivariate analysis\nAnalyzing the relationship between multiple variables:\n\n\nIn general, one variable is identified as the outcome of interest\nThe remaining variables are predictors or explanatory variables\n\nPlots for exploring multivariate relationships are the same as those for bivariate relationships, but conditional on one or more variables\n\nConditioning can be done via faceting or aesthetic mappings (e.g., scatterplot of y vs.¬†x1, colored by x2, faceted by x3)\n\n\n\nSummary statistics for exploring multivariate relationships are the same as those for bivariate relationships, but conditional on one or more variables\n\nConditioning can be done via grouping (e.g., correlation between y and x1, grouped by levels of x2 and x3)"
  },
  {
    "objectID": "slides/04-exploring-data-I-slides.html#ae-04-gerrymander-explore-i",
    "href": "slides/04-exploring-data-I-slides.html#ae-04-gerrymander-explore-i",
    "title": "Exploring data I",
    "section": "ae-04-gerrymander-explore-I",
    "text": "ae-04-gerrymander-explore-I\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-04-gerrymander-explore-I.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class.\n\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/06-tidying-data.html#while-you-wait",
    "href": "slides/06-tidying-data.html#while-you-wait",
    "title": "Tidying data",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\nPrepare for today‚Äôs application exercise: ae-06-majors-tidy\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-06-majors-tidy.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-layering-geoms",
    "href": "slides/06-tidying-data.html#recap-layering-geoms",
    "title": "Tidying data",
    "section": "Recap: layering geoms",
    "text": "Recap: layering geoms\n\n\n\nUpdate the following code to create the visualization on the right.\n\n\nlibrary(tidyverse)\nlibrary(usdata)\nlibrary(ggbeeswarm)"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-logical-operators",
    "href": "slides/06-tidying-data.html#recap-logical-operators",
    "title": "Tidying data",
    "section": "Recap: logical operators",
    "text": "Recap: logical operators\nGenerally useful in a filter() but will come up in various other places as well‚Ä¶\n\n\n\n\n\n\noperator\ndefinition\n\n\n\n&lt;\nis less than?\n\n\n&lt;=\nis less than or equal to?\n\n\n&gt;\nis greater than?\n\n\n&gt;=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-logical-operators-cont.",
    "href": "slides/06-tidying-data.html#recap-logical-operators-cont.",
    "title": "Tidying data",
    "section": "Recap: logical operators (cont.)",
    "text": "Recap: logical operators (cont.)\nGenerally useful in a filter() but will come up in various other places as well‚Ä¶\n\n\n\n\n\n\noperator\ndefinition\n\n\n\nx & y\nis x AND y?\n\n\nx \\| y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x? (only makes sense if x is TRUE or FALSE)"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment",
    "href": "slides/06-tidying-data.html#recap-assignment",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\nLet‚Äôs make a tiny data frame to use as an example:\n\ndf &lt;- tibble(x = c(1, 2, 3, 4, 5), y = c(\"a\", \"a\", \"b\", \"c\", \"c\"))\ndf\n\n# A tibble: 5 √ó 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     1 a    \n2     2 a    \n3     3 b    \n4     4 c    \n5     5 c"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-1",
    "href": "slides/06-tidying-data.html#recap-assignment-1",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\nSuppose you run the following and then you inspect df, will the x variable has values 1, 2, 3, 4, 5 or 2, 4, 6, 8, 10?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n. . .\n\nDo something and show me"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-2",
    "href": "slides/06-tidying-data.html#recap-assignment-2",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\nSuppose you run the following and then you inspect df, will the x variable has values 1, 2, 3, 4, 5 or 2, 4, 6, 8, 10?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n. . .\n\nDo something and save result"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-3",
    "href": "slides/06-tidying-data.html#recap-assignment-3",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting original\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(x = x * 2)\ndf\n\n# A tibble: 5 √ó 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     2 a    \n2     4 a    \n3     6 b    \n4     8 c    \n5    10 c    \n\n\n\n\n\nDo something, save result, not overwriting original\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf_new &lt;- df |&gt;\n  mutate(x = x * 2)\ndf_new\n\n# A tibble: 5 √ó 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     2 a    \n2     4 a    \n3     6 b    \n4     8 c    \n5    10 c"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-4",
    "href": "slides/06-tidying-data.html#recap-assignment-4",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting original when you shouldn‚Äôt\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  group_by(y) |&gt;\n  summarize(mean_x = mean(x))\ndf\n\n# A tibble: 3 √ó 2\n  y     mean_x\n  &lt;chr&gt;  &lt;dbl&gt;\n1 a        1.5\n2 b        3  \n3 c        4.5\n\n\n\n\n\nDo something, save result, not overwriting original when you shouldn‚Äôt\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf_summary &lt;- df |&gt;\n  group_by(y) |&gt;\n  summarize(mean_x = mean(x))\ndf_summary\n\n# A tibble: 3 √ó 2\n  y     mean_x\n  &lt;chr&gt;  &lt;dbl&gt;\n1 a        1.5\n2 b        3  \n3 c        4.5"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-5",
    "href": "slides/06-tidying-data.html#recap-assignment-5",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting originaldata frame\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(z = x + 2)\ndf\n\n# A tibble: 5 √ó 3\n      x y         z\n  &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;\n1     1 a         3\n2     2 a         4\n3     3 b         5\n4     4 c         6\n5     5 c         7\n\n\n\n\n\nDo something, save result, overwriting originalcolumn\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(x = x + 2)\ndf\n\n# A tibble: 5 √ó 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     3 a    \n2     4 a    \n3     5 b    \n4     6 c    \n5     7 c"
  },
  {
    "objectID": "slides/06-tidying-data.html#tidy-data",
    "href": "slides/06-tidying-data.html#tidy-data",
    "title": "Tidying data",
    "section": "Tidy data",
    "text": "Tidy data\n\n‚ÄúTidy datasets are easy to manipulate, model and visualise, and have a specific structure: each variable is a column, each observation is a row, and each type of observational unit is a table.‚Äù\nTidy Data, https://vita.had.co.nz/papers/tidy-data.pdf\n\n. . .\nNote: ‚Äúeasy to manipulate‚Äù = ‚Äústraightforward to manipulate‚Äù"
  },
  {
    "objectID": "slides/06-tidying-data.html#goal",
    "href": "slides/06-tidying-data.html#goal",
    "title": "Tidying data",
    "section": "Goal",
    "text": "Goal\nVisualize StatSci majors over the years!"
  },
  {
    "objectID": "slides/06-tidying-data.html#data",
    "href": "slides/06-tidying-data.html#data",
    "title": "Tidying data",
    "section": "Data",
    "text": "Data"
  },
  {
    "objectID": "slides/06-tidying-data.html#data-1",
    "href": "slides/06-tidying-data.html#data-1",
    "title": "Tidying data",
    "section": "Data",
    "text": "Data\n\nstatsci\n\n# A tibble: 4 √ó 15\n  degree       `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018`\n  &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Statistical‚Ä¶     NA      1     NA     NA      4      4      1     NA\n2 Statistical‚Ä¶      2      2      4      1      3      6      3      4\n3 Statistical‚Ä¶      2      6      1     NA      5      6      6      8\n4 Statistical‚Ä¶      5      9      4     13     10     17     24     21\n# ‚Ñπ 6 more variables: `2019` &lt;dbl&gt;, `2020` &lt;dbl&gt;, `2021` &lt;dbl&gt;,\n#   `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;, `2024` &lt;dbl&gt;\n\n\n\nThe first column (variable) is the degree, and there are 4 possible degrees: BS (Bachelor of Science), BS2 (Bachelor of Science, 2nd major), AB (Bachelor of Arts), AB2 (Bachelor of Arts, 2nd major).\nThe remaining columns show the number of students graduating with that major in a given academic year from 2011 to 2024."
  },
  {
    "objectID": "slides/06-tidying-data.html#lets-plan",
    "href": "slides/06-tidying-data.html#lets-plan",
    "title": "Tidying data",
    "section": "Let‚Äôs plan!",
    "text": "Let‚Äôs plan!\n\nReview the goal plot and sketch the data frame needed to make the plot. Determine rows and columns of the data frame. Hint: Data need to be in columns to map to aesthetic elements of the plot."
  },
  {
    "objectID": "slides/06-tidying-data.html#pivot_longer",
    "href": "slides/06-tidying-data.html#pivot_longer",
    "title": "Tidying data",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\nPivot the statsci data frame longer such that each row represents a degree type / year combination and year and number of graduates for that year are columns in the data frame."
  },
  {
    "objectID": "slides/06-tidying-data.html#year",
    "href": "slides/06-tidying-data.html#year",
    "title": "Tidying data",
    "section": "year",
    "text": "year\n\nWhat is the type of the year variable? Why? What should it be?\n\n. . .\nIt‚Äôs a character (chr) variable since the information came from the columns of the original data frame and R cannot know that these character strings represent years. The variable type should be numeric."
  },
  {
    "objectID": "slides/06-tidying-data.html#pivot_longer-again",
    "href": "slides/06-tidying-data.html#pivot_longer-again",
    "title": "Tidying data",
    "section": "\npivot_longer() again",
    "text": "pivot_longer() again\n\nStart over with pivoting, and this time also make sure year is a numerical variable in the resulting data frame."
  },
  {
    "objectID": "slides/06-tidying-data.html#na-counts",
    "href": "slides/06-tidying-data.html#na-counts",
    "title": "Tidying data",
    "section": "\nNA counts",
    "text": "NA counts\n\nWhat does an NA mean in this context? Hint: The data come from the university registrar, and they have records on every single graduates, there shouldn‚Äôt be anything ‚Äúunknown‚Äù to them about who graduated when.\n\n. . .\nNAs should actually be 0s."
  },
  {
    "objectID": "slides/06-tidying-data.html#clean-up",
    "href": "slides/06-tidying-data.html#clean-up",
    "title": "Tidying data",
    "section": "Clean-up",
    "text": "Clean-up\n\nAdd on to your pipeline that you started with pivoting and convert NAs in n to 0s."
  },
  {
    "objectID": "slides/06-tidying-data.html#more-clean-up",
    "href": "slides/06-tidying-data.html#more-clean-up",
    "title": "Tidying data",
    "section": "More clean-up",
    "text": "More clean-up\n\nIn our plot the degree types are BS, BS2, AB, and AB2. This information is in our dataset, in the degree column, but this column also has additional characters we don‚Äôt need. Create a new column called degree_type with levels BS, BS2, AB, and AB2 (in this order) based on degree. Do this by adding on to your pipeline from earlier."
  },
  {
    "objectID": "slides/06-tidying-data.html#finish",
    "href": "slides/06-tidying-data.html#finish",
    "title": "Tidying data",
    "section": "Finish",
    "text": "Finish\n\nNow that you have your data pivoting and cleaning pipeline figured out, save the resulting data frame as statsci_longer."
  },
  {
    "objectID": "slides/06-tidying-data.html#ae-06-majors-tidy",
    "href": "slides/06-tidying-data.html#ae-06-majors-tidy",
    "title": "Tidying data",
    "section": "ae-06-majors-tidy",
    "text": "ae-06-majors-tidy\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-06-majors-tidy.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-pivoting",
    "href": "slides/06-tidying-data.html#recap-pivoting",
    "title": "Tidying data",
    "section": "Recap: pivoting",
    "text": "Recap: pivoting\n\n\nData sets can‚Äôt be labeled as wide or long but they can be made wider or longer for a certain analysis that requires a certain format\nWhen pivoting longer, variable names that turn into values are characters by default. If you need them to be in another format, you need to explicitly make that transformation, which you can do so within the pivot_longer() function.\nYou can tweak a plot forever, but at some point the tweaks are likely not very productive. However, you should always be critical of defaults (however pretty they might be) and see if you can improve the plot to better portray your data / results / what you want to communicate."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#while-you-wait",
    "href": "slides/06-tidying-data-slides.html#while-you-wait",
    "title": "Tidying data",
    "section": "While you wait‚Ä¶",
    "text": "While you wait‚Ä¶\nPrepare for today‚Äôs application exercise: ae-06-majors-tidy\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nClick Pull to get today‚Äôs application exercise file: ae-06-majors-tidy.qmd.\nWait till the you‚Äôre prompted to work on the application exercise during class before editing the file."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-layering-geoms",
    "href": "slides/06-tidying-data-slides.html#recap-layering-geoms",
    "title": "Tidying data",
    "section": "Recap: layering geoms",
    "text": "Recap: layering geoms\n\n\n\nUpdate the following code to create the visualization on the right.\n\n\nlibrary(tidyverse)\nlibrary(usdata)\nlibrary(ggbeeswarm)"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-logical-operators",
    "href": "slides/06-tidying-data-slides.html#recap-logical-operators",
    "title": "Tidying data",
    "section": "Recap: logical operators",
    "text": "Recap: logical operators\nGenerally useful in a filter() but will come up in various other places as well‚Ä¶\n\n\n\n\n\n\noperator\ndefinition\n\n\n\n&lt;\nis less than?\n\n\n&lt;=\nis less than or equal to?\n\n\n&gt;\nis greater than?\n\n\n&gt;=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-logical-operators-cont.",
    "href": "slides/06-tidying-data-slides.html#recap-logical-operators-cont.",
    "title": "Tidying data",
    "section": "Recap: logical operators (cont.)",
    "text": "Recap: logical operators (cont.)\nGenerally useful in a filter() but will come up in various other places as well‚Ä¶\n\n\n\n\n\n\noperator\ndefinition\n\n\n\nx & y\nis x AND y?\n\n\nx \\| y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x? (only makes sense if x is TRUE or FALSE)"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-assignment",
    "href": "slides/06-tidying-data-slides.html#recap-assignment",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\nLet‚Äôs make a tiny data frame to use as an example:\n\ndf &lt;- tibble(x = c(1, 2, 3, 4, 5), y = c(\"a\", \"a\", \"b\", \"c\", \"c\"))\ndf\n\n# A tibble: 5 √ó 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     1 a    \n2     2 a    \n3     3 b    \n4     4 c    \n5     5 c"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-assignment-1",
    "href": "slides/06-tidying-data-slides.html#recap-assignment-1",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\nSuppose you run the following and then you inspect df, will the x variable has values 1, 2, 3, 4, 5 or 2, 4, 6, 8, 10?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDo something and show me"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-assignment-2",
    "href": "slides/06-tidying-data-slides.html#recap-assignment-2",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\nSuppose you run the following and then you inspect df, will the x variable has values 1, 2, 3, 4, 5 or 2, 4, 6, 8, 10?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDo something and save result"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-assignment-3",
    "href": "slides/06-tidying-data-slides.html#recap-assignment-3",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting original\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(x = x * 2)\ndf\n\n# A tibble: 5 √ó 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     2 a    \n2     4 a    \n3     6 b    \n4     8 c    \n5    10 c    \n\n\n\n\nDo something, save result, not overwriting original\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf_new &lt;- df |&gt;\n  mutate(x = x * 2)\ndf_new\n\n# A tibble: 5 √ó 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     2 a    \n2     4 a    \n3     6 b    \n4     8 c    \n5    10 c"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-assignment-4",
    "href": "slides/06-tidying-data-slides.html#recap-assignment-4",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting original when you shouldn‚Äôt\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  group_by(y) |&gt;\n  summarize(mean_x = mean(x))\ndf\n\n# A tibble: 3 √ó 2\n  y     mean_x\n  &lt;chr&gt;  &lt;dbl&gt;\n1 a        1.5\n2 b        3  \n3 c        4.5\n\n\n\n\nDo something, save result, not overwriting original when you shouldn‚Äôt\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf_summary &lt;- df |&gt;\n  group_by(y) |&gt;\n  summarize(mean_x = mean(x))\ndf_summary\n\n# A tibble: 3 √ó 2\n  y     mean_x\n  &lt;chr&gt;  &lt;dbl&gt;\n1 a        1.5\n2 b        3  \n3 c        4.5"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-assignment-5",
    "href": "slides/06-tidying-data-slides.html#recap-assignment-5",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting originaldata frame\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(z = x + 2)\ndf\n\n# A tibble: 5 √ó 3\n      x y         z\n  &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;\n1     1 a         3\n2     2 a         4\n3     3 b         5\n4     4 c         6\n5     5 c         7\n\n\n\n\nDo something, save result, overwriting originalcolumn\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(x = x + 2)\ndf\n\n# A tibble: 5 √ó 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     3 a    \n2     4 a    \n3     5 b    \n4     6 c    \n5     7 c"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#tidy-data",
    "href": "slides/06-tidying-data-slides.html#tidy-data",
    "title": "Tidying data",
    "section": "Tidy data",
    "text": "Tidy data\n\n‚ÄúTidy datasets are easy to manipulate, model and visualise, and have a specific structure: each variable is a column, each observation is a row, and each type of observational unit is a table.‚Äù\nTidy Data, https://vita.had.co.nz/papers/tidy-data.pdf\n\n\nNote: ‚Äúeasy to manipulate‚Äù = ‚Äústraightforward to manipulate‚Äù"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#goal",
    "href": "slides/06-tidying-data-slides.html#goal",
    "title": "Tidying data",
    "section": "Goal",
    "text": "Goal\nVisualize StatSci majors over the years!"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#data",
    "href": "slides/06-tidying-data-slides.html#data",
    "title": "Tidying data",
    "section": "Data",
    "text": "Data"
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#data-1",
    "href": "slides/06-tidying-data-slides.html#data-1",
    "title": "Tidying data",
    "section": "Data",
    "text": "Data\n\nstatsci\n\n# A tibble: 4 √ó 15\n  degree       `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018`\n  &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Statistical‚Ä¶     NA      1     NA     NA      4      4      1     NA\n2 Statistical‚Ä¶      2      2      4      1      3      6      3      4\n3 Statistical‚Ä¶      2      6      1     NA      5      6      6      8\n4 Statistical‚Ä¶      5      9      4     13     10     17     24     21\n# ‚Ñπ 6 more variables: `2019` &lt;dbl&gt;, `2020` &lt;dbl&gt;, `2021` &lt;dbl&gt;,\n#   `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;, `2024` &lt;dbl&gt;\n\n\n\nThe first column (variable) is the degree, and there are 4 possible degrees: BS (Bachelor of Science), BS2 (Bachelor of Science, 2nd major), AB (Bachelor of Arts), AB2 (Bachelor of Arts, 2nd major).\nThe remaining columns show the number of students graduating with that major in a given academic year from 2011 to 2024."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#lets-plan",
    "href": "slides/06-tidying-data-slides.html#lets-plan",
    "title": "Tidying data",
    "section": "Let‚Äôs plan!",
    "text": "Let‚Äôs plan!\n\nReview the goal plot and sketch the data frame needed to make the plot. Determine rows and columns of the data frame. Hint: Data need to be in columns to map to aesthetic elements of the plot."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#pivot_longer",
    "href": "slides/06-tidying-data-slides.html#pivot_longer",
    "title": "Tidying data",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\nPivot the statsci data frame longer such that each row represents a degree type / year combination and year and number of graduates for that year are columns in the data frame."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#year",
    "href": "slides/06-tidying-data-slides.html#year",
    "title": "Tidying data",
    "section": "year",
    "text": "year\n\nWhat is the type of the year variable? Why? What should it be?\n\n\nIt‚Äôs a character (chr) variable since the information came from the columns of the original data frame and R cannot know that these character strings represent years. The variable type should be numeric."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#pivot_longer-again",
    "href": "slides/06-tidying-data-slides.html#pivot_longer-again",
    "title": "Tidying data",
    "section": "\npivot_longer() again",
    "text": "pivot_longer() again\n\nStart over with pivoting, and this time also make sure year is a numerical variable in the resulting data frame."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#na-counts",
    "href": "slides/06-tidying-data-slides.html#na-counts",
    "title": "Tidying data",
    "section": "\nNA counts",
    "text": "NA counts\n\nWhat does an NA mean in this context? Hint: The data come from the university registrar, and they have records on every single graduates, there shouldn‚Äôt be anything ‚Äúunknown‚Äù to them about who graduated when.\n\n\nNAs should actually be 0s."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#clean-up",
    "href": "slides/06-tidying-data-slides.html#clean-up",
    "title": "Tidying data",
    "section": "Clean-up",
    "text": "Clean-up\n\nAdd on to your pipeline that you started with pivoting and convert NAs in n to 0s."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#more-clean-up",
    "href": "slides/06-tidying-data-slides.html#more-clean-up",
    "title": "Tidying data",
    "section": "More clean-up",
    "text": "More clean-up\n\nIn our plot the degree types are BS, BS2, AB, and AB2. This information is in our dataset, in the degree column, but this column also has additional characters we don‚Äôt need. Create a new column called degree_type with levels BS, BS2, AB, and AB2 (in this order) based on degree. Do this by adding on to your pipeline from earlier."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#finish",
    "href": "slides/06-tidying-data-slides.html#finish",
    "title": "Tidying data",
    "section": "Finish",
    "text": "Finish\n\nNow that you have your data pivoting and cleaning pipeline figured out, save the resulting data frame as statsci_longer."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#ae-06-majors-tidy",
    "href": "slides/06-tidying-data-slides.html#ae-06-majors-tidy",
    "title": "Tidying data",
    "section": "ae-06-majors-tidy",
    "text": "ae-06-majors-tidy\n\n\nGo to your ae project in RStudio.\nIf you haven‚Äôt yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there‚Äôs nothing left in your Git pane.\nIf you haven‚Äôt yet done so, click Pull to get today‚Äôs application exercise file: ae-06-majors-tidy.qmd.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/06-tidying-data-slides.html#recap-pivoting",
    "href": "slides/06-tidying-data-slides.html#recap-pivoting",
    "title": "Tidying data",
    "section": "Recap: pivoting",
    "text": "Recap: pivoting\n\n\nData sets can‚Äôt be labeled as wide or long but they can be made wider or longer for a certain analysis that requires a certain format\nWhen pivoting longer, variable names that turn into values are characters by default. If you need them to be in another format, you need to explicitly make that transformation, which you can do so within the pivot_longer() function.\nYou can tweak a plot forever, but at some point the tweaks are likely not very productive. However, you should always be critical of defaults (however pretty they might be) and see if you can improve the plot to better portray your data / results / what you want to communicate.\n\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#announcements",
    "href": "slides/01-meet-the-toolkit.html#announcements",
    "title": "Meet the toolkit",
    "section": "Announcements",
    "text": "Announcements\n\nIf you have not yet completed the Getting to know you survey, please do so asap!\nIf you have not yet accepted the invite to join the course GitHub Organization (I‚Äôm looking at 25 of you as of this morning!), please do so asap!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#additional-resource",
    "href": "slides/01-meet-the-toolkit.html#additional-resource",
    "title": "Meet the toolkit",
    "section": "Additional resource",
    "text": "Additional resource\n\nPeer tutoring\nMore info at https://sta199-f24.github.io/course-support.html#peer-tutoring"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#five-tips-for-success",
    "href": "slides/01-meet-the-toolkit.html#five-tips-for-success",
    "title": "Meet the toolkit",
    "section": "Five tips for success",
    "text": "Five tips for success\n\nComplete all the preparation work before class.\nAsk questions.\nDo the readings.\nDo the lab.\nDon‚Äôt procrastinate ‚Äì at least on a weekly basis!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#course-toolkit-1",
    "href": "slides/01-meet-the-toolkit.html#course-toolkit-1",
    "title": "Meet the toolkit",
    "section": "Course toolkit",
    "text": "Course toolkit\n\n\nCourse operation\n\nMaterials: sta199-f24.github.io\n\nSubmission: Gradescope\nDiscussion: Ed Discussion\nGradebook: Canvas\n\n\nDoing data science\n\nComputing:\n\nR\nRStudio\ntidyverse\nQuarto\n\n\nVersion control and collaboration:\n\nGit\nGitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#learning-goals",
    "href": "slides/01-meet-the-toolkit.html#learning-goals",
    "title": "Meet the toolkit",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to‚Ä¶\n\n\ngain insight from data\ngain insight from data, reproducibly\n\ngain insight from data, reproducibly, using modern programming tools and techniques\n\ngain insight from data, reproducibly and collaboratively, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control) and collaboratively, using modern programming tools and techniques"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#reproducibility-checklist",
    "href": "slides/01-meet-the-toolkit.html#reproducibility-checklist",
    "title": "Meet the toolkit",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be ‚Äúreproducible‚Äù?\n\n. . .\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\n. . .\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#toolkit-for-reproducibility",
    "href": "slides/01-meet-the-toolkit.html#toolkit-for-reproducibility",
    "title": "Meet the toolkit",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-and-rstudio-1",
    "href": "slides/01-meet-the-toolkit.html#r-and-rstudio-1",
    "title": "Meet the toolkit",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\nR is an open-source statistical programming language\n\nR is also an environment for statistical computing and graphics\nIt‚Äôs easily extensible with packages\n\n\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g.¬†‚ÄúI write R code in the RStudio IDE‚Äù\n\nRStudio is not a requirement for programming with R, but it‚Äôs very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-vs.-rstudio",
    "href": "slides/01-meet-the-toolkit.html#r-vs.-rstudio",
    "title": "Meet the toolkit",
    "section": "R vs.¬†RStudio",
    "text": "R vs.¬†RStudio\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-packages",
    "href": "slides/01-meet-the-toolkit.html#r-packages",
    "title": "Meet the toolkit",
    "section": "R packages",
    "text": "R packages\n\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of 27 August 2024, there are 21,168 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe‚Äôre going to work with a small (but important) subset of these!\n\n\n\n\n1 Wickham and Bryan, R Packages.\n2CRAN contributed packages."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-r-rstudio",
    "href": "slides/01-meet-the-toolkit.html#tour-r-rstudio",
    "title": "Meet the toolkit",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nGo to your container and launch RStudio."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-r-rstudio",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-r-rstudio",
    "title": "Meet the toolkit",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#packages",
    "href": "slides/01-meet-the-toolkit.html#packages",
    "title": "Meet the toolkit",
    "section": "Packages",
    "text": "Packages\n\nInstalled with install.packages(), once per system:\n\n\ninstall.packages(\"palmerpenguins\")\n\n\n\n\n\n\n\nNote\n\n\n\nWe already pre-installed many of the package you‚Äôll need for this course, so you might go the whole semester without needing to run install.packages()!\n\n\n. . .\n\nLoaded with library(), once per session:\n\n\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#packages-an-analogy",
    "href": "slides/01-meet-the-toolkit.html#packages-an-analogy",
    "title": "Meet the toolkit",
    "section": "Packages, an analogy",
    "text": "Packages, an analogy\nIf data analysis was cooking‚Ä¶\n\n\nInstalling a package would be like buying ingredients from the store\nLoading a package would be like getting the ingredients out of your pantry and setting them on your counter top to be used"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tidyverse",
    "href": "slides/01-meet-the-toolkit.html#tidyverse",
    "title": "Meet the toolkit",
    "section": "tidyverse",
    "text": "tidyverse\n\naka the package you‚Äôll hear about the most‚Ä¶\n\n\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#data-frames-and-variables",
    "href": "slides/01-meet-the-toolkit.html#data-frames-and-variables",
    "title": "Meet the toolkit",
    "section": "Data frames and variables",
    "text": "Data frames and variables\n\nEach row of a data frame is an observation\n\n\n. . .\n\nEach column of a data frame is a variable\n\n\n. . .\n\nColumns (variables) in data frames can be accessed with $:\n\n\ndataframe$variable_name"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#penguins-data-frame",
    "href": "slides/01-meet-the-toolkit.html#penguins-data-frame",
    "title": "Meet the toolkit",
    "section": "\npenguins data frame",
    "text": "penguins data frame"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#bill_length_mm",
    "href": "slides/01-meet-the-toolkit.html#bill_length_mm",
    "title": "Meet the toolkit",
    "section": "bill_length_mm",
    "text": "bill_length_mm"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#flipper_length_mm",
    "href": "slides/01-meet-the-toolkit.html#flipper_length_mm",
    "title": "Meet the toolkit",
    "section": "flipper_length_mm",
    "text": "flipper_length_mm\n\nFirst, run the code below and read the error. Then, fix the code to access the flipper_length_mm variable in the penguins data frame."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#functionargument",
    "href": "slides/01-meet-the-toolkit.html#functionargument",
    "title": "Meet the toolkit",
    "section": "function(argument)",
    "text": "function(argument)\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#trimmed-mean",
    "href": "slides/01-meet-the-toolkit.html#trimmed-mean",
    "title": "Meet the toolkit",
    "section": "\ntrimmed mean()\n",
    "text": "trimmed mean()"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#help",
    "href": "slides/01-meet-the-toolkit.html#help",
    "title": "Meet the toolkit",
    "section": "Help",
    "text": "Help\nObject documentation can be accessed with ?\n\n\n\n?mean\n\n\nVideo"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#a-pause-common-birthdays",
    "href": "slides/01-meet-the-toolkit.html#a-pause-common-birthdays",
    "title": "Meet the toolkit",
    "section": "A pause ‚Äì Common birthdays \n",
    "text": "A pause ‚Äì Common birthdays \n\n\nI cleaned up your data!\n\n. . .\n\nNo thanks to the people who responded ‚Äúyo‚Äù or ‚ÄúThe fifth day in the month of October!!‚Äù or ‚Äúmay twentieth‚Äù! ü§£\n\n. . .\n\n\nDates with more than one student with a birthday:\n\n\n\n# A tibble: 65 √ó 2\n   birthday     n\n   &lt;chr&gt;    &lt;int&gt;\n 1 04-05        4\n 2 04-15        4\n 3 05-20        4\n 4 06-18        4\n 5 10-25        4\n 6 01-24        3\n 7 03-15        3\n 8 03-29        3\n 9 04-19        3\n10 04-22        3\n11 05-15        3\n12 06-25        3\n13 07-26        3\n14 08-29        3\n15 09-11        3\n16 11-19        3\n17 12-20        3\n18 01-07        2\n19 01-08        2\n20 01-13        2\n21 01-20        2\n22 01-21        2\n23 01-23        2\n24 01-25        2\n25 01-27        2\n26 02-07        2\n27 02-18        2\n28 03-07        2\n29 03-14        2\n30 03-16        2\n31 03-22        2\n32 03-23        2\n33 03-28        2\n34 03-30        2\n35 04-06        2\n36 04-12        2\n37 05-01        2\n38 05-05        2\n39 05-11        2\n40 05-12        2\n41 05-28        2\n42 05-30        2\n43 06-02        2\n44 06-04        2\n45 06-28        2\n46 07-22        2\n47 08-09        2\n48 08-16        2\n49 09-04        2\n50 09-15        2\n51 09-17        2\n52 09-19        2\n53 09-28        2\n54 09-30        2\n55 10-12        2\n56 10-14        2\n57 10-28        2\n58 11-03        2\n59 11-06        2\n60 11-07        2\n61 11-14        2\n62 11-16        2\n63 11-17        2\n64 11-21        2\n65 12-03        2"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#git-and-github",
    "href": "slides/01-meet-the-toolkit.html#git-and-github",
    "title": "Meet the toolkit",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\nGit is a version control system ‚Äì like ‚ÄúTrack Changes‚Äù features from Microsoft Word, on steroids\nIt‚Äôs not the only version control system, but it‚Äôs a very popular one\n\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet ‚Äì like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#versioning---done-badly",
    "href": "slides/01-meet-the-toolkit.html#versioning---done-badly",
    "title": "Meet the toolkit",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#versioning---done-better",
    "href": "slides/01-meet-the-toolkit.html#versioning---done-better",
    "title": "Meet the toolkit",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#versioning---done-even-better",
    "href": "slides/01-meet-the-toolkit.html#versioning---done-even-better",
    "title": "Meet the toolkit",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\n\nwith human readable messages"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-1",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-1",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-2",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-2",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-3",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-3",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#git-and-github-tips",
    "href": "slides/01-meet-the-toolkit.html#git-and-github-tips",
    "title": "Meet the toolkit",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are millions of git commands ‚Äì ok, that‚Äôs an exaggeration, but there are a lot of them ‚Äì and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line ‚Äì skip that and move on to the next resource unless you feel comfortable trying it out.\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it‚Äôs a good place to look for help."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-git-github",
    "href": "slides/01-meet-the-toolkit.html#tour-git-github",
    "title": "Meet the toolkit",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\n\n\n\n\nNote\n\n\n\nYou‚Äôll need to stick to this option if you haven‚Äôt yet accepted your GitHub invite and don‚Äôt have a repo created for you.\n\n\n\n\nOption 2:\nGo to the course GitHub organization and clone ae-your_github_name repo to your container."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-git-github",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-git-github",
    "title": "Meet the toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\n\nFind your application repo, that will always be named using the naming convention assignment_title-your_github_name\nClick on the green ‚ÄúCode‚Äù button, make sure SSH is selected, copy the repo URL"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-git-github-1",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-git-github-1",
    "title": "Meet the toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\n\nIn RStudio, File &gt; New Project &gt; From Version Control &gt; Git\nPaste repo URL copied in previous step, then click tab to auto-fill the project name, then click Create Project\n\nFor one time only, type yes in the pop-up dialogue\n\n\nVideo"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#what-could-have-gone-wrong",
    "href": "slides/01-meet-the-toolkit.html#what-could-have-gone-wrong",
    "title": "Meet the toolkit",
    "section": "What could have gone wrong?",
    "text": "What could have gone wrong?\n\nNever received GitHub invite \\(\\rightarrow\\) Fill out ‚ÄúGetting to know you survey\nNever accepted GitHub invite \\(\\rightarrow\\) Look for it in your email and accept it\nCloning repo fails \\(\\rightarrow\\) Review/redo Lab 0 steps for setting up SSH key\nStill no luck? Come by my office today (Thursday, 8/29) between 4-5pm or post on Ed for help"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#quarto-1",
    "href": "slides/01-meet-the-toolkit.html#quarto-1",
    "title": "Meet the toolkit",
    "section": "Quarto",
    "text": "Quarto\n\n\nFully reproducible reports ‚Äì each time you render the analysis is ran from the beginning\nCode goes in chunks narrative goes outside of chunks\nA visual editor for a familiar / Google docs-like editing experience"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-quarto",
    "href": "slides/01-meet-the-toolkit.html#tour-quarto",
    "title": "Meet the toolkit",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\n\n\n\n\nNote\n\n\n\nIf you chose (or had to choose) this option for the previous tour, or if you couldn‚Äôt clone your repo for any reason, you‚Äôll need to stick to this option.\n\n\n\n\nOption 2:\nGo to RStudio and open the document ae-01-meet-the-penguins.qmd."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-quarto",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-quarto",
    "title": "Meet the toolkit",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-git-github-2",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-git-github-2",
    "title": "Meet the toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\nOnce we made changes to our Quarto document, we\n\nwent to the Git pane in RStudio\nstaged our changes by clicking the checkboxes next to the relevant files\ncommitted our changes with an informative commit message\npushed our changes to our application exercise repos\nconfirmed on GitHub that we could see our changes pushed from RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-quarto",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-quarto",
    "title": "Meet the toolkit",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery application exercise, lab, project, etc. is an Quarto document\nYou‚Äôll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#whats-with-all-the-hexes",
    "href": "slides/01-meet-the-toolkit.html#whats-with-all-the-hexes",
    "title": "Meet the toolkit",
    "section": "What‚Äôs with all the hexes?",
    "text": "What‚Äôs with all the hexes?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#we-have-hexes-too",
    "href": "slides/01-meet-the-toolkit.html#we-have-hexes-too",
    "title": "Meet the toolkit",
    "section": "We have hexes too!",
    "text": "We have hexes too!\n\nGrab one before you leave!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#announcements",
    "href": "slides/01-meet-the-toolkit-slides.html#announcements",
    "title": "Meet the toolkit",
    "section": "Announcements",
    "text": "Announcements\n\nIf you have not yet completed the Getting to know you survey, please do so asap!\nIf you have not yet accepted the invite to join the course GitHub Organization (I‚Äôm looking at 25 of you as of this morning!), please do so asap!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#additional-resource",
    "href": "slides/01-meet-the-toolkit-slides.html#additional-resource",
    "title": "Meet the toolkit",
    "section": "Additional resource",
    "text": "Additional resource\n\nPeer tutoring\nMore info at https://sta199-f24.github.io/course-support.html#peer-tutoring"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#five-tips-for-success",
    "href": "slides/01-meet-the-toolkit-slides.html#five-tips-for-success",
    "title": "Meet the toolkit",
    "section": "Five tips for success",
    "text": "Five tips for success\n\nComplete all the preparation work before class.\nAsk questions.\nDo the readings.\nDo the lab.\nDon‚Äôt procrastinate ‚Äì at least on a weekly basis!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#course-toolkit-1",
    "href": "slides/01-meet-the-toolkit-slides.html#course-toolkit-1",
    "title": "Meet the toolkit",
    "section": "Course toolkit",
    "text": "Course toolkit\n\n\nCourse operation\n\nMaterials: sta199-f24.github.io\n\nSubmission: Gradescope\nDiscussion: Ed Discussion\nGradebook: Canvas\n\n\nDoing data science\n\nComputing:\n\nR\nRStudio\ntidyverse\nQuarto\n\n\nVersion control and collaboration:\n\nGit\nGitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#learning-goals",
    "href": "slides/01-meet-the-toolkit-slides.html#learning-goals",
    "title": "Meet the toolkit",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to‚Ä¶\n\n\ngain insight from data\ngain insight from data, reproducibly\n\ngain insight from data, reproducibly, using modern programming tools and techniques\n\ngain insight from data, reproducibly and collaboratively, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control) and collaboratively, using modern programming tools and techniques"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#reproducibility-checklist",
    "href": "slides/01-meet-the-toolkit-slides.html#reproducibility-checklist",
    "title": "Meet the toolkit",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be ‚Äúreproducible‚Äù?\n\n\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\n\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#toolkit-for-reproducibility",
    "href": "slides/01-meet-the-toolkit-slides.html#toolkit-for-reproducibility",
    "title": "Meet the toolkit",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-and-rstudio-1",
    "href": "slides/01-meet-the-toolkit-slides.html#r-and-rstudio-1",
    "title": "Meet the toolkit",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\nR is an open-source statistical programming language\n\nR is also an environment for statistical computing and graphics\nIt‚Äôs easily extensible with packages\n\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g.¬†‚ÄúI write R code in the RStudio IDE‚Äù\n\nRStudio is not a requirement for programming with R, but it‚Äôs very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-vs.-rstudio",
    "href": "slides/01-meet-the-toolkit-slides.html#r-vs.-rstudio",
    "title": "Meet the toolkit",
    "section": "R vs.¬†RStudio",
    "text": "R vs.¬†RStudio\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-packages",
    "href": "slides/01-meet-the-toolkit-slides.html#r-packages",
    "title": "Meet the toolkit",
    "section": "R packages",
    "text": "R packages\n\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of 27 August 2024, there are 21,168 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe‚Äôre going to work with a small (but important) subset of these!\n\n\n\n\n1 Wickham and Bryan, R Packages.\n2CRAN contributed packages."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-r-rstudio",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-r-rstudio",
    "title": "Meet the toolkit",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nGo to your container and launch RStudio."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-r-rstudio",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-r-rstudio",
    "title": "Meet the toolkit",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#packages",
    "href": "slides/01-meet-the-toolkit-slides.html#packages",
    "title": "Meet the toolkit",
    "section": "Packages",
    "text": "Packages\n\nInstalled with install.packages(), once per system:\n\n\ninstall.packages(\"palmerpenguins\")\n\n\n\n\n\n\n\nNote\n\n\nWe already pre-installed many of the package you‚Äôll need for this course, so you might go the whole semester without needing to run install.packages()!\n\n\n\n\n\nLoaded with library(), once per session:\n\n\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#packages-an-analogy",
    "href": "slides/01-meet-the-toolkit-slides.html#packages-an-analogy",
    "title": "Meet the toolkit",
    "section": "Packages, an analogy",
    "text": "Packages, an analogy\nIf data analysis was cooking‚Ä¶\n\n\nInstalling a package would be like buying ingredients from the store\nLoading a package would be like getting the ingredients out of your pantry and setting them on your counter top to be used"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tidyverse",
    "href": "slides/01-meet-the-toolkit-slides.html#tidyverse",
    "title": "Meet the toolkit",
    "section": "tidyverse",
    "text": "tidyverse\n\naka the package you‚Äôll hear about the most‚Ä¶\n\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#data-frames-and-variables",
    "href": "slides/01-meet-the-toolkit-slides.html#data-frames-and-variables",
    "title": "Meet the toolkit",
    "section": "Data frames and variables",
    "text": "Data frames and variables\n\nEach row of a data frame is an observation\n\n\n\n\nEach column of a data frame is a variable\n\n\n\n\n\nColumns (variables) in data frames can be accessed with $:\n\n\ndataframe$variable_name"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#penguins-data-frame",
    "href": "slides/01-meet-the-toolkit-slides.html#penguins-data-frame",
    "title": "Meet the toolkit",
    "section": "\npenguins data frame",
    "text": "penguins data frame"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#bill_length_mm",
    "href": "slides/01-meet-the-toolkit-slides.html#bill_length_mm",
    "title": "Meet the toolkit",
    "section": "bill_length_mm",
    "text": "bill_length_mm"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#flipper_length_mm",
    "href": "slides/01-meet-the-toolkit-slides.html#flipper_length_mm",
    "title": "Meet the toolkit",
    "section": "flipper_length_mm",
    "text": "flipper_length_mm\n\nFirst, run the code below and read the error. Then, fix the code to access the flipper_length_mm variable in the penguins data frame."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#functionargument",
    "href": "slides/01-meet-the-toolkit-slides.html#functionargument",
    "title": "Meet the toolkit",
    "section": "function(argument)",
    "text": "function(argument)\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#trimmed-mean",
    "href": "slides/01-meet-the-toolkit-slides.html#trimmed-mean",
    "title": "Meet the toolkit",
    "section": "\ntrimmed mean()\n",
    "text": "trimmed mean()"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#help",
    "href": "slides/01-meet-the-toolkit-slides.html#help",
    "title": "Meet the toolkit",
    "section": "Help",
    "text": "Help\nObject documentation can be accessed with ?\n\n\n\n?mean\n\n\nVideo"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#a-pause-common-birthdays",
    "href": "slides/01-meet-the-toolkit-slides.html#a-pause-common-birthdays",
    "title": "Meet the toolkit",
    "section": "A pause ‚Äì Common birthdays \n",
    "text": "A pause ‚Äì Common birthdays \n\n\nI cleaned up your data!\n\n\n\nNo thanks to the people who responded ‚Äúyo‚Äù or ‚ÄúThe fifth day in the month of October!!‚Äù or ‚Äúmay twentieth‚Äù! ü§£\n\n\n\n\n\nDates with more than one student with a birthday:\n\n\n\n# A tibble: 65 √ó 2\n   birthday     n\n   &lt;chr&gt;    &lt;int&gt;\n 1 04-05        4\n 2 04-15        4\n 3 05-20        4\n 4 06-18        4\n 5 10-25        4\n 6 01-24        3\n 7 03-15        3\n 8 03-29        3\n 9 04-19        3\n10 04-22        3\n11 05-15        3\n12 06-25        3\n13 07-26        3\n14 08-29        3\n15 09-11        3\n16 11-19        3\n17 12-20        3\n18 01-07        2\n19 01-08        2\n20 01-13        2\n21 01-20        2\n22 01-21        2\n23 01-23        2\n24 01-25        2\n25 01-27        2\n26 02-07        2\n27 02-18        2\n28 03-07        2\n29 03-14        2\n30 03-16        2\n31 03-22        2\n32 03-23        2\n33 03-28        2\n34 03-30        2\n35 04-06        2\n36 04-12        2\n37 05-01        2\n38 05-05        2\n39 05-11        2\n40 05-12        2\n41 05-28        2\n42 05-30        2\n43 06-02        2\n44 06-04        2\n45 06-28        2\n46 07-22        2\n47 08-09        2\n48 08-16        2\n49 09-04        2\n50 09-15        2\n51 09-17        2\n52 09-19        2\n53 09-28        2\n54 09-30        2\n55 10-12        2\n56 10-14        2\n57 10-28        2\n58 11-03        2\n59 11-06        2\n60 11-07        2\n61 11-14        2\n62 11-16        2\n63 11-17        2\n64 11-21        2\n65 12-03        2"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#git-and-github",
    "href": "slides/01-meet-the-toolkit-slides.html#git-and-github",
    "title": "Meet the toolkit",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\nGit is a version control system ‚Äì like ‚ÄúTrack Changes‚Äù features from Microsoft Word, on steroids\nIt‚Äôs not the only version control system, but it‚Äôs a very popular one\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet ‚Äì like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#versioning---done-badly",
    "href": "slides/01-meet-the-toolkit-slides.html#versioning---done-badly",
    "title": "Meet the toolkit",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#versioning---done-better",
    "href": "slides/01-meet-the-toolkit-slides.html#versioning---done-better",
    "title": "Meet the toolkit",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#versioning---done-even-better",
    "href": "slides/01-meet-the-toolkit-slides.html#versioning---done-even-better",
    "title": "Meet the toolkit",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\n\nwith human readable messages"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-1",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-1",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-2",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-2",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-3",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-3",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#git-and-github-tips",
    "href": "slides/01-meet-the-toolkit-slides.html#git-and-github-tips",
    "title": "Meet the toolkit",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are millions of git commands ‚Äì ok, that‚Äôs an exaggeration, but there are a lot of them ‚Äì and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line ‚Äì skip that and move on to the next resource unless you feel comfortable trying it out.\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it‚Äôs a good place to look for help."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-git-github",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-git-github",
    "title": "Meet the toolkit",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\n\n\n\n\nNote\n\n\nYou‚Äôll need to stick to this option if you haven‚Äôt yet accepted your GitHub invite and don‚Äôt have a repo created for you.\n\n\n\n\n\nOption 2:\nGo to the course GitHub organization and clone ae-your_github_name repo to your container."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github",
    "title": "Meet the toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\n\nFind your application repo, that will always be named using the naming convention assignment_title-your_github_name\nClick on the green ‚ÄúCode‚Äù button, make sure SSH is selected, copy the repo URL"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github-1",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github-1",
    "title": "Meet the toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\n\nIn RStudio, File &gt; New Project &gt; From Version Control &gt; Git\nPaste repo URL copied in previous step, then click tab to auto-fill the project name, then click Create Project\n\nFor one time only, type yes in the pop-up dialogue\n\n\nVideo"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#what-could-have-gone-wrong",
    "href": "slides/01-meet-the-toolkit-slides.html#what-could-have-gone-wrong",
    "title": "Meet the toolkit",
    "section": "What could have gone wrong?",
    "text": "What could have gone wrong?\n\nNever received GitHub invite \\(\\rightarrow\\) Fill out ‚ÄúGetting to know you survey\nNever accepted GitHub invite \\(\\rightarrow\\) Look for it in your email and accept it\nCloning repo fails \\(\\rightarrow\\) Review/redo Lab 0 steps for setting up SSH key\nStill no luck? Come by my office today (Thursday, 8/29) between 4-5pm or post on Ed for help"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#quarto-1",
    "href": "slides/01-meet-the-toolkit-slides.html#quarto-1",
    "title": "Meet the toolkit",
    "section": "Quarto",
    "text": "Quarto\n\n\nFully reproducible reports ‚Äì each time you render the analysis is ran from the beginning\nCode goes in chunks narrative goes outside of chunks\nA visual editor for a familiar / Google docs-like editing experience"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-quarto",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-quarto",
    "title": "Meet the toolkit",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\n\n\n\n\nNote\n\n\nIf you chose (or had to choose) this option for the previous tour, or if you couldn‚Äôt clone your repo for any reason, you‚Äôll need to stick to this option.\n\n\n\n\n\nOption 2:\nGo to RStudio and open the document ae-01-meet-the-penguins.qmd."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-quarto",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-quarto",
    "title": "Meet the toolkit",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github-2",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github-2",
    "title": "Meet the toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\nOnce we made changes to our Quarto document, we\n\nwent to the Git pane in RStudio\nstaged our changes by clicking the checkboxes next to the relevant files\ncommitted our changes with an informative commit message\npushed our changes to our application exercise repos\nconfirmed on GitHub that we could see our changes pushed from RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-quarto",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-quarto",
    "title": "Meet the toolkit",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery application exercise, lab, project, etc. is an Quarto document\nYou‚Äôll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#whats-with-all-the-hexes",
    "href": "slides/01-meet-the-toolkit-slides.html#whats-with-all-the-hexes",
    "title": "Meet the toolkit",
    "section": "What‚Äôs with all the hexes?",
    "text": "What‚Äôs with all the hexes?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#we-have-hexes-too",
    "href": "slides/01-meet-the-toolkit-slides.html#we-have-hexes-too",
    "title": "Meet the toolkit",
    "section": "We have hexes too!",
    "text": "We have hexes too!\n\nGrab one before you leave!\n\n\n\n\n\n\n\n\nüîó sta199-f24.github.io"
  },
  {
    "objectID": "ae.html",
    "href": "ae.html",
    "title": "Application exercises",
    "section": "",
    "text": "All application exercises (AEs) are due by the end of lecture (or, precisely, by 2 pm) on the day they‚Äôre covered in lecture. To submit your AE, make at least one change to your AE, commit and then push your change to your AE repo. AEs are graded for engagement, not accuracy.\n\n\n\n\n\n\nTitle\n\n\nSubtitle\n\n\n\n\n\n\nAE 00: UN Votes\n\n\n¬†\n\n\n\n\nAE 01: Meet the penguins\n\n\n¬†\n\n\n\n\nAE 02: Bechdel + data visualization\n\n\nSuggested answers\n\n\n\n\nAE 02: Bechdel + data visualization\n\n\n¬†\n\n\n\n\nAE 03: Bechdel + data visualization and transformation\n\n\nSuggested answers\n\n\n\n\nAE 03: Bechdel + data visualization and transformation\n\n\n¬†\n\n\n\n\nAE 04: Gerrymandering + data exploration I\n\n\nSuggested answers\n\n\n\n\nAE 04: Gerrymandering + data exploration I\n\n\n¬†\n\n\n\n\nAE 05: Gerrymandering + data exploration II\n\n\nSuggested answers\n\n\n\n\nAE 05: Gerrymandering + data exploration II\n\n\n¬†\n\n\n\n\nAE 06: StatSci majors + data tidying\n\n\nSuggested answers\n\n\n\n\nAE 06: StatSci majors + data tidying\n\n\n¬†\n\n\n\n\nAE 07: Sales taxes + data joining\n\n\nSuggested answers\n\n\n\n\nAE 07: Sales taxes + data joining\n\n\n¬†\n\n\n\n\nAE 08: Durham climate + factors\n\n\nSuggested answers\n\n\n\n\nAE 08: Durham climate + factors\n\n\n¬†\n\n\n\n\nAE 09: Age gaps + sales + import\n\n\nSuggested answers\n\n\n\n\nAE 09: Age gaps + sales + import\n\n\n¬†\n\n\n\n\nAE 10: Opinion articles in The Chronicle\n\n\n¬†\n\n\n\n\n\nNo matching items\n\n\n\nMore AEs to be added as the semester progresses.",
    "crumbs": [
      "Application exercises"
    ]
  },
  {
    "objectID": "exam-review/midterm-review-A.html",
    "href": "exam-review/midterm-review-A.html",
    "title": "Midterm review",
    "section": "",
    "text": "To be posted."
  },
  {
    "objectID": "exam-review/midterm-review.html",
    "href": "exam-review/midterm-review.html",
    "title": "Midterm Review",
    "section": "",
    "text": "To be posted."
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "",
    "text": "By the end of the semester, you will‚Ä¶\n\nlearn to explore, visualize, and analyze data in a reproducible and shareable manner using R and RStudio\ngain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization\nwork on problems and case studies inspired by and based on real-world questions and data\nlearn to communicate results through written assignments and project presentation effectively",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-learning-objectives",
    "href": "course-syllabus.html#course-learning-objectives",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "",
    "text": "By the end of the semester, you will‚Ä¶\n\nlearn to explore, visualize, and analyze data in a reproducible and shareable manner using R and RStudio\ngain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization\nwork on problems and case studies inspired by and based on real-world questions and data\nlearn to communicate results through written assignments and project presentation effectively",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-materials",
    "href": "course-syllabus.html#course-materials",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Course materials",
    "text": "Course materials\n\nTextbooks\nAll books are freely available online.\n\nR for Data Science, 2e, Wickham, √áetinkaya-Rundel, Grolemund. O‚ÄôReilly, 2nd edition, 2023. Hard copy available on Amazon.\nIntroduction to Modern Statistics, √áetinkaya-Rundel, Hardin. OpenIntro Inc., 2nd Edition, 2023. Hard copy available on Amazon.\n\n\n\nComputing\nYou will need a laptop you can bring to lecture and lab for this course. We will use the statistical software R. Students will be able to access R through Docker containers provided by Duke Office of Information Technology. See the computing page for more information.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-community",
    "href": "course-syllabus.html#course-community",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Course community",
    "text": "Course community\n\nInclusive community\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students‚Äô learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength, and benefit. I intend to present materials and activities that respect diversity and align with Duke‚Äôs Commitment to Diversity and Inclusion. Your suggestions are encouraged and appreciated. Please let me know ways to improve the effectiveness of the course for you personally or for other students or student groups.\nFurthermore, I would like to create a learning environment for my students that supports a diversity of thoughts, perspectives, and experiences and honors their identities. To help accomplish this:\n\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don‚Äôt hesitate to come and talk with me. If you prefer to speak with someone outside of the course, your academic dean is an excellent resource.\nI (like many people) am still in the process of learning about diverse perspectives and identities. If anything was said in class (by anyone) that made you feel uncomfortable, please let me or a teaching team member know.\n\n\n\nPersonal pronouns\nPronouns are meaningful tools to communicate identities and experiences, and using pronouns supports a campus environment where all community members can thrive. You can update your gender pronouns in Duke Hub and learn more about personal pronouns at the Center for Sexual and Gender Diversity‚Äôs website.\n\n\nAccessibility\nIf any portion of the course is not accessible to you due to challenges with technology or the course format, please let me know so we can make appropriate accommodations.\nThe Student Disability Access Office (SDAO) is available to ensure that students can engage with their courses and related assignments. Students should contact the SDAO to request or update accommodations under these circumstances.\n\n\nCommunication\nAll lecture notes, assignment instructions, an up-to-date schedule, and other course materials may be found on the course website: sta199-f24.github.io.\nAnnouncements will periodically be emailed through Canvas Announcements. Please check your email regularly to ensure you have the latest announcements for the course.\n\n\nEmail\nIf you have questions about assignment extensions, accommodations, or any other matter not appropriate for the class discussion forum, please email me directly at mc301@duke.edu. If you do so, please include ‚ÄúSTA 199‚Äù in the subject line. Barring extenuating circumstances, I will respond to STA 199 emails within 48 hours, Monday through Friday. Response time may be slower for emails sent Friday evening through Sunday.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#five-tips-for-success",
    "href": "course-syllabus.html#five-tips-for-success",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Five tips for success",
    "text": "Five tips for success\nYour success in this course depends very much on you and the effort you put into it. The course has been organized so that the burden of learning is on you. Your TAs and I will help you by providing you with materials answering questions, and setting a pace, but for this to work, you must do the following:\n\nComplete all the preparation work before class.\nAsk questions. As often as you can. In class, out of class. Ask me, ask the TAs, ask your friends, ask the person sitting next to you. This will help you more than anything else. If you get a question wrong on an assessment, ask us why. If you‚Äôre not sure about the lab, ask. If you hear something on the news that sounds related to what we discussed, ask. If the reading is confusing, ask.\nDo the readings.\nDo the lab. The earlier you start, the better. It‚Äôs not enough to just mechanically plow through the exercises. You should ask yourself how these exercises relate to earlier material and imagine how they might be changed (to make questions for an exam, for example).\nDon‚Äôt procrastinate. The content builds upon what was taught in previous weeks, so if something is confusing to you in Week 2, Week 3 will become more confusing, Week 4 even worse, etc. Don‚Äôt let the week end with unanswered questions. But if you find yourself falling behind and not knowing where to begin asking, come to office hours and work with a member of the teaching team to help you identify a good (re)starting point.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#getting-help",
    "href": "course-syllabus.html#getting-help",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Getting help",
    "text": "Getting help\n\nIf you have a question during the lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking, you will create a learning opportunity for everyone.\nThe teaching team is here to help you be successful in the course. You are encouraged to attend office hours to ask questions about the course content and assignments. Many questions are most effectively answered as you discuss them with others, so office hours are a valuable resource. Please use them!\nOutside of class and office hours, any general questions about course content or assignments should be posted on the class discussion forum, Ed Discussion. There is a chance another student has already asked a similar question, so please check the other posts on the forum before adding a new question. If you know the answer to a question, I encourage you to respond!\n\nCheck out the Support tab for more resources.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-components",
    "href": "course-syllabus.html#course-components",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Course components",
    "text": "Course components\n\nLectures and labs\nLectures and labs are designed to be interactive, so you gain experience applying new concepts and learning from each other. My role as instructor is to introduce you to new methods, tools, and techniques, but it is up to you to take them and use them. A lot of what you do in this course will involve writing code, and coding is a skill that is best learned by doing. Therefore, as much as possible, you will work on various tasks and activities throughout each lecture and lab. You are expected to prepare for class by completing assigned readings, attending lectures and lab sessions, and meaningfully contributing to in-class exercises and discussions. Additionally, most lectures will feature application exercises that will be graded based on completing what we do in class.\nYou are expected to bring a laptop (or Chromebook) to each class so that you can participate in the in-class exercises. Please ensure your device is fully charged before you come to class, as the number of outlets in the classroom will not be sufficient to accommodate everyone. A tablet also works, but the user experience will be much smoother on a laptop.\n\n\nTeams\nYou will be assigned to a team early on in the semester. You are encouraged to sit with your teammates in lectures, and you will also work with them in some of the lab sessions. All team members are expected to contribute equally to the completion of the project, and you will be asked to evaluate your team members throughout the semester. Failure to adequately contribute to any project component will result in a penalty to your mark relative to the team‚Äôs overall mark.\nYou are expected to use the provided GitHub repository as the central collaborative platform. Commits to this repository will be used as a metric (one of several) of each team member‚Äôs relative contribution to each project.\n\n\nActivities & Assessment\nYou will be assessed based on five components: application exercises, labs, exams, project, and teamwork.\n\nLabs\nIn labs, you will apply what you‚Äôve learned in the videos and during lectures to complete data analysis tasks. You may discuss lab assignments with other students; however, the lab should be completed and submitted individually. Lab assignments must be typed up using Quarto, all work must be pushed to your GitHub repository for the lab, and the lab‚Äôs PDF output must be submitted on Gradescope by the deadline.\nLabs are due at 8:30 am ET on the indicated due date (generally the Monday after the lab).\nThe lowest lab grade will be dropped at the end of the semester.\n\n\nExams\nThis course will have two exams: a midterm and a final. The midterm will include an in-class component (with a cheat sheet) and an open-note take-home component, while the final will include only an in-class component (with a cheat sheet).\nYou can demonstrate what you‚Äôve learned in the course thus far through these exams. The exams will focus on both conceptual understanding of the content and application through analysis and computational tasks. The exam‚Äôs content will be related to the content in videos and reading assignments, lectures, application exercises, and labs.\nMore details about the exams will be given during the semester.\n\n\nProject\nThe project aims to apply what you‚Äôve learned throughout the semester to analyze an interesting data-driven research question. The project will be completed in teams, and each team will present their work in the last lab session of the semester. The write-up will be due on the same day.\nYou cannot pass this course if you have not completed the project.\nMore information about the project will be provided during the semester.\n\n\nApplication exercises\nParts of some lectures will be dedicated to working on Application Exercises (AEs). These exercises allow you to apply the statistical concepts and code introduced in the preparation materials. These AEs are due by 2 pm ET on the day of the lecture they are covered. To submit the AEs, you only need to push your work to your GitHub repo.\nBecause these AEs are for practice, they will be graded based on attempt, i.e., a good-faith effort has been made in attempting all parts.\nSuccessful on-time completion of at least 70% of AEs will result in full credit for AEs in the final course grade.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#grading",
    "href": "course-syllabus.html#grading",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Grading",
    "text": "Grading\nThe final course grade will be calculated as follows:\n\n\n\nCategory\nPercentage\n\n\n\n\nLabs\n35%\n\n\nProject\n20%\n\n\nMidterm\n20%\n\n\nFinal\n20%\n\n\nApplication Exercises\n5%\n\n\n\nWhile there are no specific points allocated to attendance, we will record your attendance periodically throughout the semester. This information will be used as ‚Äúextra credit‚Äù if you‚Äôre in between two grades and a minor bump would help.\nThe final letter grade will be determined based on the following thresholds:\n\n\n\nLetter Grade\nFinal Course Grade\n\n\n\n\nA\n&gt;= 93\n\n\nA-\n90 - 92.99\n\n\nB+\n87 - 89.99\n\n\nB\n83 - 86.99\n\n\nB-\n80 - 82.99\n\n\nC+\n77 - 79.99\n\n\nC\n73 - 76.99\n\n\nC-\n70 - 72.99\n\n\nD+\n67 - 69.99\n\n\nD\n63 - 66.99\n\n\nD-\n60 - 62.99\n\n\nF\n&lt; 60",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-policies",
    "href": "course-syllabus.html#course-policies",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Course policies",
    "text": "Course policies\n\nDuke Community Standard\nAs a student in this course, you have agreed to uphold the Duke Community Standard and the practices specific to this course.\n\n\n\n\nAcademic honesty\nTL;DR: Don‚Äôt cheat!\nPlease abide by the following as you work on assignments in this course:\n\nCollaboration: Only work that is clearly assigned as teamwork should be completed collaboratively.\n\nYou may discuss lab assignments with other students; however, you may not directly share (or copy) code or write-up with other students. For team assignments, you may collaborate freely within your team. You may discuss the assignment with other teams; however, you may not directly share (or copy) code or write-up with another team. Unauthorized sharing (or copying) of the code or write-up will be considered a violation for all students involved.\nYou may not discuss or otherwise work with others on the exams. Unauthorized collaboration or using unauthorized materials will be considered a violation for all students involved. More details will be given closer to the exam date.\nCollaboration within teams is not only allowed but expected for the project. Communication between teams at a high level is also allowed; however, you may not share code or project components across teams.\nOn individual assignments, you may not directly share work (including code) with another student in this class; on team assignments, you may not directly share work (including code) with another team.\n\nOnline resources: I am well aware that a huge volume of code is available on the web to solve any number of problems. Unless I explicitly tell you not to use something, the course‚Äôs policy is that you may make use of any online resources (e.g., StackOverflow), but you must explicitly cite where you obtained any code you directly use (or use as inspiration). Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism.\nUse of generative artificial intelligence (AI): You should treat generative AI, such as ChatGPT, like other online resources. Two guiding principles govern how to use AI in this course:\n\nCognitive dimension: Working with AI should not reduce your thinking ability. We will practice using AI to facilitate‚Äîrather than hinder‚Äîlearning.\nEthical dimension: Students using AI should be transparent about their use and ensure it aligns with academic integrity.\n\n\n AI tools for code: You may use the technology for coding examples on assignments; if you do so, you must explicitly cite where you obtained the code. Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism. You may use these guidelines to cite AI-generated content. The bare minimum citation must include the AI tool you‚Äôre using (e.g., ChatGPT) and your prompt. The prompt you use cannot be copied and pasted directly from the assignment; you must create a prompt yourself.\n AI tools for narrative: Unless instructed otherwise, you may not use generative AI to generate a narrative that you then copy-paste verbatim into an assignment or edit and then insert into your assignment.\n AI tools for learning: You‚Äôre welcomed to ask AI tools questions that might help your learning and understanding in this course.\n\nIn general, you may use generative AI as a resource as you complete assignments but not to answer the exercises for you. You are ultimately responsible for the work you turn in; it should reflect your understanding of the course content. Identifying AI-generated content is fairly straightforward. Any code identified as AI-generated but not cited as such and any narrative identified as AI-generated will be considered plagiarism and treated as such.\n\nIf you are unsure if using a particular resource complies with the academic honesty policy, please ask a teaching team member.\nRegardless of course delivery format, it is the responsibility of all students to understand and follow all Duke policies, including academic integrity (e.g., completing one‚Äôs own work, following proper citation of sources, adhering to guidance around group work projects, and more). Ignoring these requirements is a violation of the Duke Community Standard. Any questions and/or concerns regarding academic integrity can be directed to the Office of Student Conduct and Community Standards at conduct@duke.edu.\nAny violations in academic honesty standards as outlined in the Duke Community Standard and those specific to this course will\n\nautomatically results in a 0 for the relevant portion or the entire assignment,\ncan further impact your overall course grade, and\nwill be reported to the Office of Student Conduct & Community Standards for further action.\n\n\n\nLate work & extensions\nThe due dates for assignments are there to help you keep up with the course material and to ensure the teaching team can provide feedback in a timely manner. We understand that things come up periodically that could make it difficult to submit an assignment by the deadline. Note that the lowest lab assignment will be dropped to accommodate such circumstances.\n\nLabs may be submitted up to 3 days late. A 5% deduction will be applied for each 24-hour period during which the assignment is late.\nNo late work is accepted for application exercises since these are designed to help you prepare for other assessments in the course.\nNo late work is accepted for exams.\nNo late work is accepted for projects.\n\n\n\nWaiver for extenuating circumstances\nIf circumstances prevent you from completing a lab by the stated due date, you may email the course coordinator, Dr.¬†Mary Knox, before the deadline to waive the late penalty. In your email, you only need to request the waiver; you do not need to provide an explanation. This waiver may only be used once a semester, so only use it for a truly extenuating circumstance.\nIf circumstances have a longer-term impact on your academic performance, please let your academic dean know. They can be a resource. Please let me know if you need help contacting your academic dean.\n\n\nRegrade requests\nRegrade requests must be submitted on Gradescope within a week after an assignment is returned. Regrade requests will be considered if there was an error in the grade calculation or if a correct answer was mistakenly marked as incorrect. Requests to dispute the number of points deducted for an incorrect response will not be considered. Regrade requests are also not a mechanism for asking for clarification on feedback, those questions should be brought to office hours. Note that by submitting a regrade request, the entire assignment may be regraded, which could potentially result in losing points.\nNo grades will be changed after the final exam has been administered.\n\n\nAttendance policy\nEvery student is expected to attend and participate in lecture and labs. There may be times, however, when you cannot attend class. Lecture recordings are available upon request for students who have an excused absence. See the Lecture recording request policy for more detail. If you miss a lecture, make sure to review the material and complete the application exercise, if applicable, before the next lecture. Labs dedicated to completing the lab assignment and collaborating with your lab team. If you miss a lab session, make sure to communicate with your lab TA and teammates about how you can make up your contribution. If you know you‚Äôre going to miss a lab session and you‚Äôre feeling well enough to do so, notify your lab TA and teammates ahead of time.\nMore details on Trinity attendance policies are available here.\n\n\nLecture recording request\nLectures will be recorded on Panopto and will be made available to students with an excused absence upon request. Videos shared with such students will be available for a week after the lecture date. To request a particular lecture‚Äôs video, please fill out the form at the link below. Please submit the form within 24 hours of missing lecture to ensure you have sufficient time to watch the recording. Please also make sure that any official documentation, such as STINFs, Dean‚Äôs excuses, NOVAPs, and quarantine/removal from class notices from student health are also uploaded to the form.\nüîó https://forms.office.com/r/kJ6cWGE1Mp\nAbout one week before each exam, the class recordings will be available to all students. These recordings will be available until the start of the exam.\n\n\n\n\n\n\nClick here for syllabus bounty!\n\n\n\n\n\nIf you‚Äôve read this far in the syllabus, post a picture of your pet if you have one or your favorite meme on ed in this thread! If you‚Äôre willing, share the name of your pet too!",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#accommodations",
    "href": "course-syllabus.html#accommodations",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Accommodations",
    "text": "Accommodations\n\nAcademic accommodations\nIf you need accommodations for this class, you will need to register with the Student Disability Access Office (SDAO) and provide them with documentation related to your needs. SDAO will work with you to determine what accommodations are appropriate for your situation. Please note that accommodations are not retroactive and disability accommodations cannot be provided until a Faculty Accommodation Letter has been given to me. Please contact SDAO for more information: sdao@duke.edu or access.duke.edu.\n\n\nReligious accommodations\nStudents are permitted by university policy to be absent from class to observe a religious holiday. Accordingly, Trinity College of Arts & Sciences and the Pratt School of Engineering have established procedures to be followed by students for notifying their instructors of an absence necessitated by the observance of a religious holiday. Please submit requests for religious accommodations at the beginning of the semester so that we can work to make suitable arrangements well ahead of time. You can find the policy and relevant notification form here: trinity.duke.edu/undergraduate/academic-policies/religious-holidays",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#important-dates",
    "href": "course-syllabus.html#important-dates",
    "title": "STA 199 - Introduction to Data Science and Statistical Thinking",
    "section": "Important dates",
    "text": "Important dates\n\nAug 26: Classes begin\nSep 2: Labor Day\nSep 6: Drop/add ends\nOct 7: Project milestone 1 ‚Äì working collaboratively due\nOct 8: Midterm in-class + take-home released\nOct 11: Midterm take-home due\nOct 14-15: Fall break\nOct 28: Project milestone 2 ‚Äì proposals due\nNov 8: Last day to withdraw with W\nNov 25: Project milestone 3 ‚Äì peer review due\nNov 27-29: Thanksgiving break\nDec 6: Classes end\nDec 12: Final exam\n\nLab deadlines are listed on the course schedule.\nFor more important dates, see the full Duke Academic Calendar.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-faq.html",
    "href": "course-faq.html",
    "title": "FAQ",
    "section": "",
    "text": "Go to your Files tab, check the box next to the file you want to download, then click on the blue gear icon on the Files tab to reveal the drop down menu, and select Export‚Ä¶ If you have selected multiple files to export, RStudio will zip them up into a single zip file for you. If you‚Äôve selected just a single file, it will only download that. The downloaded file will go to wherever files you download off the internet goes on your computer (usually your Downloads folder).",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-faq.html#how-do-i-export-my-assignment-pdf-from-rstudio-to-upload-to-gradescope",
    "href": "course-faq.html#how-do-i-export-my-assignment-pdf-from-rstudio-to-upload-to-gradescope",
    "title": "FAQ",
    "section": "",
    "text": "Go to your Files tab, check the box next to the file you want to download, then click on the blue gear icon on the Files tab to reveal the drop down menu, and select Export‚Ä¶ If you have selected multiple files to export, RStudio will zip them up into a single zip file for you. If you‚Äôve selected just a single file, it will only download that. The downloaded file will go to wherever files you download off the internet goes on your computer (usually your Downloads folder).",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "href": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "title": "FAQ",
    "section": "How can I submit my assignment to Gradescope?",
    "text": "How can I submit my assignment to Gradescope?\nThe instructions for submitting your assignment to Gradescope can be found here. In a nutshell, you‚Äôll upload your PDF and them mark the page(s) where each question can be found. It‚Äôs OK if a question spans multiple pages, just mark them all. It‚Äôs also OK if a page includes multiple questions.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "href": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "title": "FAQ",
    "section": "Can I use a local install of R and RStudio instead of using the RStudio containers?",
    "text": "Can I use a local install of R and RStudio instead of using the RStudio containers?\nThe short answer is, I‚Äôd rather you didn‚Äôt, to save yourself some headache. But, the long answer is, sure! But you will need to install a specific versions of R and RStudio for everything to work as expected. You will also need to install the R packages we‚Äôre using as well as have Git installed on your computer. These are not extremely challenging things to get right, but they are not trivial either, particularly on certain operating systems. Myself and the TAs are always happy to provide help with any computational questions when you‚Äôre working in the containers we have provided for you. If you‚Äôre working on your local setup, we can‚Äôt guarantee being able to resolve your issues, though we‚Äôre happy to try.\nIf you want to take this path, here is what you need to do:\n\nDownload and install R 4.4.1: https://cran.r-project.org/\nDownload and install RStudio: https://posit.co/download/rstudio-desktop/\nInstall Quarto 1.5.56 or higher: https://quarto.org/docs/get-started/\nInstall Git: https://happygitwithr.com/install-git.html\nInstall any necessary packages with install.packages(\"___\")\n\nAnd I‚Äôd like to reiterate again that successful installation of these software is not a learning goal of this course. So if any of this seems tedious or intimidating in any way, just use the computing environment we have set up for you. More on that here.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "exam-review.html",
    "href": "exam-review.html",
    "title": "Exam reviews",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\n\n\n\n\nFinal review\n\n\nQuestions\n\n\n\n\nFinal review\n\n\nSuggested answers\n\n\n\n\nMidterm Review\n\n\nQuestions\n\n\n\n\nMidterm review\n\n\nSuggested answers\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Exam reviews"
    ]
  },
  {
    "objectID": "lab.html",
    "href": "lab.html",
    "title": "Labs",
    "section": "",
    "text": "More labs to be added as the semester progresses.\n\n\n\n\n\n\n\n\n\nNo.\n\n\nTitle\n\n\nDue date\n\n\n\n\n\n\nLab 0\n\n\nHello, World and STA 199!\n\n\nEnd of lab on Mon, Aug 26\n\n\n\n\nLab 1\n\n\nFrom the Midwest to North Carolina\n\n\nDue Mon, Sep 16 at 8:30 am\n\n\n\n\nLab 2\n\n\nRevisiting the Midwest\n\n\nDue Mon, Sep 23 at 8:30 am\n\n\n\n\nLab 3\n\n\nInflation everywhere\n\n\nDue Mon, Sep 30 at 8:30 am\n\n\n\n\nLab 4\n\n\nEverything so far I\n\n\nMon, Oct 7 at 8:30 am\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Labs"
    ]
  },
  {
    "objectID": "computing-access.html",
    "href": "computing-access.html",
    "title": "Computing access",
    "section": "",
    "text": "To access computing resources for the introductory data science courses offered by the Duke University Department of Statistical Science, go to the Duke Container Manager website, cmgr.oit.duke.edu/containers.\nIf this is your first time accessing the containers, click on reserve STA198-199 on the Reservations available menu on the right. You only need to do this once, and when you do, you‚Äôll see this container moved to the My reservations menu on the left.\nNext, click on STA198-199 under My reservations to access the RStudio instance you‚Äôll use for the course.",
    "crumbs": [
      "Computing",
      "Access"
    ]
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I.html",
    "href": "ae/ae-04-gerrymander-explore-I.html",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "",
    "text": "We‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\nlibrary(usdata)\n\n\nThe data are availale in the usdata package.\n\nglimpse(gerrymander)\n\nRows: 435\nColumns: 12\n$ district   &lt;chr&gt; \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-05\", \"AL-0‚Ä¶\n$ last_name  &lt;chr&gt; \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"Brooks\", \"‚Ä¶\n$ first_name &lt;chr&gt; \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo\", \"Gary\",‚Ä¶\n$ party16    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ clinton16  &lt;dbl&gt; 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 30.2, 41.7,‚Ä¶\n$ trump16    &lt;dbl&gt; 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 65.0, 52.4,‚Ä¶\n$ dem16      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ state      &lt;chr&gt; \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AR\", \"AR\",‚Ä¶\n$ party18    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ dem18      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ flip18     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,‚Ä¶\n$ gerry      &lt;fct&gt; mid, high, high, high, high, high, high, high, mid, mid, mi‚Ä¶"
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I.html#getting-started",
    "href": "ae/ae-04-gerrymander-explore-I.html#getting-started",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "",
    "text": "We‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\nlibrary(usdata)\n\n\nThe data are availale in the usdata package.\n\nglimpse(gerrymander)\n\nRows: 435\nColumns: 12\n$ district   &lt;chr&gt; \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-05\", \"AL-0‚Ä¶\n$ last_name  &lt;chr&gt; \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"Brooks\", \"‚Ä¶\n$ first_name &lt;chr&gt; \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo\", \"Gary\",‚Ä¶\n$ party16    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ clinton16  &lt;dbl&gt; 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 30.2, 41.7,‚Ä¶\n$ trump16    &lt;dbl&gt; 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 65.0, 52.4,‚Ä¶\n$ dem16      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ state      &lt;chr&gt; \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AR\", \"AR\",‚Ä¶\n$ party18    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ dem18      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ flip18     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,‚Ä¶\n$ gerry      &lt;fct&gt; mid, high, high, high, high, high, high, high, mid, mid, mi‚Ä¶"
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I.html#districts-at-the-tails",
    "href": "ae/ae-04-gerrymander-explore-I.html#districts-at-the-tails",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "Districts at the tails",
    "text": "Districts at the tails\nMake side-by-side box plots of percent of vote received by Trump in 2016 Presidential Election by prevalence of gerrymandering. Identify any Congressional Districts that are potential outliers. Are they different from the rest of the Congressional Districts due to high support or low support for Trump in the 2016 Presidential Election? Which state are they in? Which city are they in?\nAdd narrative here.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I.html#flips",
    "href": "ae/ae-04-gerrymander-explore-I.html#flips",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "Flips",
    "text": "Flips\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics. Hint: Calculate the conditional distribution of prevalance of gerrymandering based on whether a Democrat was able to flip the seat in the 2018 election.\nAdd narrative here.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I.html#submit",
    "href": "ae/ae-04-gerrymander-explore-I.html#submit",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "Submit",
    "text": "Submit\nRender, commit, and push:\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-09-age-gaps-sales-import.html",
    "href": "ae/ae-09-age-gaps-sales-import.html",
    "title": "AE 09: Age gaps + sales + import",
    "section": "",
    "text": "We will use the following two packages in this application exercise.\n\n\ntidyverse: For data import, wrangling, and visualization.\n\nreadxl: For importing data from Excel.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-09-age-gaps-sales-import.html#getting-started",
    "href": "ae/ae-09-age-gaps-sales-import.html#getting-started",
    "title": "AE 09: Age gaps + sales + import",
    "section": "",
    "text": "We will use the following two packages in this application exercise.\n\n\ntidyverse: For data import, wrangling, and visualization.\n\nreadxl: For importing data from Excel.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-09-age-gaps-sales-import.html#part-1-hollywood-relationships",
    "href": "ae/ae-09-age-gaps-sales-import.html#part-1-hollywood-relationships",
    "title": "AE 09: Age gaps + sales + import",
    "section": "Part 1: Hollywood relationships",
    "text": "Part 1: Hollywood relationships\nLoad the data from age-gaps.csv in your data and assign it to age_gaps. Confirm that this new object appears in your Environment tab. Click on the name of the object in your Environment tab to pop open the data in the data viewer.\n\n# add code here\n\nCreate a subset of the data frame for heterosexual relationships on screen.\n\n# add code here\n\nSplit the data for heterosexual relationships into three ‚Äì where woman is older, where man is older, where they are the same age. Save these subsets as two appropriately named data frames. Remember: Use concise and evocative names. Confirm that these new objects appear in your Environment tab and that the sum of the number of observations in the two new data frames add to the number of observations in the original data frame.\n\n# add code here\n\nWrite out the three new datasets you created into the data folder:\n\n# add code here"
  },
  {
    "objectID": "ae/ae-09-age-gaps-sales-import.html#part-2-sales",
    "href": "ae/ae-09-age-gaps-sales-import.html#part-2-sales",
    "title": "AE 09: Age gaps + sales + import",
    "section": "Part 2: Sales",
    "text": "Part 2: Sales\nSales data are stored in an Excel file that looks like the following:\n\nRead in the Excel file called sales.xlsx from the data folder such that it looks like the following.\n\n\n# add code here\n\nStretch goal: Manipulate the sales data such such that it looks like the following.\n\n\n# add code here\n\nWhy should we bother with writing code for reading the data in by skipping columns and assigning variable names as well as cleaning it up in multiple steps instead of opening the Excel file and editing the data in there to prepare it for a clean import?\nAdd response here."
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I-A.html",
    "href": "ae/ae-04-gerrymander-explore-I-A.html",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as a reference only; it‚Äôs not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I-A.html#getting-started",
    "href": "ae/ae-04-gerrymander-explore-I-A.html#getting-started",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\nlibrary(usdata)\n\nData\nThe data are availale in the usdata package.\n\nglimpse(gerrymander)\n\nRows: 435\nColumns: 12\n$ district   &lt;chr&gt; \"AK-AL\", \"AL-01\", \"AL-02\", \"AL-03\", \"AL-04\", \"AL-05\", \"AL-0‚Ä¶\n$ last_name  &lt;chr&gt; \"Young\", \"Byrne\", \"Roby\", \"Rogers\", \"Aderholt\", \"Brooks\", \"‚Ä¶\n$ first_name &lt;chr&gt; \"Don\", \"Bradley\", \"Martha\", \"Mike D.\", \"Rob\", \"Mo\", \"Gary\",‚Ä¶\n$ party16    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ clinton16  &lt;dbl&gt; 37.6, 34.1, 33.0, 32.3, 17.4, 31.3, 26.1, 69.8, 30.2, 41.7,‚Ä¶\n$ trump16    &lt;dbl&gt; 52.8, 63.5, 64.9, 65.3, 80.4, 64.7, 70.8, 28.6, 65.0, 52.4,‚Ä¶\n$ dem16      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ state      &lt;chr&gt; \"AK\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AR\", \"AR\",‚Ä¶\n$ party18    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"D\", \"R\", \"R\", \"R\", \"R\",‚Ä¶\n$ dem18      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,‚Ä¶\n$ flip18     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,‚Ä¶\n$ gerry      &lt;fct&gt; mid, high, high, high, high, high, high, high, mid, mid, mi‚Ä¶"
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I-A.html#districts-at-the-tails",
    "href": "ae/ae-04-gerrymander-explore-I-A.html#districts-at-the-tails",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "Districts at the tails",
    "text": "Districts at the tails\nMake side-by-side box plots of percent of vote received by Trump in 2016 Presidential Election by prevalence of gerrymandering. Identify any Congressional Districts that are potential outliers. Are they different from the rest of the Congressional Districts due to high support or low support for Trump in the 2016 Presidential Election? Which state are they in? Which city are they in?\n\nggplot(gerrymander, aes(x = trump16, y = gerry)) +\n  geom_boxplot()\n\n\n\n\n\n\ngerrymander |&gt;\n  filter(gerry == \"low\", trump16 &lt; 10)\n\n# A tibble: 2 √ó 12\n  district last_name first_name party16 clinton16 trump16 dem16 state party18\n  &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n1 NY-13    Espaillat Adriano    D            92.3     5.4     1 NY    D      \n2 NY-15    Serrano   Jose       D            93.8     4.9     1 NY    D      \n# ‚Ñπ 3 more variables: dem18 &lt;dbl&gt;, flip18 &lt;dbl&gt;, gerry &lt;fct&gt;"
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I-A.html#flips",
    "href": "ae/ae-04-gerrymander-explore-I-A.html#flips",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "Flips",
    "text": "Flips\nIs a Congressional District more likely to have high prevalence of gerrymandering if a Democrat was able to flip the seat in the 2018 election? Support your answer with a visualization as well as summary statistics. Hint: Calculate the conditional distribution of prevalance of gerrymandering based on whether a Democrat was able to flip the seat in the 2018 election.\n\nggplot(gerrymander, aes(x = flip18, fill = gerry)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\ngerrymander |&gt;\n  count(flip18, gerry) |&gt;\n  group_by(flip18) |&gt;\n  mutate(prop = n / sum(n))\n\n# A tibble: 8 √ó 4\n# Groups:   flip18 [3]\n  flip18 gerry     n  prop\n   &lt;dbl&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt;\n1     -1 low       2 0.4  \n2     -1 mid       3 0.6  \n3      0 low      52 0.133\n4      0 mid     242 0.617\n5      0 high     98 0.25 \n6      1 low       8 0.211\n7      1 mid      25 0.658\n8      1 high      5 0.132"
  },
  {
    "objectID": "ae/ae-04-gerrymander-explore-I-A.html#render-commit-and-push",
    "href": "ae/ae-04-gerrymander-explore-I-A.html#render-commit-and-push",
    "title": "AE 04: Gerrymandering + data exploration I",
    "section": "Render, commit, and push",
    "text": "Render, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-01-meet-the-penguins.html",
    "href": "ae/ae-01-meet-the-penguins.html",
    "title": "AE 01: Meet the penguins",
    "section": "",
    "text": "For this application exercise, we‚Äôll use the tidyverse and palmerpenguins packages.\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\n\nThe dataset we will visualize is called penguins. Let‚Äôs glimpse() at it.\n\n\nYour turn: Replace #add code here with the code for ‚Äúglimpse‚Äùing at the data penguins data frame ‚Äì glimpse(penguins). Render the document and view the output.\n\n\n# add code here\n\n\n\nDemo: First, replace the blank below with the number of rows in the penguins data frame based on the output of the chunk below. Then, replace it with ‚Äúinline code‚Äù and render again.\n\n\nnrow(penguins)\n\n[1] 344\n\n\nThere are ___ penguins in the penguins data frame."
  },
  {
    "objectID": "ae/ae-03-bechdel-data-viz-transform.html",
    "href": "ae/ae-03-bechdel-data-viz-transform.html",
    "title": "AE 03: Bechdel + data visualization and transformation",
    "section": "",
    "text": "In this mini-analysis, we‚Äôll continue our exploration of the bechdel dataset, which contains information on whether the movies in the data pass the Bechdel test (a measure of the representation of women in fiction)."
  },
  {
    "objectID": "ae/ae-03-bechdel-data-viz-transform.html#getting-started",
    "href": "ae/ae-03-bechdel-data-viz-transform.html#getting-started",
    "title": "AE 03: Bechdel + data visualization and transformation",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\n\nData\nThe data are stored as a CSV (comma-separated values) file in your repository‚Äôs data folder. Let‚Äôs read it from there and save it as an object called bechdel.\n\nbechdel &lt;- read_csv(\"data/bechdel.csv\")\n\nGet to know the data\nWe can use the glimpse() function to get an overview (or ‚Äúglimpse‚Äù) of the data.\n\n# add code here\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a movie.\n\nHow many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are 7 columns in the dataset."
  },
  {
    "objectID": "ae/ae-03-bechdel-data-viz-transform.html#bechdel-test-results",
    "href": "ae/ae-03-bechdel-data-viz-transform.html#bechdel-test-results",
    "title": "AE 03: Bechdel + data visualization and transformation",
    "section": "Bechdel test results",
    "text": "Bechdel test results\nVisualizing data with ggplot2\n\nCreate a bar plot of the clean_test variable:\n\n\nok = passes test\ndubious\n\nmen = women only talk about men\n\nnotalk = women don‚Äôt talk to each other\n\nnowomen = fewer than two women\n\n\n# add code here\n\nWhat types of movies are more common, those that pass or do not pass the test?\nAdd your response here.\nRender, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-03-bechdel-data-viz-transform.html#return-on-investment",
    "href": "ae/ae-03-bechdel-data-viz-transform.html#return-on-investment",
    "title": "AE 03: Bechdel + data visualization and transformation",
    "section": "Return-on-investment",
    "text": "Return-on-investment\nLet‚Äôs take a look at return-on-investment (ROI) for movies that do and do not pass the Bechdel test.\nStep 1 - Your turn\nCreate side-by-side box plots of roi by clean_test where the boxes are colored by binary.\n\n# add code here\n\nStep 2 - Demo\nWhat are the movies with very high returns on investment?\n\n# add code here\n\nStep 3 - Demo\nExpand on your plot from the previous step to zoom in on movies with roi &lt; ___ to get a better view of how the medians across the categories compare.\n\n# add code here\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?\nAdd your response here.\nRender, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-00-unvotes.html",
    "href": "ae/ae-00-unvotes.html",
    "title": "AE 00: UN Votes",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\nWe will use the tidyverse, lubridate, and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\n\n\n\n\n\n\n\n\nThe data we‚Äôre using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis."
  },
  {
    "objectID": "ae/ae-00-unvotes.html#introduction",
    "href": "ae/ae-00-unvotes.html#introduction",
    "title": "AE 00: UN Votes",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\nWe will use the tidyverse, lubridate, and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\n\n\n\n\n\n\n\n\nThe data we‚Äôre using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis."
  },
  {
    "objectID": "ae/ae-00-unvotes.html#un-voting-patterns",
    "href": "ae/ae-00-unvotes.html#un-voting-patterns",
    "title": "AE 00: UN Votes",
    "section": "UN voting patterns",
    "text": "UN voting patterns\nLet‚Äôs create a data visualisation that displays how the voting record of the United States, United Kingdom, and Turkey changed over time.\n\n\n\n\n\n\n\n\n\nTask: Write your first piece of (R) code!\n\nModify the code cell above to change the plot to include a different country in place of Turkey. Note that the country name should be spelled and capitalized exactly the same way as it appears in the data. See the Appendix for a list of the countries in the data."
  },
  {
    "objectID": "ae/ae-00-unvotes.html#references",
    "href": "ae/ae-00-unvotes.html#references",
    "title": "AE 00: UN Votes",
    "section": "References",
    "text": "References\n\nRobinson D (2021). unvotes: United Nations General Assembly Voting Data. R package version 0.3.0, https://github.com/dgrtwo/unvotes.\nErik Voeten ‚ÄúData and Analyses of Voting in the UN General Assembly‚Äù Routledge Handbook of International Organization, edited by Bob Reinalda (published May 27, 2013).\nMuch of the analysis has been modeled on the examples presented in the unvotes package vignette."
  },
  {
    "objectID": "ae/ae-00-unvotes.html#appendix",
    "href": "ae/ae-00-unvotes.html#appendix",
    "title": "AE 00: UN Votes",
    "section": "Appendix",
    "text": "Appendix\nBelow is a list of countries in the dataset:"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html",
    "href": "ae/ae-02-bechdel-dataviz.html",
    "title": "AE 02: Bechdel + data visualization",
    "section": "",
    "text": "In this mini-analysis, we use the data from the FiveThirtyEight story ‚ÄúThe Dollar-And-Cents Case Against Hollywood‚Äôs Exclusion of Women.‚Äù\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html#getting-started",
    "href": "ae/ae-02-bechdel-dataviz.html#getting-started",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe‚Äôll use the tidyverse package for this analysis.\n\nlibrary(tidyverse)\n\nData\nThe data are stored as a CSV (comma-separated values) file in your repository‚Äôs data folder. Let‚Äôs read it from there and save it as an object called bechdel.\n\nbechdel &lt;- read_csv(\"data/bechdel.csv\")\n\nGet to know the data\nWe can use the glimpse() function to get an overview (or ‚Äúglimpse‚Äù) of the data.\n\n# add code here\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a ___.\n\nHow many observations (rows) are in the data set?\n\nThere are ___ movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are ___ columns in the dataset.\nVariables of interest\nThe variables we‚Äôll focus on are the following:\n\n\nroi: Return on investment, calculated as the ratio of the gross to budget.\n\nclean_test: Bechdel test result:\n\n\nok = passes test\ndubious\n\nmen = women only talk about men\n\nnotalk = women don‚Äôt talk to each other\n\nnowomen = fewer than two women\n\n\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nWe will also use the year of release in data prep and title of movie to take a deeper look at some outliers.\nThere are a few other variables in the dataset, but we won‚Äôt be using them in this analysis."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html#bechdel-test-results",
    "href": "ae/ae-02-bechdel-dataviz.html#bechdel-test-results",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Bechdel test results",
    "text": "Bechdel test results\nVisualizing data with ggplot2\n\nggplot2 is the package and ggplot() is the function in this package that is used to create a plot.\n\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel.\n\n\nggplot(data = bechdel)\n\n\n\n\n\n\n\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\nggplot(data = bechdel, mapping = aes(x = clean_test))\n\n\n\n\n\n\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you‚Äôll often see this written as:\n\nggplot(bechdel, aes(x = clean_test))\n\n\n\n\n\n\n\nNote that the result is exactly the same.\n\nThe geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we use geom_point which creates a plot where each observation is represented by a point.\n\n\nggplot(bechdel, aes(x = clean_test)) +\n  geom_bar()\n\n\n\n\n\n\n\nWhat types of movies are more common, those that pass or do not pass the test?\nRender, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html#return-on-investment",
    "href": "ae/ae-02-bechdel-dataviz.html#return-on-investment",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Return-on-investment",
    "text": "Return-on-investment\nLet‚Äôs take a look at return-on-investment (ROI) for movies that do and do not pass the Bechdel test.\nStep 1 - Your turn\nCreate side-by-side box plots of roi by clean_test where the boxes are colored by binary.\n\n# add code here\n\nWhat are those movies with very high returns on investment?\n\nbechdel |&gt;\n  filter(roi &gt; 400) |&gt;\n  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n# A tibble: 3 √ó 6\n  title                     roi budget_2013 gross_2013  year clean_test\n  &lt;chr&gt;                   &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 Paranormal Activity      671.      505595  339424558  2007 dubious   \n2 The Blair Witch Project  648.      839077  543776715  1999 ok        \n3 El Mariachi              583.       11622    6778946  1992 nowomen   \n\n\nStep 2 - Demo\nExpand on your plot from the previous step to zoom in on movies with roi &lt; ___ to get a better view of how the medians across the categories compare.\n\n# add code here\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?\nRender, commit, and push\n\nRender your Quarto document.\nGo to the Git pane and check the box next to each file listed, i.e., stage your changes. Commit your staged changes using a simple and informative message.\nClick on push (the green arrow) to push your changes to your application exercise repo on GitHub.\nGo to your repo on GitHub and confirm that you can see the updated files. Once your updated files are in your repo on GitHub, you‚Äôre good to go!"
  },
  {
    "objectID": "ae/ae-09-age-gaps-sales-import-A.html",
    "href": "ae/ae-09-age-gaps-sales-import-A.html",
    "title": "AE 09: Age gaps + sales + import",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as a reference only; it‚Äôs not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-09-age-gaps-sales-import-A.html#getting-started",
    "href": "ae/ae-09-age-gaps-sales-import-A.html#getting-started",
    "title": "AE 09: Age gaps + sales + import",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe will use the following two packages in this application exercise.\n\n\ntidyverse: For data import, wrangling, and visualization.\n\nreadxl: For importing data from Excel.\n\n\nlibrary(tidyverse)\nlibrary(readxl)"
  },
  {
    "objectID": "ae/ae-09-age-gaps-sales-import-A.html#part-1-hollywood-relationships",
    "href": "ae/ae-09-age-gaps-sales-import-A.html#part-1-hollywood-relationships",
    "title": "AE 09: Age gaps + sales + import",
    "section": "Part 1: Hollywood relationships",
    "text": "Part 1: Hollywood relationships\nLoad the data from age-gaps.csv in your data and assign it to age_gaps. Confirm that this new object appears in your Environment tab. Click on the name of the object in your Environment tab to pop open the data in the data viewer.\n\nage_gaps &lt;- read_csv(\"data/age-gaps.csv\")\n\nRows: 1155 Columns: 13\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr  (6): movie_name, director, actor_1_name, actor_2_name, character_1_gend...\ndbl  (5): release_year, age_difference, couple_number, actor_1_age, actor_2_age\ndate (2): actor_1_birthdate, actor_2_birthdate\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCreate a subset of the data frame for heterosexual relationships on screen.\n\nage_gaps_heterosexual &lt;- age_gaps |&gt;\n  filter(character_1_gender != character_2_gender)\n\nSplit the data for heterosexual relationships into three ‚Äì where woman is older, where man is older, where they are the same age. Save these subsets as two appropriately named data frames. Remember: Use concise and evocative names. Confirm that these new objects appear in your Environment tab and that the sum of the number of observations in the two new data frames add to the number of observations in the original data frame.\n\nage_gaps_heterosexual &lt;- age_gaps_heterosexual |&gt;\n  mutate(\n    older = case_when(\n      character_1_gender == \"woman\" & actor_1_age &gt; actor_2_age ~ \"woman older\",\n      character_2_gender == \"woman\" & actor_2_age &gt; actor_1_age ~ \"woman older\",\n      character_1_gender == \"man\"   & actor_1_age &gt; actor_2_age ~ \"man older\",\n      character_2_gender == \"man\"   & actor_2_age &gt; actor_1_age ~ \"man older\",\n      actor_1_age == actor_2_age ~ \"same age\"\n    )\n  )\n\nwoman_older &lt;- age_gaps_heterosexual |&gt; filter(older == \"woman older\")\nman_older   &lt;- age_gaps_heterosexual |&gt; filter(older == \"man older\")\nsame_age    &lt;- age_gaps_heterosexual |&gt; filter(older == \"same age\")\n\n(nrow(woman_older) + nrow(man_older) + nrow(same_age)) == nrow(age_gaps_heterosexual)\n\n[1] TRUE\n\n\nWrite out the three new datasets you created into the data folder:\n\nwrite_csv(woman_older, file = \"data/woman-older.csv\")\nwrite_csv(man_older, file = \"data/man-older.csv\")\nwrite_csv(same_age, file = \"data/same-age.csv\")"
  },
  {
    "objectID": "ae/ae-09-age-gaps-sales-import-A.html#part-2-sales",
    "href": "ae/ae-09-age-gaps-sales-import-A.html#part-2-sales",
    "title": "AE 09: Age gaps + sales + import",
    "section": "Part 2: Sales",
    "text": "Part 2: Sales\nSales data are stored in an Excel file that looks like the following:\n\nRead in the Excel file called sales.xlsx from the data-raw/ folder such that it looks like the following.\n\n\nsales_raw &lt;- read_excel(\n  \"data/sales.xlsx\", \n  skip = 3,\n  col_names = c(\"id\", \"n\")\n  )\n\nStretch goal: Manipulate the sales data such such that it looks like the following.\n\n\nsales &lt;- sales_raw |&gt;\n  mutate(\n    is_brand_name = str_detect(id, \"Brand\"),\n    brand = if_else(is_brand_name, id, NA)\n  ) |&gt;\n  fill(brand) |&gt;\n  filter(!is_brand_name) |&gt;\n  select(brand, id, n)\n\nsales\n\n# A tibble: 7 √ó 3\n  brand   id    n    \n  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;\n1 Brand 1 1234  8    \n2 Brand 1 8721  2    \n3 Brand 1 1822  3    \n4 Brand 2 3333  1    \n5 Brand 2 2156  3    \n6 Brand 2 3987  6    \n7 Brand 2 3216  5    \n\n\nWhy should we bother with writing code for reading the data in by skipping columns and assigning variable names as well as cleaning it up in multiple steps instead of opening the Excel file and editing the data in there to prepare it for a clean import?\nBecause the code allows us to struggle once and re-use for future datasets and leaves a transparent trail of our modifications while manipulating the data in Excel directly is neither reproducible nor reusable."
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors-A.html",
    "href": "ae/ae-08-durham-climate-factors-A.html",
    "title": "AE 08: Durham climate + factors",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as a reference only; it‚Äôs not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors-A.html#getting-started",
    "href": "ae/ae-08-durham-climate-factors-A.html#getting-started",
    "title": "AE 08: Durham climate + factors",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe will use the tidyverse package in this application exercise.\n\nlibrary(tidyverse)\n\nData\nThe data come from https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192 and are stored as durham-climate.csv in the data folder.\n\ndurham_climate &lt;- read_csv(\"data/durham-climate.csv\")\n\nAnd let‚Äôs take a look at the data.\n\ndurham_climate\n\n# A tibble: 12 √ó 4\n   month     avg_high_f avg_low_f precipitation_in\n   &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;            &lt;dbl&gt;\n 1 January           49        28             4.45\n 2 February          53        29             3.7 \n 3 March             62        37             4.69\n 4 April             71        46             3.43\n 5 May               79        56             4.61\n 6 June              85        65             4.02\n 7 July              89        70             3.94\n 8 August            87        68             4.37\n 9 September         81        60             4.37\n10 October           71        47             3.7 \n11 November          62        37             3.39\n12 December          53        30             3.43"
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors-A.html#reorder",
    "href": "ae/ae-08-durham-climate-factors-A.html#reorder",
    "title": "AE 08: Durham climate + factors",
    "section": "Reorder",
    "text": "Reorder\nWhat‚Äôs wrong with the following plot?\nMonths are out of order.\n\nggplot(\n  durham_climate, \n  aes(x = month, y = avg_high_f, group = 1)\n  ) +\n  geom_line() +\n  geom_point(\n    shape = \"circle filled\", size = 2,\n    color = \"black\", fill = \"white\", stroke = 1\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average high temperature (F)\",\n    title = \"Durham climate\"\n  )\n\n\n\n\n\n\n\nFix the plot.\n\ndurham_climate &lt;- durham_climate |&gt;\n  mutate(month = fct_relevel(month, month.name))\n\nggplot(\n  durham_climate,\n  aes(x = month, y = avg_high_f, group = 1)\n  ) +\n  geom_line() +\n  geom_point(\n    shape = \"circle filled\", size = 2,\n    color = \"black\", fill = \"white\", stroke = 1\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average high temperature (F)\",\n    title = \"Durham climate\"\n  )"
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors-A.html#recode-and-reorder",
    "href": "ae/ae-08-durham-climate-factors-A.html#recode-and-reorder",
    "title": "AE 08: Durham climate + factors",
    "section": "Recode and reorder",
    "text": "Recode and reorder\nUpdate the plot above, coloring points based on season. Additionally:\n\nMake sure the legend is on top of the plot and the seasons appear in the legend in the order they appear in the plot (Winter, Spring, Summer, Fall).\n\nUse \"circle filled\" as the shape for points, set their size to 3 points, outline (stroke) to 1 point, and fill them in with the following colors:\n\nWinter: lightskyblue1\n\nSpring: chartreuse3\n\nSummer: gold2\n\nFall: lightsalmon4\n\n\n\n\n\ndurham_climate &lt;- durham_climate |&gt;\n  mutate(\n    season = case_when(\n      month %in% c(\"December\", \"January\", \"February\") ~ \"Winter\",\n      month %in% c(\"March\", \"April\", \"May\") ~ \"Spring\",\n      month %in% c(\"June\", \"July\", \"August\") ~ \"Summer\",\n      month %in% c(\"September\", \"October\", \"November\") ~ \"Fall\",\n    ),\n    season = fct_relevel(season, \"Winter\", \"Spring\", \"Summer\", \"Fall\")\n  )\n\nggplot(\n  durham_climate,\n  aes(x = month, y = avg_high_f, group = 1)\n  ) +\n  geom_line() +\n  geom_point(\n    aes(fill = season),\n    shape = \"circle filled\", size = 3, stroke = 1\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Winter\" = \"lightskyblue1\",\n      \"Spring\" = \"chartreuse3\",\n      \"Summer\" = \"gold2\",\n      \"Fall\" = \"lightsalmon4\"\n    )\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average high temperature (F)\",\n    title = \"Durham climate\",\n    fill = \"Season\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "ae/ae-08-durham-climate-factors-A.html#pivot",
    "href": "ae/ae-08-durham-climate-factors-A.html#pivot",
    "title": "AE 08: Durham climate + factors",
    "section": "Pivot",
    "text": "Pivot\nOverlay lines for both high and low temperatures on the same plot. Additionally, use different colors for the two lines ‚Äì a darker color for high and a lighter color for low temperatures.\n\ndurham_climate |&gt;\n  pivot_longer(\n    cols = c(avg_high_f, avg_low_f),\n    names_to = \"temp_type\",\n    names_prefix = \"avg_\",\n    values_to = \"avg_temp_f\"\n  ) |&gt;\n  mutate(temp_type = str_remove(temp_type, \"_f\")) |&gt;\n  ggplot(aes(x = month, y = avg_temp_f, group = temp_type, color = temp_type)) +\n  geom_line() +\n  geom_point(\n    aes(fill = season),\n    shape = \"circle filled\", size = 3, stroke = 1\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Winter\" = \"lightskyblue1\",\n      \"Spring\" = \"chartreuse3\",\n      \"Summer\" = \"gold2\",\n      \"Fall\" = \"lightsalmon4\"\n    )\n  ) +\n  scale_color_manual(\n    values = c(\n      \"high\" = \"gray20\",\n      \"low\" = \"gray70\"\n    )\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average temperature (F)\",\n    title = \"Durham climate\",\n    fill = \"Season\",\n    color = \"Type\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "project/5-writeup-presentation.html",
    "href": "project/5-writeup-presentation.html",
    "title": "Write-up and presentation",
    "section": "",
    "text": "Your written report must be completed in the index.qmd file and must be reproducible. All team members should contribute to the GitHub repository, with regular meaningful commits.\nBefore you finalize your write up, make sure the printing of code chunks is off with the option echo: false in the YAML.\nThe mandatory components of the report are below. You are free to add additional sections as necessary. The report, including visualizations, should be no more than 10 pages long (if it were to be printed). There is no minimum page requirement; however, you should comprehensively address all of the analysis in your report.\nTo check how many pages your report is, open it in your browser and go to File &gt; Print &gt; Save as PDF and review the number of pages.\nBe selective in what you include in your final write-up. The goal is to write a cohesive narrative that demonstrates a thorough and comprehensive analysis rather than explain every step of the analysis.\nYou are welcome to include an appendix with additional work at the end of the written report document; however, grading will largely be based on the content in the main body of the report. You should assume the reader will not see the material in the appendix unless prompted to view it in the main body of the report. The appendix should be neatly formatted and easy for the reader to navigate. It is not included in the 10-page limit.\n\n\n\n\n\nThis section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won‚Äôt fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.\n\n\nThe research question and motivation are clearly stated in the introduction, including citations for the data source and any external research. The data are clearly described, including a description about how the data were originally collected and a concise definition of the variables relevant to understanding the report. The data cleaning process is clearly described, including any decisions made in the process (e.g., creating new variables, removing observations, etc.) The exploratory data analysis helps the reader better understand the observations in the data along with interesting and relevant relationships between the variables. It incorporates appropriate visualizations and summary statistics.\n\n\n\n\nThis section includes a brief description of your analysis process. Explain the reasoning for the types of analyses you do, exploratory, inferential, or modeling. If you‚Äôve chosen to do inference, make sure to include a justification for why that inferential approach is appropriate. If you‚Äôve chosen to do modeling, describe the model(s) you‚Äôre fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, interactions considered, variable transformations (if needed), assessment of conditions and diagnostics, and any other relevant considerations that were part of the model fitting process.\n\n\nThe analysis steps are appropriate for the data and research question. The group used a thorough and careful approach to determine analyses types and addressed any concerns over appropriateness of analyses chosen.\n\n\n\n\nThis is where you will discuss your overall finding and describe the key results from your analysis. The goal is not to interpret every single element of an output shown, but instead to address the research questions, using the interpretations to support your conclusions. Focus on the variables that help you answer the research question and that provide relevant context for the reader.\n\n\nThe analysis results are clearly assesses and interesting findings from the analysis are described. Interpretations are used to to support the key findings and conclusions, rather than merely listing, e.g., the interpretation of every model coefficient.\n\n\n\n\nIn this section you‚Äôll include a summary of what you have learned about your research question along with statistical arguments supporting your conclusions. In addition, discuss the limitations of your analysis and provide suggestions on ways the analysis could be improved. Any potential issues pertaining to the reliability and validity of your data and appropriateness of the statistical analysis should also be discussed here. Lastly, this section will include ideas for future work.\n\n\nOverall conclusions from analysis are clearly described, and the analysis results are put into the larger context of the subject matter and original research question. There is thoughtful consideration of potential limitations of the data and/or analysis, and ideas for future work are clearly described.\n\n\n\n\nThis is an assessment of the overall presentation and formatting of the written report.\n\n\nThe report neatly written and organized with clear section headers and appropriately sized figures with informative labels. Numerical results are displayed with a reasonable number of digits, and all visualizations are neatly formatted. All citations and links are properly formatted. If there is an appendix, it is reasonably organized and easy for the reader to find relevant information. All code, warnings, and messages are suppressed. The main body of the written report (not including the appendix) is no longer than 10 pages.\n\n\n\n\n\nThe write-up is worth 35 points, broken down as follows:\n\n\n\nTotal\n35 pts\n\n\n\n\nIntroduction/data\n4 pts\n\n\nMethodology\n10 pts\n\n\nResults\n15 pts\n\n\nDiscussion\n3 pts\n\n\nOrganization + formatting\n3 pts",
    "crumbs": [
      "Project",
      "Milestone 5"
    ]
  },
  {
    "objectID": "project/5-writeup-presentation.html#expectations",
    "href": "project/5-writeup-presentation.html#expectations",
    "title": "Write-up and presentation",
    "section": "",
    "text": "Your written report must be completed in the index.qmd file and must be reproducible. All team members should contribute to the GitHub repository, with regular meaningful commits.\nBefore you finalize your write up, make sure the printing of code chunks is off with the option echo: false in the YAML.\nThe mandatory components of the report are below. You are free to add additional sections as necessary. The report, including visualizations, should be no more than 10 pages long (if it were to be printed). There is no minimum page requirement; however, you should comprehensively address all of the analysis in your report.\nTo check how many pages your report is, open it in your browser and go to File &gt; Print &gt; Save as PDF and review the number of pages.\nBe selective in what you include in your final write-up. The goal is to write a cohesive narrative that demonstrates a thorough and comprehensive analysis rather than explain every step of the analysis.\nYou are welcome to include an appendix with additional work at the end of the written report document; however, grading will largely be based on the content in the main body of the report. You should assume the reader will not see the material in the appendix unless prompted to view it in the main body of the report. The appendix should be neatly formatted and easy for the reader to navigate. It is not included in the 10-page limit.",
    "crumbs": [
      "Project",
      "Milestone 5"
    ]
  },
  {
    "objectID": "project/5-writeup-presentation.html#components",
    "href": "project/5-writeup-presentation.html#components",
    "title": "Write-up and presentation",
    "section": "",
    "text": "This section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won‚Äôt fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.\n\n\nThe research question and motivation are clearly stated in the introduction, including citations for the data source and any external research. The data are clearly described, including a description about how the data were originally collected and a concise definition of the variables relevant to understanding the report. The data cleaning process is clearly described, including any decisions made in the process (e.g., creating new variables, removing observations, etc.) The exploratory data analysis helps the reader better understand the observations in the data along with interesting and relevant relationships between the variables. It incorporates appropriate visualizations and summary statistics.\n\n\n\n\nThis section includes a brief description of your analysis process. Explain the reasoning for the types of analyses you do, exploratory, inferential, or modeling. If you‚Äôve chosen to do inference, make sure to include a justification for why that inferential approach is appropriate. If you‚Äôve chosen to do modeling, describe the model(s) you‚Äôre fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, interactions considered, variable transformations (if needed), assessment of conditions and diagnostics, and any other relevant considerations that were part of the model fitting process.\n\n\nThe analysis steps are appropriate for the data and research question. The group used a thorough and careful approach to determine analyses types and addressed any concerns over appropriateness of analyses chosen.\n\n\n\n\nThis is where you will discuss your overall finding and describe the key results from your analysis. The goal is not to interpret every single element of an output shown, but instead to address the research questions, using the interpretations to support your conclusions. Focus on the variables that help you answer the research question and that provide relevant context for the reader.\n\n\nThe analysis results are clearly assesses and interesting findings from the analysis are described. Interpretations are used to to support the key findings and conclusions, rather than merely listing, e.g., the interpretation of every model coefficient.\n\n\n\n\nIn this section you‚Äôll include a summary of what you have learned about your research question along with statistical arguments supporting your conclusions. In addition, discuss the limitations of your analysis and provide suggestions on ways the analysis could be improved. Any potential issues pertaining to the reliability and validity of your data and appropriateness of the statistical analysis should also be discussed here. Lastly, this section will include ideas for future work.\n\n\nOverall conclusions from analysis are clearly described, and the analysis results are put into the larger context of the subject matter and original research question. There is thoughtful consideration of potential limitations of the data and/or analysis, and ideas for future work are clearly described.\n\n\n\n\nThis is an assessment of the overall presentation and formatting of the written report.\n\n\nThe report neatly written and organized with clear section headers and appropriately sized figures with informative labels. Numerical results are displayed with a reasonable number of digits, and all visualizations are neatly formatted. All citations and links are properly formatted. If there is an appendix, it is reasonably organized and easy for the reader to find relevant information. All code, warnings, and messages are suppressed. The main body of the written report (not including the appendix) is no longer than 10 pages.",
    "crumbs": [
      "Project",
      "Milestone 5"
    ]
  },
  {
    "objectID": "project/5-writeup-presentation.html#grading",
    "href": "project/5-writeup-presentation.html#grading",
    "title": "Write-up and presentation",
    "section": "",
    "text": "The write-up is worth 35 points, broken down as follows:\n\n\n\nTotal\n35 pts\n\n\n\n\nIntroduction/data\n4 pts\n\n\nMethodology\n10 pts\n\n\nResults\n15 pts\n\n\nDiscussion\n3 pts\n\n\nOrganization + formatting\n3 pts",
    "crumbs": [
      "Project",
      "Milestone 5"
    ]
  },
  {
    "objectID": "project/5-writeup-presentation.html#slides",
    "href": "project/5-writeup-presentation.html#slides",
    "title": "Write-up and presentation",
    "section": "Slides",
    "text": "Slides\nIn addition to the written report, your team will also create presentation slides and record a presentation that summarize and showcase your project. Introduce your research question and data set, showcase visualizations, and discuss the primary conclusions. These slides should serve as a brief visual addition to your written report and will be graded for content and quality.\nYou can create your slides with any software you like (Keynote, PowerPoint, Google Slides, etc.). We recommend choosing an option that‚Äôs easy to collaborate with, e.g., Google Slides. If you choose this option, save the slides as PDF and upload it to your repo as presentation.pdf.\nYou can also use Quarto to make your slides! While we won‚Äôt be covering making slides with Quarto in the class, we would be happy to help you with it in office hours. It‚Äôs no different than writing other documents with Quarto, so the learning curve will not be steep!\nThe slide deck should be roughly 6 content slides + 1 title slide. Here is a suggested outline as you think through the slides; you do not have to use this exact format for the 6 slides.\n\nTitle Slide\nSlide 1: Introduce the topic and motivation\nSlide 2: Introduce the data\nSlide 3: Highlights from EDA\nSlide 4-5: Inference/modeling/other analysis\nSlide 6: Conclusions + future work",
    "crumbs": [
      "Project",
      "Milestone 5"
    ]
  },
  {
    "objectID": "project/5-writeup-presentation.html#presentation",
    "href": "project/5-writeup-presentation.html#presentation",
    "title": "Write-up and presentation",
    "section": "Presentation",
    "text": "Presentation\nPresentations will be recorded and uploaded to Warpwire or YouTube. The presentation must be no longer than 5 minutes. During grading, we will stop watching your video at the 5-minute mark.\nFor recording your presentation, you may use can use any platform that works best for your group to record your presentation. Below are a few resources on recording videos:\n\nRecording presentations in Zoom\nApple Quicktime for screen recording\nWindows 10 built-in screen recording functionality\nKap for screen recording\n\nOnce your video is ready, upload the video to Warpwire or another video platform (e.g., YouTube), then add a link to your video in your repo README.\nTo upload your video to Warpwire:\n\nClick the Warpwire tab in the course Canvas site.\nClick the ‚Äú+‚Äù and select ‚ÄúUpload files‚Äù.\nLocate the video on your computer and click to upload.\n\nThe instructions should be a lot more straightforward for YouTube. See https://support.google.com/youtube/answer/57407?hl=en&co=GENIE.Platform%3DDesktop for step-by-step instructions.\nOnce you‚Äôve uploaded your video to some platform, grab its sharing link and post it on Ed Discussion. More information on this will be posted closer to the project deadline.",
    "crumbs": [
      "Project",
      "Milestone 5"
    ]
  },
  {
    "objectID": "project/5-writeup-presentation.html#grading-1",
    "href": "project/5-writeup-presentation.html#grading-1",
    "title": "Write-up and presentation",
    "section": "Grading",
    "text": "Grading\nThe presentation is worth 25 points, broken down as follows:\n\n\n\nTotal\n25 pts\n\n\n\n\nSlides\n10 pts\n\n\nPresentation\n15 pts\n\n\n\n\nSlides\nAre the slides well organized, readable, not full of text, featuring figures with legible labels, legends, etc.?\n\n\nPresentation\n\nTime management: Did the team divide the time well amongst themselves or got cut off going over time?\nProfessionalism: How well did the team present? Does the presentation appear to be well practiced? Did everyone get a chance to say something meaningful about the project?\nTeamwork: Did the team present a unified story, or did it seem like independent pieces of work patched together?\nCreativity and critical thought: Is the project carefully thought out? Does it appear that time and effort went into the planning and implementation of the project?\nContent: Including, but not limited to the following:\n\nIs the question well articulated in the presentation?\nCan the question be answered with the data?\nDoes the analysis answer the question?\nAre the conclusion(s) made based on the analysis justifiable?\nAre the limitations carefully considered and articulated?",
    "crumbs": [
      "Project",
      "Milestone 5"
    ]
  },
  {
    "objectID": "project/4-peer-review.html",
    "href": "project/4-peer-review.html",
    "title": "Peer review",
    "section": "",
    "text": "During the peer feedback process, you will be provided read-only access to your partner team‚Äôs GitHub repo. You will provide your feedback in the form of GitHub issues to your partner team‚Äôs GitHub repo.\nGoals\nThe goals of this milestone are as follows:\n\nReview others‚Äô project drafts as a team and provide feedback\nPost issues on GitHub using an issue template\nLearn from others‚Äô projects and improve your own project based on their strengths and weaknesses\nInstructions\nReview two other teams‚Äô projects. As a team you should spend ~30 minutes on each team‚Äôs project.\n\nFind the names of the teams whose projects you‚Äôre reviewing below. You should already have access to this team‚Äôs repo.\nEach team member should go to the repo of the team you‚Äôre reviewing.\n\nThen,\n\n1-2 team members clone the team‚Äôs project and renders it to check for reproducibility.\n1-2 team members open the team‚Äôs project in their browser and starts reading through the project draft.\n1 team member opens an issue on the team‚Äôs repo using the peer review template.\nAll team members discuss the project based on the prompts on the issue template and one team member records the feedback and submits the issue.\n\n\n\nTo open an issue in the repo you‚Äôre reviewing, click on New issue, and click on Get started for the Peer review issue. Fill out this issue, answering the following questions:\n\nPeer review by: [NAME OF TEAM DOING THE REVIEW]\nNames of team members that participated in this review: [FULL NAMES OF TEAM MEMBERS DOING THE REVIEW]\nDescribe the goal of the project.\nDescribe the data used or collected, if any. If the proposal does not include the use of a specific dataset, comment on whether the project would be strengthened by the inclusion of a dataset.\nDescribe the approaches, tools, and methods that will be used.\nProvide constructive feedback on how the team might be able to improve their project. Make sure your feedback includes at least one comment on the statistical reasoning aspect of the project, but do feel free to comment on aspects beyond the reasoning as well.\nWhat aspect of this project are you most interested in and would like to see highlighted in the presentation?\nWere you able to reproduce the project by clicking on Render Website once you cloned it? Were there any issues with reproducibility?\nProvide constructive feedback on any issues with file and/or code organization.\nWhat have you learned from this team‚Äôs project that you are considering implementing in your own project?\n(Optional) Any further comments or feedback?\n\n\nReview pairings\nTo be posted.\n\nGrading\nPeer reviews will be graded on the extent to which it comprehensively and constructively addresses the components of the reviewee‚Äôs team‚Äôs report.\nOnly the team members participating in the review during the lab session are eligible for points for the peer review. If you‚Äôre unable to make it to lab in person, you should arrange to virtually connect with your team during your lab session.\n\n0 points: No peer review\n1 point: Feedback provided is not constructive or actionable\n2-4 points: Feedback provided is not sufficiently thorough\n5 points: Peer review is constructive, actionable, and sufficiently thorough\n\n\n\n\n\n\n\nNote\n\n\n\nThe feedback issue will come from one team member on GitHub since you can‚Äôt collectively edit an issue. However it must represent the opinions of the entire team. It is not a single team member‚Äôs responsibility to provide feedback, they‚Äôre just the record keeper for the team.",
    "crumbs": [
      "Project",
      "Milestone 4"
    ]
  },
  {
    "objectID": "project/2-proposal.html",
    "href": "project/2-proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "The goals of this milestone are as follows:\n\nDiscuss topics you‚Äôre interested in investigating and find data sets on those topics.\nIdentify 3 data sets you‚Äôre interested in potentially using for the project.\nGet these datasets into R.\nWrite up reasons and justifications for why you want to work with these datasets.\nReview your team contract.\n\n\n\n\n\n\n\nImportant\n\n\n\nYou must use one of the data sets in the proposal for the final project, unless instructed otherwise when given feedback.",
    "crumbs": [
      "Project",
      "Milestone 2"
    ]
  },
  {
    "objectID": "project/2-proposal.html#criteria-for-datasets",
    "href": "project/2-proposal.html#criteria-for-datasets",
    "title": "Proposal",
    "section": "Criteria for datasets",
    "text": "Criteria for datasets\nThe data sets should meet the following criteria:\n\nAt least 500 observations\nAt least 8 columns\nAt least 6 of the columns must be useful and unique explanatory variables.\n\nIdentifier variables such as ‚Äúname‚Äù, ‚Äúsocial security number‚Äù, etc. are not useful explanatory variables.\nIf you have multiple columns with the same information (e.g.¬†‚Äústate abbreviation‚Äù and ‚Äústate name‚Äù), then they are not unique explanatory variables.\n\nYou may not use data that has previously been used in any course materials, or any derivation of data that has been used in course materials.\nYou can curate one of your datasets via web scraping.\n\nPlease ask a member of the teaching team if you‚Äôre unsure whether your data set meets the criteria.\nIf you set your hearts on a dataset that has fewer observations or variables than what‚Äôs suggested here, that might still be ok; use these numbers as guidance for a successful proposal, not as minimum requirements.",
    "crumbs": [
      "Project",
      "Milestone 2"
    ]
  },
  {
    "objectID": "project/2-proposal.html#resources-for-datasets",
    "href": "project/2-proposal.html#resources-for-datasets",
    "title": "Proposal",
    "section": "Resources for datasets",
    "text": "Resources for datasets\nYou can find data wherever you like, but here are some recommendations to get you started. You shouldn‚Äôt feel constrained to datasets that are already in a tidy format, you can start with data that needs cleaning and tidying, scrape data off the web, or collect your own data.\n\nAwesome public datasets\nBikeshare data portal\nCDC\nData.gov\nData is Plural\nDurham Open Data Portal\nEdinburgh Open Data\nElection Studies\nEuropean Statistics\nCORGIS: The Collection of Really Great, Interesting, Situated Datasets\nGeneral Social Survey\nGoogle Dataset Search\nHarvard Dataverse\nInternational Monetary Fund\nIPUMS survey data from around the world\nLos Angeles Open Data\nNHS Scotland Open Data\nNYC OpenData\nOpen access to Scotland‚Äôs official statistics\nPew Research\nPRISM Data Archive Project\nResponsible Datasets in Context\nStatistics Canada\nTidyTuesday\nThe National Bureau of Economic Research\nUCI Machine Learning Repository\nUK Government Data\nUNICEF Data\nUnited Nations Data\nUnited Nations Statistics Division\nUS Census Data\nUS Government Data\nWorld Bank Data\nYouth Risk Behavior Surveillance System (YRBSS)\nFRED Economic Data",
    "crumbs": [
      "Project",
      "Milestone 2"
    ]
  },
  {
    "objectID": "project/2-proposal.html#introduction-and-data",
    "href": "project/2-proposal.html#introduction-and-data",
    "title": "Proposal",
    "section": "Introduction and data",
    "text": "Introduction and data\nFor each data set:\n\nIdentify the source of the data.\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\nWrite a brief description of the observations.\nAddress ethical concerns about the data, if any.",
    "crumbs": [
      "Project",
      "Milestone 2"
    ]
  },
  {
    "objectID": "project/2-proposal.html#research-question",
    "href": "project/2-proposal.html#research-question",
    "title": "Proposal",
    "section": "Research question",
    "text": "Research question\nYour research question should contain at least three variables, and should be a mix of categorical and quantitative variables. When writing a research question, please think about the following:\n\nWhat is your target population?\nIs the question original?\nCan the question be answered?\n\nFor each data set, include the following:\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\nStatement on why this question is important.\nA description of the research topic along with a concise statement of your hypotheses on this topic.\nIdentify the types of variables in your research question. Categorical? Quantitative?",
    "crumbs": [
      "Project",
      "Milestone 2"
    ]
  },
  {
    "objectID": "project/2-proposal.html#glimpse-of-data",
    "href": "project/2-proposal.html#glimpse-of-data",
    "title": "Proposal",
    "section": "Glimpse of data",
    "text": "Glimpse of data\nFor each data set:\n\nPlace the file containing your data in the data folder of the project repo.\nUse the glimpse() function to provide a glimpse of the data set.",
    "crumbs": [
      "Project",
      "Milestone 2"
    ]
  }
]