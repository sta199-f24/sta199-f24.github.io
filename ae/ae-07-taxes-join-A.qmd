---
title: "AE 07: Sales taxes + data joining"
subtitle: "Suggested answers"
categories: 
  - Answers
draft: false
---

## Getting started

### Packages

We'll use the **tidyverse** package for this analysis.

```{r}
#| label: load-packages
#| message: false
library(tidyverse)
```

### Data

The data are available in the `data` folder.

```{r}
#| label: load-data
sales_taxes <- read_csv("data/sales-taxes.csv")
us_regions <- read_csv("data/us-regions.csv")
```

And let's take a look at the data.

```{r}
#| label: glimpse
glimpse(sales_taxes)
glimpse(us_regions)
```

## Joining

Join the sales tax data with region data and save the joined data frame as a new data frame, not overwriting either data frame that goes into the join.

```{r}
#| label: join
sales_taxes_regions <- left_join(
  sales_taxes, 
  us_regions, 
  by = join_by(state == state_name)
)
```

Calculate the average sales tax of states in each region.
What is surprising in the output?

```{r}
#| label: region-means-take-1
sales_taxes_regions |>
  group_by(region) |>
  summarize(mean_state_tax = mean(state_tax_rate))
```

Identify the state with `NA` for region.

```{r}
#| label: identify-na
sales_taxes_regions |>
  filter(is.na(region)) |>
  select(state, region)
```

Apply a fix for the `NA` in region, and calculate the mean sales taxes for regions again.
Display the results in ascending order of mean sales tax.

```{r}
#| label: region-means-take-2
sales_taxes_regions <- sales_taxes_regions |>
  mutate(
    region = if_else(state == "District of Columbia", "Northeast", region)
  )

sales_taxes_regions |>
  group_by(region) |>
  summarize(mean_state_tax = mean(state_tax_rate)) |>
  arrange(mean_state_tax)
```

## Render, commit, and push

1.  Render your Quarto document.

2.  Go to the Git pane and check the box next to each file listed, i.e., stage your changes.
    Commit your staged changes using a simple and informative message.

3.  Click on push (the green arrow) to push your changes to your application exercise repo on GitHub.

4.  Go to your repo on GitHub and confirm that you can see the updated files.
    Once your updated files are in your repo on GitHub, you're good to go!
