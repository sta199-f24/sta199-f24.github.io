{
  "hash": "0ebde83db99d85bb3c82354b3ff3fd1c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 03: Bechdel + data visualization and transformation\"\n---\n\n\n\n\n\nIn this mini-analysis, we'll continue our exploration of the `bechdel` dataset, which contains information on whether the movies in the data pass the [Bechdel test](https://en.wikipedia.org/wiki/Bechdel_test) (a measure of the representation of women in fiction).\n\n## Getting started\n\n### Packages\n\nWe'll use the **tidyverse** package for this analysis.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n\n### Data\n\nThe data are stored as a CSV (comma-separated values) file in your repository's `data` folder.\nLet's read it from there and save it as an object called `bechdel`.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbechdel <- read_csv(\"data/bechdel.csv\")\n```\n:::\n\n\n\n\n\n### Get to know the data\n\nWe can use the `glimpse()` function to get an overview (or \"glimpse\") of the data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n\n\n-   What does each observation (row) in the data set represent?\n\nEach observation represents a movie.\n\n-   How many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\n-   How many variables (columns) are in the data set?\n\nThere are 7 columns in the dataset.\n\n## Bechdel test results\n\n### Visualizing data with **ggplot2**\n\nCreate a bar plot of the `clean_test` variable:\n\n-   `ok` = passes test\n-   `dubious`\n-   `men` = women only talk about men\n-   `notalk` = women don't talk to each other\n-   `nowomen` = fewer than two women\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n\n\nWhat types of movies are more common, those that pass or do not pass the test?\n\nAdd your response here.\n\n### Render, commit, and push\n\n1.  Render your Quarto document.\n\n2.  Go to the Git pane and check the box next to each file listed, i.e., stage your changes.\n    Commit your staged changes using a simple and informative message.\n\n3.  Click on push (the green arrow) to push your changes to your application exercise repo on GitHub.\n\n4.  Go to your repo on GitHub and confirm that you can see the updated files.\n    Once your updated files are in your repo on GitHub, you're good to go!\n\n## Return-on-investment\n\nLet's take a look at return-on-investment (ROI) for movies that do and do not pass the Bechdel test.\n\n### Step 1 - Your turn\n\nCreate side-by-side box plots of `roi` by `clean_test` where the boxes are colored by `binary`.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n\n\n### Step 2 - Demo\n\nWhat are the movies with *very* high returns on investment?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n\n\n### Step 3 - Demo\n\nExpand on your plot from the previous step to zoom in on movies with `roi < ___` to get a better view of how the medians across the categories compare.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?\n\nAdd your response here.\n\n### Render, commit, and push\n\n1.  Render your Quarto document.\n\n2.  Go to the Git pane and check the box next to each file listed, i.e., stage your changes.\n    Commit your staged changes using a simple and informative message.\n\n3.  Click on push (the green arrow) to push your changes to your application exercise repo on GitHub.\n\n4.  Go to your repo on GitHub and confirm that you can see the updated files.\n    Once your updated files are in your repo on GitHub, you're good to go!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}