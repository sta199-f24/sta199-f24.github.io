{
  "hash": "74eb7299dc49043efb68ece747d5eaf7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 08: Durham climate + factors\"\nsubtitle: \"Suggested answers\"\n---\n\n\n\n::: callout-important\nThese are suggested answers.\nThis document should be used as a reference only; it's not designed to be an exhaustive key.\n:::\n\n## Getting started\n\n### Packages\n\nWe will use the **tidyverse** package in this application exercise.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n### Data\n\nThe data come from <https://www.usclimatedata.com/climate/durham/north-carolina/united-states/usnc0192> and are stored as `durham-climate.csv` in the `data` folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurham_climate <- read_csv(\"data/durham-climate.csv\")\n```\n:::\n\n\n\nAnd let's take a look at the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurham_climate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   month     avg_high_f avg_low_f precipitation_in\n   <chr>          <dbl>     <dbl>            <dbl>\n 1 January           49        28             4.45\n 2 February          53        29             3.7 \n 3 March             62        37             4.69\n 4 April             71        46             3.43\n 5 May               79        56             4.61\n 6 June              85        65             4.02\n 7 July              89        70             3.94\n 8 August            87        68             4.37\n 9 September         81        60             4.37\n10 October           71        47             3.7 \n11 November          62        37             3.39\n12 December          53        30             3.43\n```\n\n\n:::\n:::\n\n\n\n## Reorder\n\nWhat's wrong with the following plot?\n\nMonths are out of order.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  durham_climate, \n  aes(x = month, y = avg_high_f, group = 1)\n  ) +\n  geom_line() +\n  geom_point(\n    shape = \"circle filled\", size = 2,\n    color = \"black\", fill = \"white\", stroke = 1\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average high temperature (F)\",\n    title = \"Durham climate\"\n  )\n```\n\n::: {.cell-output-display}\n![](ae-08-durham-climate-factors-A_files/figure-html/avg-high-broken-1.png){width=100%}\n:::\n:::\n\n\n\nFix the plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurham_climate <- durham_climate |>\n  mutate(month = fct_relevel(month, month.name))\n\nggplot(\n  durham_climate,\n  aes(x = month, y = avg_high_f, group = 1)\n  ) +\n  geom_line() +\n  geom_point(\n    shape = \"circle filled\", size = 2,\n    color = \"black\", fill = \"white\", stroke = 1\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average high temperature (F)\",\n    title = \"Durham climate\"\n  )\n```\n\n::: {.cell-output-display}\n![](ae-08-durham-climate-factors-A_files/figure-html/avg-high-fixed-1.png){width=100%}\n:::\n:::\n\n\n\n## Recode and reorder\n\nUpdate the plot above, coloring points based on season.\nAdditionally:\n\n-   Make sure the legend is on top of the plot and the seasons appear in the legend in the order they appear in the plot (Winter, Spring, Summer, Fall).\n\n-   Use `\"circle filled\"` as the `shape` for points, set their `size` to 3 points, outline (`stroke`) to 1 point, and fill them in with the following colors:\n\n    -   Winter: `lightskyblue1`\n    -   Spring: `chartreuse3`\n    -   Summer: `gold2`\n    -   Fall: `lightsalmon4`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurham_climate <- durham_climate |>\n  mutate(\n    season = case_when(\n      month %in% c(\"December\", \"January\", \"February\") ~ \"Winter\",\n      month %in% c(\"March\", \"April\", \"May\") ~ \"Spring\",\n      month %in% c(\"June\", \"July\", \"August\") ~ \"Summer\",\n      month %in% c(\"September\", \"October\", \"November\") ~ \"Fall\",\n    ),\n    season = fct_relevel(season, \"Winter\", \"Spring\", \"Summer\", \"Fall\")\n  )\n\nggplot(\n  durham_climate,\n  aes(x = month, y = avg_high_f, group = 1)\n  ) +\n  geom_line() +\n  geom_point(\n    aes(fill = season),\n    shape = \"circle filled\", size = 3, stroke = 1\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Winter\" = \"lightskyblue1\",\n      \"Spring\" = \"chartreuse3\",\n      \"Summer\" = \"gold2\",\n      \"Fall\" = \"lightsalmon4\"\n    )\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average high temperature (F)\",\n    title = \"Durham climate\",\n    fill = \"Season\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](ae-08-durham-climate-factors-A_files/figure-html/avg-high-seasons-1.png){width=100%}\n:::\n:::\n\n\n\n## Pivot\n\nOverlay lines for both high and low temperatures on the same plot.\nAdditionally, use different colors for the two lines – a darker color for high and a lighter color for low temperatures.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurham_climate |>\n  pivot_longer(\n    cols = c(avg_high_f, avg_low_f),\n    names_to = \"temp_type\",\n    names_prefix = \"avg_\",\n    values_to = \"avg_temp_f\"\n  ) |>\n  mutate(temp_type = str_remove(temp_type, \"_f\")) |>\n  ggplot(aes(x = month, y = avg_temp_f, group = temp_type, color = temp_type)) +\n  geom_line() +\n  geom_point(\n    aes(fill = season),\n    shape = \"circle filled\", size = 3, stroke = 1\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Winter\" = \"lightskyblue1\",\n      \"Spring\" = \"chartreuse3\",\n      \"Summer\" = \"gold2\",\n      \"Fall\" = \"lightsalmon4\"\n    )\n  ) +\n  scale_color_manual(\n    values = c(\n      \"high\" = \"gray20\",\n      \"low\" = \"gray70\"\n    )\n  ) +\n  labs(\n    x = \"Month\",\n    y = \"Average temperature (F)\",\n    title = \"Durham climate\",\n    fill = \"Season\",\n    color = \"Type\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](ae-08-durham-climate-factors-A_files/figure-html/avg-seasons-1.png){width=100%}\n:::\n:::\n",
    "supporting": [
      "ae-08-durham-climate-factors-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}