{
  "hash": "43e793b3ad96ef0f5f3706000e5b66ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 02: Bechdel + data visualization\"\nsubtitle: \"Suggested answers\"\n---\n\n\n\n::: callout-important\nThese are suggested answers.\nThis document should be used as a reference only; it's not designed to be an exhaustive key.\n:::\n\nIn this mini-analysis, we use the data from the FiveThirtyEight story \"The Dollar-And-Cents Case Against Hollywood's Exclusion of Women.\"\n\nThis analysis is about the [Bechdel test](https://en.wikipedia.org/wiki/Bechdel_test), a measure of the representation of women in fiction.\n\n## Getting started\n\n### Packages\n\nWe'll use the **tidyverse** package for this analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n### Data\n\nThe data are stored as a CSV (comma-separated values) file in your repository's `data` folder.\nLet's read it from there and save it as an object called `bechdel`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbechdel <- read_csv(\"data/bechdel.csv\")\n```\n:::\n\n\n\n### Get to know the data\n\nWe can use the `glimpse()` function to get an overview (or \"glimpse\") of the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(bechdel)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,615\nColumns: 7\n$ title       <chr> \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"42…\n$ year        <dbl> 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013…\n$ gross_2013  <dbl> 67878146, 55078343, 211714070, 208105475, 190040426, 18416…\n$ budget_2013 <dbl> 13000000, 45658735, 20000000, 61000000, 40000000, 22500000…\n$ roi         <dbl> 5.221396, 1.206305, 10.585703, 3.411565, 4.751011, 0.81851…\n$ binary      <chr> \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"P…\n$ clean_test  <chr> \"notalk\", \"ok\", \"notalk\", \"notalk\", \"men\", \"men\", \"notalk\"…\n```\n\n\n:::\n:::\n\n\n\n-   What does each observation (row) in the data set represent?\n\nEach observation represents a **movie**.\n\n-   How many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\n-   How many variables (columns) are in the data set?\n\nThere are 7 columns in the dataset.\n\n### Variables of interest\n\nThe variables we'll focus on are the following:\n\n-   `roi`: Return on investment, calculated as the ratio of the gross to budget.\n-   `clean_test`: Bechdel test result:\n    -   `ok` = passes test\n    -   `dubious`\n    -   `men` = women only talk about men\n    -   `notalk` = women don't talk to each other\n    -   `nowomen` = fewer than two women\n-   `binary`: Bechdel Test PASS vs FAIL binary\n\nWe will also use the `year` of release in data prep and `title` of movie to take a deeper look at some outliers.\n\nThere are a few other variables in the dataset, but we won't be using them in this analysis.\n\n## Bechdel test results\n\n### Visualizing data with **ggplot2**\n\n**ggplot2** is the package and `ggplot()` is the function in this package that is used to create a plot.\n\n-   `ggplot()` creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with `data = bechdel`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = bechdel)\n```\n\n::: {.cell-output-display}\n![](ae-02-bechdel-dataviz-A_files/figure-html/plot-base-1.png){width=672}\n:::\n:::\n\n\n\n-   The `mapping` argument is paired with an aesthetic (`aes()`), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = bechdel, mapping = aes(x = clean_test))\n```\n\n::: {.cell-output-display}\n![](ae-02-bechdel-dataviz-A_files/figure-html/plot-aesthetic-mapping-1.png){width=672}\n:::\n:::\n\n\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions.\nSo you'll often see this written as:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bechdel, aes(x = clean_test))\n```\n\n::: {.cell-output-display}\n![](ae-02-bechdel-dataviz-A_files/figure-html/plot-simplified-call-1.png){width=672}\n:::\n:::\n\n\n\nNote that the result is exactly the same.\n\n-   The `geom_xx` function specifies the type of plot we want to use to represent the data. In the code below, we use `geom_point` which creates a plot where each observation is represented by a point.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bechdel, aes(x = clean_test)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](ae-02-bechdel-dataviz-A_files/figure-html/plot-point-1.png){width=672}\n:::\n:::\n\n\n\nWhat types of movies are more common, those that pass or do not pass the test?\n\n### Render, commit, and push\n\n1.  Render your Quarto document.\n\n2.  Go to the Git pane and check the box next to each file listed, i.e., stage your changes.\n    Commit your staged changes using a simple and informative message.\n\n3.  Click on push (the green arrow) to push your changes to your application exercise repo on GitHub.\n\n4.  Go to your repo on GitHub and confirm that you can see the updated files.\n    Once your updated files are in your repo on GitHub, you're good to go!\n\n## Return-on-investment\n\nLet's take a look at return-on-investment (ROI) for movies that do and do not pass the Bechdel test.\n\n### Step 1 - Your turn\n\nCreate side-by-side box plots of `roi` by `clean_test` where the boxes are colored by `binary`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bechdel, aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel result\",\n    y = \"Return-on-investment (gross / budget)\",\n    color = \"Bechdel\\nresult\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 15 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ae-02-bechdel-dataviz-A_files/figure-html/roi-zoom-1.png){width=672}\n:::\n:::\n\n\n\nWhat are those movies with *very* high returns on investment?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbechdel |>\n  filter(roi > 400) |>\n  select(title, roi, budget_2013, gross_2013, year, clean_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  title                     roi budget_2013 gross_2013  year clean_test\n  <chr>                   <dbl>       <dbl>      <dbl> <dbl> <chr>     \n1 Paranormal Activity      671.      505595  339424558  2007 dubious   \n2 The Blair Witch Project  648.      839077  543776715  1999 ok        \n3 El Mariachi              583.       11622    6778946  1992 nowomen   \n```\n\n\n:::\n:::\n\n\n\n### Step 2 - Demo\n\nExpand on your plot from the previous step to zoom in on movies with `roi < ___` to get a better view of how the medians across the categories compare.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bechdel, aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel result\",\n    y = \"Return-on-investment (gross / budget)\",\n    color = \"Bechdel\\nresult\"\n  ) +\n  coord_cartesian(ylim = c(0, 16))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 15 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ae-02-bechdel-dataviz-A_files/figure-html/roi-test-zoom-1.png){width=672}\n:::\n:::\n\n\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?\n\n### Render, commit, and push\n\n1.  Render your Quarto document.\n\n2.  Go to the Git pane and check the box next to each file listed, i.e., stage your changes.\n    Commit your staged changes using a simple and informative message.\n\n3.  Click on push (the green arrow) to push your changes to your application exercise repo on GitHub.\n\n4.  Go to your repo on GitHub and confirm that you can see the updated files.\n    Once your updated files are in your repo on GitHub, you're good to go!\n",
    "supporting": [
      "ae-02-bechdel-dataviz-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}