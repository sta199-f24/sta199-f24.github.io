{
  "hash": "ad677ff5baf8377edabd1a6b4a07007a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quantifying uncertainty with bootstrap intervals\"\nsubtitle: \"Lecture 21\"\ndate: \"2024-11-13\"\nformat: \n  live-revealjs: \n    output-file: 21-bootstrap-slides.html\nwebr:\n  cell-options:\n    autorun: false\n---\n\n\n\n\n<!-- begin: webr fodder -->\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(width = 60)\n```\n:::\n\n\n\n\n<!-- end: webr fodder -->\n\n<!-- begin: ae definition -->\n\n\n\n\n\n\n\n\n\n<!-- end: ae definition -->\n\n# Warm-up\n\n## While you wait... {.smaller}\n\n::: appex\n-   Go to your `ae` project in RStudio.\n\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   Click Pull to get today's application exercise file: *ae\\-18\\-duke\\-forest\\-bootstrap\\.qmd*.\n\n-   Wait till the you're prompted to work on the application exercise during class before editing the file.\n:::\n\n## Announcements {.xxsmall}\n\nProject timeline and progress:\n\n::: incremental\n-   **Due this Friday, Nov 15 - Milestone 3**\n    -   Bare minimum: Address and close issues\n    -   Ideal: Start working on your project write-up in `index.qmd`\n\n-   **Before Monday, Nov 25 - Between Milestones 3 and 4**\n    -   Bare minimum: Make substantial progress on your project write-up: Finish your introduction and exploratory data analysis (plots/summary statistics + their interpretations) + Write up methods you plan to use\n    -   Ideal: Start implementing the methods and get closer to answering your research question\n\n-   **On Monday, Nov 25 - Milestone 4**\n    -   Peer review of others' projects in lab\n    -   You must be in lab to participate in the peer review\n    -   If you cannot be there physically due to Thanksgiving travel, make arrangements to Zoom in with the rest of your team who are in lab\n\n-   **After Monday, Nov 26:** Work on write-up and presentation incorporating feedback from peers and meeting with TAs/instructor as needed during office hours for further feedback\n:::\n\n## From last time\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   Continue working on `ae-17-forest-classification.qmd`.\n\n-   Work through the application exercise in class, and render, commit, and push your edits.\n:::\n\n# Quantifying uncertainty\n\n## Goal\n\nFind range of plausible values for the slope using bootstrap confidence intervals.\n\n## Packages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)   # for data wrangling and visualization\nlibrary(tidymodels)  # for modeling\nlibrary(openintro)   # for Duke Forest dataset\nlibrary(scales)      # for pretty axis labels\nlibrary(glue)        # for constructing character strings\nlibrary(knitr)       # for neatly formatted tables\n```\n:::\n\n\n\n\n## Data: Houses in Duke Forest {.smaller}\n\n::::: columns\n::: {.column width=\"50%\"}\n-   Data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020\n-   Scraped from Zillow\n-   Source: [`openintro::duke_forest`](http://openintrostat.github.io/openintro/reference/duke_forest.html)\n:::\n\n::: {.column width=\"50%\"}\n![](images/21/duke_forest_home.jpg){fig-alt=\"Home in Duke Forest\"}\n:::\n:::::\n\n**Goal**: Use the area (in square feet) to understand variability in the price of houses in Duke Forest.\n\n## Exploratory data analysis\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point(alpha = 0.7) +\n  labs(\n    x = \"Area (square feet)\",\n    y = \"Sale price (USD)\",\n    title = \"Price and area of houses in Duke Forest\"\n  ) +\n  scale_y_continuous(labels = label_dollar()) \n```\n\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n\n## Modeling {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|5|6\"}\ndf_fit <- linear_reg() |>\n  fit(price ~ area, data = duke_forest)\n\ntidy(df_fit) |>\n  kable(digits = 2) # neatly format table to 2 digits\n```\n\n::: {.cell-output-display}\n\n\n|term        |  estimate| std.error| statistic| p.value|\n|:-----------|---------:|---------:|---------:|-------:|\n|(Intercept) | 116652.33|  53302.46|      2.19|    0.03|\n|area        |    159.48|     18.17|      8.78|    0.00|\n\n\n:::\n:::\n\n\n\n\n. . .\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n-   **Intercept:** Duke Forest houses that are 0 square feet are expected to sell, for $116,652, on average.\n    -   Is this interpretation useful?\n-   **Slope:** For each additional square foot, we expect the sale price of Duke Forest houses to be higher by $159, on average.\n\n## From sample to population {.smaller}\n\n> For each additional square foot, we expect the sale price of Duke Forest houses to be higher by $159, on average.\n\n<br>\n\n-   This estimate is valid for the single sample of 98 houses.\n-   But what if we're not interested quantifying the relationship between the size and price of a house in this single sample?\n-   What if we want to say something about the relationship between these variables for all houses in Duke Forest?\n\n## Statistical inference {.smaller}\n\n-   **Statistical inference** provide methods and tools so we can use the single observed sample to make valid statements (inferences) about the population it comes from\n\n-   For our inferences to be valid, the sample should be random and representative of the population we're interested in\n\n![](images/21/soup.png)\n\n## Inference for simple linear regression\n\n-   Calculate a confidence interval for the slope, $\\beta_1$ (today)\n\n-   Conduct a hypothesis test for the slope,$\\beta_1$ (next week)\n\n# Confidence interval for the slope\n\n## Confidence interval {.smaller}\n\n::: incremental\n-   A plausible range of values for a population parameter is called a **confidence interval**\n-   Using only a single point estimate is like fishing in a murky lake with a spear, and using a confidence interval is like fishing with a net\n    -   We can throw a spear where we saw a fish but we will probably miss, if we toss a net in that area, we have a good chance of catching the fish\n    -   Similarly, if we report a point estimate, we probably will not hit the exact population parameter, but if we report a range of plausible values we have a good shot at capturing the parameter\n:::\n\n## Confidence interval for the slope {.smaller}\n\nA confidence interval will allow us to make a statement like \"*For each additional square foot, the model predicts the sale price of Duke Forest houses to be higher, on average, by $159, plus or minus X dollars.*\"\n\n. . .\n\n-   Should X be \\$10?\n    \\$100?\n    \\$1000?\n\n-   If we were to take another sample of 98 would we expect the slope calculated based on that sample to be exactly $159?\n    Off by \\$10?\n    \\$100?\n    \\$1000?\n\n-   The answer depends on how variable (from one sample to another sample) the sample statistic (the slope) is\n\n-   We need a way to quantify the variability of the sample statistic\n\n## Quantify the variability of the slope {.smaller}\n\n**for estimation**\n\n::: incremental\n-   Two approaches:\n    1.  Via simulation (what we'll do in this course)\n    2.  Via mathematical models (what you can learn about in future courses)\n-   **Bootstrapping** to quantify the variability of the slope for the purpose of estimation:\n    -   Bootstrap new samples from the original sample\n    -   Fit models to each of the samples and estimate the slope\n    -   Use features of the distribution of the bootstrapped slopes to construct a confidence interval\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Bootstrap sample 1\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-9-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-10-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Bootstrap sample 2\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-11-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-12-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Bootstrap sample 3\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-13-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-14-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Bootstrap sample 4\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-15-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-16-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Bootstrap sample 5\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-17-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-18-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n. . .\n\n*so on and so forth...*\n\n## Bootstrap samples 1 - 5\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-19-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-20-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Bootstrap samples 1 - 100\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-22-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-23-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Slopes of bootstrap samples {.smaller}\n\n::: task\n**Fill in the blank:** For each additional square foot, the model predicts the sale price of Duke Forest houses to be higher, on average, by $159, plus or minus \\_\\_\\_ dollars.\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n\n## Slopes of bootstrap samples {.smaller}\n\n::: task\n**Fill in the blank:** For each additional square foot, we expect the sale price of Duke Forest houses to be higher, on average, by $159, plus or minus \\_\\_\\_ dollars.\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n\n\n## Confidence level {.smaller}\n\n::: task\nHow confident are you that the true slope is between \\$0 and \\$250?\nHow about \\$150 and \\$170?\nHow about \\$90 and \\$210?\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n\n\n## 95% confidence interval {.smaller}\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](21-bootstrap_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n\n\n::: incremental\n-   A 95% confidence interval is bounded by the middle 95% of the bootstrap distribution\n-   We are 95% confident that for each additional square foot, the model predicts the sale price of Duke Forest houses to be higher, on average, by $90.43 to $205.77.\n:::\n\n# Application exercise\n\n## ae\\-18\\-duke\\-forest\\-bootstrap {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-18\\-duke\\-forest\\-bootstrap\\.qmd*.\n\n-   Work through the application exercise in class, and render, commit, and push your edits.\n:::\n\n## Computing the CI for the slope I\n\nCalculate the observed slope:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobserved_fit <- duke_forest |>\n  specify(price ~ area) |>\n  fit()\n\nobserved_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  term      estimate\n  <chr>        <dbl>\n1 intercept  116652.\n2 area          159.\n```\n\n\n:::\n:::\n\n\n\n\n## Computing the CI for the slope II {.smaller}\n\nTake `100` bootstrap samples and fit models to each one:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,5,6\"}\nset.seed(1120)\n\nboot_fits <- duke_forest |>\n  specify(price ~ area) |>\n  generate(reps = 100, type = \"bootstrap\") |>\n  fit()\n\nboot_fits\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 200 × 3\n# Groups:   replicate [100]\n   replicate term      estimate\n       <int> <chr>        <dbl>\n 1         1 intercept   47819.\n 2         1 area          191.\n 3         2 intercept  144645.\n 4         2 area          134.\n 5         3 intercept  114008.\n 6         3 area          161.\n 7         4 intercept  100639.\n 8         4 area          166.\n 9         5 intercept  215264.\n10         5 area          125.\n# ℹ 190 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Computing the CI for the slope III\n\n**Percentile method:** Compute the 95% CI as the middle 95% of the bootstrap distribution:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nget_confidence_interval(\n  boot_fits, \n  point_estimate = observed_fit, \n  level = 0.95,\n  type = \"percentile\" # default method\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  term      lower_ci upper_ci\n  <chr>        <dbl>    <dbl>\n1 area          92.1     223.\n2 intercept -36765.   296528.\n```\n\n\n:::\n:::\n\n\n\n\n## Precision vs. accuracy {.smaller}\n\n::: task\nIf we want to be very certain that we capture the population parameter, should we use a wider or a narrower interval?\nWhat drawbacks are associated with using a wider interval?\n:::\n\n. . .\n\n![](images/21/garfield.png)\n\n## Precision vs. accuracy {.smaller}\n\n::: task\nHow can we get best of both worlds -- high precision and high accuracy?\n:::\n\n## Changing confidence level {.smaller}\n\n::: task\nHow would you modify the following code to calculate a 90% confidence interval?\nHow would you modify it for a 99% confidence interval?\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nget_confidence_interval(\n  boot_fits, \n  point_estimate = observed_fit, \n  level = 0.95,\n  type = \"percentile\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  term      lower_ci upper_ci\n  <chr>        <dbl>    <dbl>\n1 area          92.1     223.\n2 intercept -36765.   296528.\n```\n\n\n:::\n:::\n\n\n\n\n## Changing confidence level {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## confidence level: 90%\nget_confidence_interval(\n  boot_fits, point_estimate = observed_fit, \n  level = 0.90, type = \"percentile\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  term      lower_ci upper_ci\n  <chr>        <dbl>    <dbl>\n1 area          104.     212.\n2 intercept  -24380.  256730.\n```\n\n\n:::\n\n```{.r .cell-code}\n## confidence level: 99%\nget_confidence_interval(\n  boot_fits, point_estimate = observed_fit, \n  level = 0.99, type = \"percentile\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  term      lower_ci upper_ci\n  <chr>        <dbl>    <dbl>\n1 area          56.3     226.\n2 intercept -61950.   370395.\n```\n\n\n:::\n:::\n\n\n\n\n## Recap {.xsmall}\n\n-   **Population:** Complete set of observations of whatever we are studying, e.g., people, tweets, photographs, etc. (population size = $N$)\n\n-   **Sample:** Subset of the population, ideally random and representative (sample size = $n$)\n\n-   Sample statistic $\\ne$ population parameter, but if the sample is good, it can be a good estimate\n\n-   **Statistical inference:** Discipline that concerns itself with the development of procedures, methods, and theorems that allow us to extract meaning and information from data that has been generated by stochastic (random) process\n\n-   We report the estimate with a confidence interval, and the width of this interval depends on the variability of sample statistics from different samples from the population\n\n-   Since we can't continue sampling from the population, we bootstrap from the one sample we have to estimate sampling variability\n",
    "supporting": [
      "21-bootstrap_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}