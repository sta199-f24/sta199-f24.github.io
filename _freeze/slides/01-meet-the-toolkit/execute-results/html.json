{
  "hash": "6d8b1f3fbb8c65edbcb2927b55220333",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Meet the toolkit\"\nsubtitle: \"Lecture 1\"\ndate: \"2024-08-29\"\nformat: \n  live-revealjs: \n    output-file: 01-meet-the-toolkit-slides.html\nwebr:\n  cell-options:\n    autorun: false\n  packages:\n    - palmerpenguins\n    - tibble\n---\n\n\n\n\n<!-- begin: webr fodder -->\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(width = 60)\n```\n:::\n\n\n\n\n<!-- end: webr fodder -->\n\n# Warm-up\n\n## Announcements\n\n-   If you have not yet completed the Getting to know you survey, please do so asap!\n\n-   If you have not yet accepted the invite to join the course GitHub Organization (I'm looking at 25 of you as of this morning!), please do so asap!\n\n## Additional resource\n\n-   Peer tutoring\n\n-   More info at <https://sta199-f24.github.io/course-support.html#peer-tutoring>\n\n## Five tips for success\n\n1.  Complete all the preparation work before class.\n\n2.  Ask questions.\n\n3.  Do the readings.\n\n4.  Do the lab.\n\n5.  Donâ€™t procrastinate â€“ at least on a weekly basis!\n\n# Course toolkit\n\n## Course toolkit {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n**Course operation**\n\n-   Materials: [sta199-f24.github.io](https://sta199-f24.github.io/)\n-   Submission: Gradescope\n-   Discussion: Ed Discussion\n-   Gradebook: Canvas\n:::\n\n::: {.column width=\"50%\"}\n**Doing data science**\n\n-   Computing:\n    -   R\n    -   RStudio\n    -   tidyverse\n    -   Quarto\n-   Version control and collaboration:\n    -   Git\n    -   GitHub\n:::\n:::\n\n# Toolkit: Computing\n\n## Learning goals {.smaller}\n\nBy the end of the course, you will be able to...\n\n::: incremental\n-   gain insight from data\n-   gain insight from data, **reproducibly**\n-   gain insight from data, reproducibly, **using modern programming tools and techniques**\n-   gain insight from data, reproducibly **and collaboratively**, using modern programming tools and techniques\n-   gain insight from data, reproducibly **(with literate programming and version control)** and collaboratively, using modern programming tools and techniques\n:::\n\n# Reproducible data analysis\n\n## Reproducibility checklist {.smaller}\n\n::: question\nWhat does it mean for a data analysis to be \"reproducible\"?\n:::\n\n. . .\n\n**Short-term goals:**\n\n-   Are the tables and figures reproducible from the code and data?\n-   Does the code actually do what you think it does?\n-   In addition to what was done, is it clear *why* it was done?\n\n. . .\n\n**Long-term goals:**\n\n-   Can the code be used for other data?\n-   Can you extend the code to do other things?\n\n## Toolkit for reproducibility\n\n-   Scriptability $\\rightarrow$ R\n-   Literate programming (code, narrative, output in one place) $\\rightarrow$ Quarto\n-   Version control $\\rightarrow$ Git / GitHub\n\n# R and RStudio\n\n## R and RStudio {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/01/r-logo.png){fig-alt=\"R logo\" fig-align=\"center\"}\n\n-   R is an open-source statistical **programming language**\n-   R is also an environment for statistical computing and graphics\n-   It's easily extensible with *packages*\n:::\n\n::: {.column .fragment width=\"50%\"}\n![](images/01/rstudio-logo.png){fig-alt=\"RStudio logo\"}\n\n-   RStudio is a convenient interface for R called an **IDE** (integrated development environment), e.g. *\"I write R code in the RStudio IDE\"*\n-   RStudio is not a requirement for programming with R, but it's very commonly used by R programmers and data scientists\n:::\n:::\n\n## R vs. RStudio\n\n[![](images/01/r_vs_rstudio.png){fig-alt=\"On the left: a car engine. On the right: a car dashboard. The engine is labelled R. The dashboard is labelled RStudio.\" fig-align=\"center\" width=\"1001\"}](https://moderndive.com/1-getting-started.html)\n\n::: aside\nSource: [Modern Dive](https://moderndive.com/1-getting-started.html).\n:::\n\n## R packages {.smaller}\n\n::: incremental\n-   **Packages**: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data<sup>1</sup>\n\n-   As of 27 August 2024, there are 21,168 R packages available on **CRAN** (the Comprehensive R Archive Network)<sup>2</sup>\n\n-   We're going to work with a small (but important) subset of these!\n:::\n\n::: aside\n<sup>1</sup> Wickham and Bryan, [R Packages](https://r-pkgs.org/).\n\n<sup>2</sup> [CRAN contributed packages](https://cran.r-project.org/web/packages/).\n:::\n\n## Tour: R + RStudio {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n::: demo\n**Option 1:**\n\nSit back and enjoy the show!\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: appex\n**Option 2:**\n\nGo to [your container](https://cmgr.oit.duke.edu/containers) and launch RStudio.\n:::\n:::\n:::\n\n## Tour recap: R + RStudio\n\n![](images/01/tour-r-rstudio.png)\n\n# A short list<br>(for now)<br>of R essentials\n\n## Packages {.smaller}\n\n-   Installed with `install.packages()`, once per system:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"palmerpenguins\")\n```\n:::\n\n\n\n\n::: callout-note\nWe already pre-installed many of the package you'll need for this course, so you might go the whole semester without needing to run `install.packages()`!\n:::\n\n. . .\n\n-   Loaded with `library()`, once per session:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n:::\n\n\n\n\n## Packages, an analogy\n\nIf data analysis was cooking...\n\n::: incremental\n-   Installing a package would be like buying ingredients from the store\n\n-   Loading a package would be like getting the ingredients out of your pantry and setting them on your counter top to be used\n:::\n\n## tidyverse\n\n::: hand\naka the package you'll hear about the most...\n:::\n\n::: columns\n::: {.column width=\"40%\"}\n[![](images/01/tidyverse.png){fig-alt=\"Hex logos for dplyr, ggplot2, forcats, tibble, readr, stringr, tidyr, and purrr\"}](https://tidyverse.org)\n:::\n\n::: {.column .fragment width=\"60%\"}\n[tidyverse.org](https://www.tidyverse.org/)\n\n-   The **tidyverse** is an opinionated collection of R packages designed for data science\n-   All packages share an underlying philosophy and a common grammar\n:::\n:::\n\n## Data frames and variables\n\n-   Each row of a data frame is an **observation**\n\n. . .\n\n-   Each column of a data frame is a **variable**\n\n. . .\n\n-   Columns (variables) in data frames can be accessed with `$`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataframe$variable_name\n```\n:::\n\n\n\n\n## `penguins` data frame\n\n\n\n\n::: {.cell}\n```{webr}\npenguins\n```\n:::\n\n\n\n\n## `bill_length_mm`\n\n\n\n\n::: {.cell}\n```{webr}\npenguins$bill_length_mm\n```\n:::\n\n\n\n\n## `flipper_length_mm` {.smaller}\n\n::: task\nFirst, run the code below and read the error.\nThen, fix the code to access the `flipper_length_mm` variable in the `penguins` data frame.\n:::\n\n\n\n\n::: {.cell}\n```{webr}\nflipper_length_mm\n```\n:::\n\n\n\n\n## `function(argument)`\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n```\n:::\n\n\n\n\n## `trim`med `mean()`\n\n\n\n\n::: {.cell}\n```{webr}\nx <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 100)\nx\n```\n:::\n\n::: {.cell}\n```{webr}\nmean(x)\n```\n:::\n\n::: {.cell}\n```{webr}\nmean(x, trim = 0.05)\n```\n:::\n\n\n\n\n## Help\n\nObject documentation can be accessed with `?`\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?mean\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n![](images/01/mean-docs.mov){fig-alt=\"Documentation for mean function in R.\"}\n:::\n:::\n\n## A pause -- Common birthdays {{< fa cake-candles >}} {.smaller}\n\n::: hand\nI cleaned up your data!\n:::\n\n. . .\n\n::: hand\nNo thanks to the people who responded \"yo\" or \"The fifth day in the month of October!!\" or \"may twentieth\"!\nðŸ¤£\n:::\n\n. . .\n\n::: columns\n::: column\nDates with more than one student with a birthday:\n:::\n\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 65 Ã— 2\n   birthday     n\n   <chr>    <int>\n 1 04-05        4\n 2 04-15        4\n 3 05-20        4\n 4 06-18        4\n 5 10-25        4\n 6 01-24        3\n 7 03-15        3\n 8 03-29        3\n 9 04-19        3\n10 04-22        3\n11 05-15        3\n12 06-25        3\n13 07-26        3\n14 08-29        3\n15 09-11        3\n16 11-19        3\n17 12-20        3\n18 01-07        2\n19 01-08        2\n20 01-13        2\n21 01-20        2\n22 01-21        2\n23 01-23        2\n24 01-25        2\n25 01-27        2\n26 02-07        2\n27 02-18        2\n28 03-07        2\n29 03-14        2\n30 03-16        2\n31 03-22        2\n32 03-23        2\n33 03-28        2\n34 03-30        2\n35 04-06        2\n36 04-12        2\n37 05-01        2\n38 05-05        2\n39 05-11        2\n40 05-12        2\n41 05-28        2\n42 05-30        2\n43 06-02        2\n44 06-04        2\n45 06-28        2\n46 07-22        2\n47 08-09        2\n48 08-16        2\n49 09-04        2\n50 09-15        2\n51 09-17        2\n52 09-19        2\n53 09-28        2\n54 09-30        2\n55 10-12        2\n56 10-14        2\n57 10-28        2\n58 11-03        2\n59 11-06        2\n60 11-07        2\n61 11-14        2\n62 11-16        2\n63 11-17        2\n64 11-21        2\n65 12-03        2\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n# Toolkit: Version control and collaboration\n\n## Git and GitHub {.smaller}\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n![](images/01/git-logo.png){fig-alt=\"Git logo\" fig-align=\"center\" width=\"150\"}\n\n-   Git is a version control system -- like \"Track Changes\" features from Microsoft Word, on steroids\n-   It's not the only version control system, but it's a very popular one\n:::\n\n::: {.column .fragment width=\"50%\"}\n![](images/01/github-logo.png){fig-alt=\"GitHub logo\" fig-align=\"center\" width=\"150\"}\n\n-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better\n\n-   We will use GitHub as a platform for web hosting and collaboration (and as our course management system!)\n:::\n:::\n\n## Versioning - done badly\n\n![](images/01/phd_comics_vc.gif){fig-align=\"center\"}\n\n## Versioning - done better\n\n![](images/01/lego-steps.png){fig-align=\"center\"}\n\n## Versioning - done even better\n\n::: hand\nwith human readable messages\n:::\n\n![](images/01/lego-steps-commit-messages.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/01/whole-game-01.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/01/whole-game-02.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/01/whole-game-03.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/01/whole-game-04.png){fig-align=\"center\"}\n\n## Git and GitHub tips {.smaller}\n\n::: incremental\n-   There are millions of git commands -- ok, that's an exaggeration, but there are a lot of them -- and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\n-   We will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line -- skip that and move on to the next resource unless you feel comfortable trying it out.\n-   There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). Some of the content in there is beyond the scope of this course, but it's a good place to look for help.\n:::\n\n## Tour: Git + GitHub {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n::: demo\n**Option 1:**\n\nSit back and enjoy the show!\n\n:::\n\n::: callout-note\nYou'll need to stick to this option if you haven't yet accepted your GitHub invite and don't have a repo created for you.\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n::: appex\n**Option 2:**\n\nGo to the [course GitHub organization](https://github.com/sta199-f24) and clone `ae-your_github_name` repo to [your container](https://cmgr.oit.duke.edu/containers).\n:::\n:::\n:::\n\n## Tour recap: Git + GitHub {.smaller}\n\n-   Find your application repo, that will always be named using the naming convention `assignment_title-your_github_name`\n\n-   Click on the green \"Code\" button, make sure SSH is selected, copy the repo URL\n\n![](images/01/tour-git-github-1.png){fig-align=\"center\" width=\"1000\"}\n\n## Tour recap: Git + GitHub {.smaller}\n\n-   In RStudio, File \\> New Project \\> From Version Control \\> Git\n-   Paste repo URL copied in previous step, then click tab to auto-fill the project name, then click Create Project\n-   **For one time only**, type `yes` in the pop-up dialogue\n\n![](images/01/tour-git-github-2.mov){fig-align=\"center\" width=\"600\"}\n\n## What could have gone wrong?\n\n- Never received GitHub invite $\\rightarrow$ Fill out \"Getting to know you survey\n\n- Never accepted GitHub invite $\\rightarrow$ Look for it in your email and accept it\n\n- Cloning repo fails $\\rightarrow$ Review/redo Lab 0 steps for setting up SSH key\n\n- Still no luck? Come by my office today (Thursday, 8/29) between 4-5pm or post on Ed for help\n\n# Quarto\n\n## Quarto\n\n::: incremental\n-   Fully reproducible reports -- each time you render the analysis is ran from the beginning\n-   Code goes in chunks narrative goes outside of chunks\n-   A visual editor for a familiar / Google docs-like editing experience\n:::\n\n## Tour: Quarto {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n::: demo\n**Option 1:**\n\nSit back and enjoy the show!\n:::\n\n::: callout-note\nIf you chose (or had to choose) this option for the previous tour, or if you couldn't clone your repo for any reason, you'll need to stick to this option.\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: appex\n**Option 2:**\n\nGo to RStudio and open the document `ae-01-meet-the-penguins.qmd`.\n\n:::\n:::\n:::\n\n## Tour recap: Quarto\n\n![](images/01/tour-quarto.png){fig-alt=\"RStudio IDE with a Quarto document, source code on the left and output on the right. Annotated to show the YAML, a link, a header, and a code chunk.\" fig-align=\"center\"}\n\n## Tour recap: Git + GitHub {.smaller}\n\nOnce we made changes to our Quarto document, we\n\n- went to the Git pane in RStudio\n\n- staged our changes by clicking the checkboxes next to the relevant files\n\n- committed our changes with an informative commit message\n\n- pushed our changes to our application exercise repos\n\n- confirmed on GitHub that we could see our changes pushed from RStudio\n\n## How will we use Quarto?\n\n-   Every application exercise, lab, project, etc. is an Quarto document\n-   You'll always have a template Quarto document to start with\n-   The amount of scaffolding in the template will decrease over the semester\n\n## What's with all the hexes?\n\n![](images/01/hexes.jpeg){fig-alt=\"Hex logos for many packages\" fig-align=\"center\"}\n\n## We have hexes too!\n\n::: task\nGrab one before you leave!\n:::\n\n::: center-align\n![](images/logo.png){fig-alt=\"STA 199 hex logo\"}\n:::\n",
    "supporting": [
      "01-meet-the-toolkit_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}