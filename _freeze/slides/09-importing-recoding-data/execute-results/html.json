{
  "hash": "c10e441e1446fefa7986ef1193ad5782",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Importing and recoding data\"\nsubtitle: \"Lecture 9\"\ndate: \"2024-09-26\"\nformat: \n  live-revealjs: \n    output-file: 09-importing-recoding-data-slides.html\n    webr:\n      cell-options:\n        autorun: false\n---\n\n\n\n\n<!-- begin: webr fodder -->\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(width = 60)\n```\n:::\n\n\n\n\n<!-- end: webr fodder -->\n\n<!--# hello -->\n\n<!-- begin: ae definition -->\n\n\n\n\n\n\n\n\n\n<!-- end: ae definition -->\n\n# Warm-up\n\n## While you wait... {.smaller}\n\n::: appex\n-   Go to your `ae` project in RStudio.\n\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   Click Pull to get today's application exercise file: *ae\\-09\\-age\\-gaps\\-sales\\-import\\.qmd*.\n\n-   Wait till the you're prompted to work on the application exercise during class before editing the file.\n:::\n\n# From last time\n\n## Finish up: `ae-08-durham-climate-factors`\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   Open `ae-08-durham-climate-factors.qmd` and pick up at \"Recode and reorder\".\n:::\n\n# Reading data into R\n\n## Reading rectangular data\n\n-   Using [**readr**](https://readr.tidyverse.org/):\n    -   Most commonly: `read_csv()`\n    -   Maybe also: `read_tsv()`, `read_delim()`, etc.\n\n. . .\n\n-   Using [**readxl**](https://readxl.tidyverse.org/): `read_excel()`\n\n. . .\n\n-   Using [**googlesheets4**](https://googlesheets4.tidyverse.org/): `read_sheet()` -- We haven't covered this in the videos, but might be useful for your projects\n\n# Application exercise\n\n## Goal 1: Reading and writing CSV files\n\n-   Read a CSV file\n\n-   Split it into subsets based on features of the data\n\n-   Write out subsets as CSV files\n\n## Age gap in Hollywood relationships {.smaller}\n\n:::::: columns\n:::: {.column width=\"25%\"}\n::: question\nWhat is the story in this visualization?\n:::\n::::\n\n::: {.column width=\"75%\"}\n![](images/09/hollywood-ages.jpeg){fig-align=\"center\" width=\"600\"}\n:::\n::::::\n\n## ae\\-09\\-age\\-gaps\\-sales\\-import - Part 1 {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-09\\-age\\-gaps\\-sales\\-import\\.qmd*.\n\n-   Work through **Part 1** of the application exercise in class, and render, commit, and push your edits.\n:::\n\n## Goal 2: Reading Excel files\n\n-   Read an Excel file with non-tidy data\n\n-   Tidy it up!\n\n## Sales data\n\n![](images/09/sales-excel.png)\n\n. . .\n\n::: question\nAre these data tidy?\nWhy or why not?\n:::\n\n## Sales data\n\n::: question\nWhat \"data moves\" do we need to go from the original, non-tidy data to this, tidy one?\n:::\n\n![](images/09/sales-2.png){width=\"150\"}\n\n## ae\\-09\\-age\\-gaps\\-sales\\-import - Part 2 {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-09\\-age\\-gaps\\-sales\\-import\\.qmd*.\n\n-   Work through **Part 2** of the application exercise in class, and render, commit, and push your edits.\n:::\n",
    "supporting": [
      "09-importing-recoding-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}