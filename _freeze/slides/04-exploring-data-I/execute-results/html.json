{
  "hash": "c41fe3f7ff83e3d531c0ef4d9661edb6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploring data I\"\nsubtitle: \"Lecture 4\"\ndate: \"2024-09-10\"\nformat: \n  live-revealjs: \n    output-file: 04-exploring-data-slides.html\n    webr:\n      cell-options:\n        autorun: false\nwebr:\n  packages:\n    - tidyverse\n    - ggthemes\n    - usdata\n---\n\n\n\n\n<!-- begin: webr fodder -->\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(width = 60)\n```\n:::\n\n\n\n\n<!-- end: webr fodder -->\n\n<!-- begin: ae definition -->\n\n\n\n\n\n\n\n\n\n<!-- end: ae definition -->\n\n# Warm-up\n\n## While you wait... {.smaller}\n\nPrepare for today's application exercise: **ae\\-04\\-gerrymander\\-explore\\-I**\n\n::: appex\n-   Go to your `ae` project in RStudio.\n\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   Click Pull to get today's application exercise file: *ae\\-04\\-gerrymander\\-explore\\-I\\.qmd*.\n\n-   Wait till the you're prompted to work on the application exercise during class before editing the file.\n:::\n\n## Announcements {.smaller}\n\n::: incremental\n-   **Weekend office hours** in Old Chem – bring your Duke Card, you'll need to swipe/tap in to get in\n\n-   **AEs are due by the end of class** (precisely, by 2 pm) – done = at least one commit + push\n\n-   **Coding principles bonus office hour**, RSVP at <https://forms.gle/mufcsHnPXejZbkdT8> – Thursday, 9/12 at 7:30 pm at Old Chem 116\n\n-   **RStudio visual editor acting up?**\n\n    -   Using Chrome – make sure to update!\n\n    -   Using another browser or update doesn't solve the problem, come by my office hours to diagnose\n\n-   New resource: **Code along videos**\n\n-   Any **questions about lab** before we get started?\n:::\n\n# Exploratory data analysis\n\n## Packages {.smaller}\n\n-   For the data: [**usdata**](https://openintrostat.github.io/usdata/)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(usdata)\n```\n:::\n\n\n\n\n-   For the analysis: [**tidyverse**](https://www.tidyverse.org/packages/) and [**ggthemes**](https://jrnold.github.io/ggthemes/)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ──────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggthemes)\n```\n:::\n\n\n\n\n## Data: `gerrymander` {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngerrymander\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 435 × 12\n   district last_name first_name party16 clinton16 trump16 dem16 state\n   <chr>    <chr>     <chr>      <chr>       <dbl>   <dbl> <dbl> <chr>\n 1 AK-AL    Young     Don        R            37.6    52.8     0 AK   \n 2 AL-01    Byrne     Bradley    R            34.1    63.5     0 AL   \n 3 AL-02    Roby      Martha     R            33      64.9     0 AL   \n 4 AL-03    Rogers    Mike D.    R            32.3    65.3     0 AL   \n 5 AL-04    Aderholt  Rob        R            17.4    80.4     0 AL   \n 6 AL-05    Brooks    Mo         R            31.3    64.7     0 AL   \n 7 AL-06    Palmer    Gary       R            26.1    70.8     0 AL   \n 8 AL-07    Sewell    Terri      D            69.8    28.6     1 AL   \n 9 AR-01    Crawford  Rick       R            30.2    65       0 AR   \n10 AR-02    Hill      French     R            41.7    52.4     0 AR   \n# ℹ 425 more rows\n# ℹ 4 more variables: party18 <chr>, dem18 <dbl>, flip18 <dbl>,\n#   gerry <fct>\n```\n\n\n:::\n:::\n\n\n\n\n## What is gerrymandering?\n\n\n\n\n```{=html}\n<iframe width=\"900\" height=\"500\" src=\"https://www.washingtonpost.com/business/wonkblog/gerrymandering-explained/2016/04/21/e447f5c2-07fe-11e6-bfed-ef65dff5970d_video.html\" title=\"What is gerrymandering?\"></iframe>\n```\n\n\n\n## Data: `gerrymander` {.scrollable .smaller}\n\n::: question\nWhat is a good first function to use to get to know a dataset?\n:::\n\n\n\n\n::: {.cell}\n```{webr}\n\n```\n:::\n\n\n\n\n## Data: `gerrymander` {.smaller}\n\n-   Rows: Congressional districts\n\n-   Columns:\n\n    -   Congressional district and state\n\n    -   2016 election: winning party, % for Clinton, % for Trump, whether a Democrat won the House election, name of election winner\n\n    -   2018 election: winning party, whether a Democrat won the 2016 House election\n\n    -   Whether a Democrat flipped the seat in the 2018 election\n\n    -   Prevalence of gerrymandering: low, mid, and high\n\n## Variable types\n\n::: columns\n::: column\n::: xsmall\n| Variable     | Type                               |\n|--------------|------------------------------------|\n| `district`   | [categorical, ID]{.fragment}       |\n| `last_name`  | [categorical, ID]{.fragment}       |\n| `first_name` | [categorical, ID]{.fragment}       |\n| `party16`    | [categorical]{.fragment}           |\n| `clinton16`  | [numerical, continuous]{.fragment} |\n| `trump16`    | [numerical, continuous]{.fragment} |\n| `dem16`      | [categorical]{.fragment}           |\n| `state`      | [categorical]{.fragment}           |\n| `party18`    | [categorical]{.fragment}           |\n| `dem18`      | [categorical]{.fragment}           |\n| `flip18`     | [categorical]{.fragment}           |\n| `gerry`      | [categorical, ordinal]{.fragment}  |\n:::\n:::\n\n::: column\n\n\n\n::: {.cell}\n```{webr}\ngerrymander |>\n  select(___)\n```\n:::\n\n\n\n:::\n:::\n\n# Univariate analysis\n\n## Univariate analysis\n\nAnalyzing a single variable:\n\n::: incremental\n-   Numerical: histogram, box plot, density plot, etc.\n\n-   Categorical: bar plot, pie chart, etc.\n:::\n\n## Histogram - Step 1 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander)\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n\n## Histogram - Step 2 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = trump16))\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n\n## Histogram - Step 3 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n\n## Histogram - Step 4 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n```{webr}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_histogram(binwidth = ___)\n```\n:::\n\n\n\n\n## Histogram - Step 5 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-8\"}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_histogram(binwidth = 5) +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = \"Count\"\n  )\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\n\n## Box plot - Step 1 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander)\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n\n## Box plot - Step 2 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = trump16))\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n\n## Box plot - Step 3 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n\n\n## Box plot - Alternative Step 2 + 3 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n```{webr}\nggplot(gerrymander, aes(___ = trump16)) +\n  geom_boxplot()\n```\n:::\n\n\n\n\n## Box plot - Step 4 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-8\"}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_boxplot() +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = NULL\n  )\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n\n## Density plot - Step 1 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander)\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n\n\n## Density plot - Step 2 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gerrymander, aes(x = trump16))\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n\n## Density plot - Step 3 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n\n## Density plot - Step 4 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n```{webr}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density(color = ___)\n```\n:::\n\n\n\n\n## Density plot - Step 5 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n```{webr}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density(color = \"firebrick\", fill = ___)\n```\n:::\n\n\n\n\n## Density plot - Step 6 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n```{webr}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density(color = \"firebrick\", fill = \"firebrick1\", alpha = ___)\n```\n:::\n\n\n\n\n## Density plot - Step 7 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n```{webr}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density(color = \"firebrick\", fill = \"firebrick1\", alpha = 0.5, linewidth = ___)\n```\n:::\n\n\n\n\n## Density plot - Step 8 {.smaller .scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-8\"}\nggplot(gerrymander, aes(x = trump16)) +\n  geom_density(color = \"firebrick\", fill = \"firebrick1\", alpha = 0.5, linewidth = 2) +\n  labs(\n    title = \"Percent of vote received by Trump in 2016 Presidential Election\",\n    subtitle = \"From each Congressional District\",\n    x = \"Percent of vote\",\n    y = \"Density\"\n  )\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n\n\n## Summary statistics\n\n\n\n\n::: {.cell autorun='true'}\n```{webr}\n#| autorun: true\ngerrymander |>\n  summarize(\n    mean = mean(trump16),\n    median = median(trump16)\n  )\n```\n:::\n\n\n\n\n## Distribution of votes for Trump in the 2016 election {.smaller}\n\n::: question\nDescribe the distribution of percent of vote received by Trump in 2016 Presidential Election from Congressional Districts.\n:::\n\n-   Shape: [The distribution of votes for Trump in the 2016 election from Congressional Districts is **unimodal and right-skewed**.]{.fragment}\n\n-   Center: [The percent of vote received by Trump in the 2016 Presidential Election from a **typical** Congressional Districts is 48.7%.]{.fragment}\n\n-   Spread: [In the **middle 50%** of Congressional Districts, 34.8% to 58.1% of voters voted for Trump in the 2016 Presidential Election.]{.fragment}\n\n-   Unusual observations: [-]{.fragment}\n\n# Bivariate analysis\n\n## Bivariate analysis\n\nAnalyzing the relationship between two variables:\n\n::: incremental\n-   Numerical + numerical: scatterplot\n\n-   Numerical + categorical: side-by-side box plots, violin plots, etc.\n\n-   Categorical + categorical: stacked bar plots\n\n-   Using an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot\n:::\n\n## Side-by-side box plots\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|2|3-6|4|5|8\"}\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    y = gerry\n    )\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n\n\n\n## Summary statistics\n\n\n\n\n::: {.cell}\n```{webr}\ngerrymander |>\n  # do the following for each level of gerry\n  summarize(\n    min = min(trump16),\n    q25 = quantile(trump16, 0.25),\n    median = median(trump16),\n    q75 = quantile(trump16, 0.75),\n    max = max(trump16),\n  )\n```\n:::\n\n\n\n\n## Density plots\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|4|5|8\"}\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    color = gerry\n    )\n  ) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n\n\n## Filled density plots\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  gerrymander, \n  aes(\n    x = trump16, \n    color = gerry,\n    fill = gerry\n    )\n  ) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n\n\n## Better filled density plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  gerrymander, \n  aes(x = trump16, color = gerry, fill = gerry)\n  ) +\n  geom_density(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n\n\n## Better colors\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7-8\"}\nggplot(\n  gerrymander, \n  aes(x = trump16, color = gerry, fill = gerry)\n  ) +\n  geom_density(alpha = 0.5) +\n  scale_color_colorblind() +\n  scale_fill_colorblind()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-33-1.png){width=960}\n:::\n:::\n\n\n\n\n## Violin plots {.scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-34-1.png){width=960}\n:::\n:::\n\n\n\n\n## Multiple geoms {.scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_point() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-35-1.png){width=960}\n:::\n:::\n\n\n\n\n## Multiple geoms {.scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  scale_color_colorblind() +\n  scale_fill_colorblind()\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n\n\n## Remove legend {.scrollable}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n  gerrymander, \n  aes(x = trump16, y = gerry, color = gerry)\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  scale_color_colorblind() +\n  scale_fill_colorblind() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](04-exploring-data-I_files/figure-revealjs/unnamed-chunk-37-1.png){width=960}\n:::\n:::\n\n\n\n\n# Multivariate analysis\n\n## Multivariate analysis {.smaller}\n\nAnalyzing the relationship between multiple variables:\n\n::: incremental\n-   In general, one variable is identified as the **outcome** of interest\n\n-   The remaining variables are **predictors** or **explanatory variables**\n\n-   Plots for exploring multivariate relationships are the same as those for bivariate relationships, but **conditional** on one or more variables\n\n    -   Conditioning can be done via faceting or aesthetic mappings (e.g., scatterplot of `y` vs. `x1`, colored by `x2`, faceted by `x3`)\n\n-   Summary statistics for exploring multivariate relationships are the same as those for bivariate relationships, but **conditional** on one or more variables\n\n    -   Conditioning can be done via grouping (e.g., correlation between `y` and `x1`, grouped by levels of `x2` and `x3`)\n:::\n\n# Application exercise\n\n## ae\\-04\\-gerrymander\\-explore\\-I {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-04\\-gerrymander\\-explore\\-I\\.qmd*.\n\n-   Work through the application exercise in class, and render, commit, and push your edits by the end of class.\n:::\n",
    "supporting": [
      "04-exploring-data-I_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}