{
  "hash": "1aae6b151b1583ee3071847b5935952e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grammar of data transformation\"\nsubtitle: \"Lecture 3\"\ndate: \"2024-09-05\"\nformat: \n  live-revealjs: \n    output-file: 03-grammar-of-data-transformation-slides.html\n    webr:\n      cell-options:\n        autorun: false\nwebr:\n  packages:\n    - tidyverse\n  resources:\n    - https://raw.githubusercontent.com/sta199-f24/sta199-f24.github.io/main/slides/data/bechdel.csv\n---\n\n\n\n\n\n\n\n\n\n<!-- begin: webr fodder -->\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(width = 60)\n\nbechdel <- read_csv(\"bechdel.csv\")\n```\n:::\n\n\n\n\n\n\n\n\n\n<!-- end: webr fodder -->\n\n# Warm-up\n\n## Announcements {.smaller}\n\n-   AE 01 and AE 02 suggested answers posted on the course website.\n\n-   Ed Discussion posts:\n\n    -   Keep them coming!\n    -   Keep them public!\n    -   Feel free to make them anonymous if you prefer.\n\n-   Monday's lab:\n\n    -   Show up on time\n    -   Show up to learn and get support\n    -   Leave with all questions answered and a plan to work on the lab throughout the week\n\n# From last time\n\n## `ae-02-bechdel-dataviz`\n\n::: appex\nGo to RStudio, confirm that you're in the `ae` project, and open the document ae-02-bechdel-dataviz`.qmd`.\n:::\n\n## Recap: Code cells (aka code chunks) {.smaller}\n\n![](images/03/code-cell.png) . . .\n\n-   Cell `label`s are helpful for describing what the code is doing, for jumping between code cells in the editor, and for troubleshooting\n\n-   `message: false` hides any messages emitted by the code in your rendered document\n\n# Application exercise\n\n## `ae-03-bechdel-data-viz-transform` {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: `ae-03-bechdel-data-viz-transform.qmd`.\n\n-   Work through the application exercise in class, and render, commit, and push your edits by the end of class.\n:::\n\n# Data transformation\n\n## A quick reminder {.smaller}\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbechdel |> # <1>\n  filter(roi > 400) |> # <2>\n  select(title, roi, budget_2013, gross_2013, year, clean_test) # <3>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  title                    roi budget_2013 gross_2013  year clean_test\n  <chr>                  <dbl>       <dbl>      <dbl> <dbl> <chr>     \n1 Paranormal Activity     671.      505595  339424558  2007 dubious   \n2 The Blair Witch Proje…  648.      839077  543776715  1999 ok        \n3 El Mariachi             583.       11622    6778946  1992 nowomen   \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n1.  Start with the `bechdel` data frame\n2.  Filter for movies with `roi` greater than 400 (gross is more than 400 times budget)\n3.  Select the columns `title`, `roi`, `budget_2013`, `gross_2013`, `year`, and `clean_test`\n\n## The pipe `|>` {.smaller}\n\nThe pipe operator passes what comes before it into the function that comes after it as the first argument in that function.\n\n::: columns\n::: {.column .fragment width=\"55%\"}\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(1, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n:::\n\n::: {.column .fragment width=\"45%\"}\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 |> \n  sum(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n:::\n:::\n\n<br>\n\n::: columns\n::: {.column .fragment width=\"55%\"}\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(filter(bechdel, roi > 400), title)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n  title                  \n  <chr>                  \n1 Paranormal Activity    \n2 The Blair Witch Project\n3 El Mariachi            \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n:::\n\n::: {.column .fragment width=\"45%\"}\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbechdel |>\n  filter(roi > 400) |>\n  select(title)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n  title                  \n  <chr>                  \n1 Paranormal Activity    \n2 The Blair Witch Project\n3 El Mariachi            \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n:::\n:::\n\n## Code style tip {{< fa lightbulb >}} {.smaller}\n\n-   In data transformation pipelines, always use a\n    -   space before `|>`\n    -   line break after `|>`\n    -   indent the next line of code\n\n. . .\n\n-   In data visualization layers, always use a\n    -   space before `+`\n    -   line break after `+`\n    -   indent the next line of code\n\n## The pipe, in action {.smaller}\n\n::: task\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n:::\n\n. . .\n\nStart with the `bechdel` data frame:\n\n\n\n\n\n\n\n\n\n::: {.cell}\n```{webr}\nbechdel\n```\n:::\n\n\n\n\n\n\n\n\n\n## The pipe, in action {.smaller}\n\n::: task\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n:::\n\nFilter for rows where `binary` is equal to `\"PASS\"`:\n\n\n\n\n\n\n\n\n\n::: {.cell}\n```{webr}\nbechdel |>\n  filter(binary == \"PASS\")\n```\n:::\n\n\n\n\n\n\n\n\n\n## The pipe, in action {.smaller}\n\n::: task\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n:::\n\nArrange the rows in `desc`ending order of `roi`:\n\n\n\n\n\n\n\n\n\n::: {.cell}\n```{webr}\nbechdel |>\n  filter(binary == \"PASS\") |>\n  arrange(desc(roi))\n```\n:::\n\n\n\n\n\n\n\n\n\n## The pipe, in action {.smaller}\n\n::: task\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n:::\n\nSelect columns `title` and `roi`:\n\n\n\n\n\n\n\n\n\n::: {.cell}\n```{webr}\nbechdel |>\n  filter(binary == \"PASS\") |>\n  arrange(desc(roi)) |>\n  select(title, roi)\n```\n:::\n\n\n\n\n\n\n\n\n\n## Time permitting {.smaller}\n\n::: task\nAsk another question of the data that can be answered with a data transformation pipeline.\n:::\n\n\n\n\n\n\n\n\n\n::: {.cell}\n```{webr}\nbechdel |>\n  ___\n```\n:::\n",
    "supporting": [
      "03-grammar-of-data-transformation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}