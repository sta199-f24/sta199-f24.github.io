{
  "hash": "10481f0a9c61efbdc9517aaecee1c021",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grammar of data transformation\"\nsubtitle: \"Lecture 3\"\ndate: \"2024-09-04\"\nformat: \n  live-revealjs: \n    output-file: 03-grammar-of-data-transformation-slides.html\nwebr:\n  cell-options:\n    autorun: false\n---\n\n\n\n\n\n\n<!-- begin: webr fodder -->\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(width = 60)\n```\n:::\n\n\n\n\n\n\n<!-- end: webr fodder -->\n\n# Warm-up\n\n## Announcements {.smaller}\n\n-   Ed Discussion posts:\n\n    -   Keep them coming!\n    -   Keep them public!\n    -   Feel free to make them anonymous if you prefer.\n\n-   Monday's lab:\n\n    -   Show up on time\n    -   Show up to learn and get support\n    -   Leave with all questions answered and a plan to work on the lab throughout the week\n\n# From last time\n\n## `ae-02-bechdel-dataviz`\n\n::: appex\nGo to RStudio, confirm that you're in the `ae` project, and open the document ae-02-bechdel-dataviz`.qmd`.\n:::\n\n## Recap: Code cells (aka code chunks) {.smaller}\n\n![](images/03/code-cell.png) . . .\n\n-   Cell `label`s are helpful for describing what the code is doing, for jumping between code cells in the editor, and for troubleshooting\n\n-   `message: false` hides any messages emitted by the code in your rendered document\n\n# Application exercise\n\n`ae-03-bechdel-data-viz-transform`\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: `ae-03-bechdel-data-viz-transform.qmd`.\n\n-   Work through the application exercise in class, and render, commit, and push your edits by the end of class.\n:::\n\n# Data transformation\n\n## A quick reminder {.smaller}\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbechdel |> # <1>\n  filter(roi > 400) |> # <2>\n  select(title, roi, budget_2013, gross_2013, year, clean_test) # <3>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  title                    roi budget_2013 gross_2013  year clean_test\n  <chr>                  <dbl>       <dbl>      <dbl> <dbl> <chr>     \n1 Paranormal Activity     671.      505595  339424558  2007 dubious   \n2 The Blair Witch Proje…  648.      839077  543776715  1999 ok        \n3 El Mariachi             583.       11622    6778946  1992 nowomen   \n```\n\n\n:::\n:::\n\n\n\n\n\n\n1.  Start with the `bechdel` data frame\n2.  Filter for movies with `roi` greater than 400 (gross is more than 400 times budget)\n3.  Select the columns `title`, `roi`, `budget_2013`, `gross_2013`, `year`, and `clean_test`\n\n## The pipe `|>` {.smaller}\n\nThe pipe operator passes what comes before it into the function that comes after it as the first argument in that function.\n\n::: columns\n::: {.column .fragment width=55%}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(1, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n::: {.column .fragment width=45%}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 |> \n  sum(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n<br>\n\n::: columns\n::: {.column .fragment width=55%}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(filter(bechdel, roi > 400), title)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n  title                  \n  <chr>                  \n1 Paranormal Activity    \n2 The Blair Witch Project\n3 El Mariachi            \n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n::: {.column .fragment width=45%}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbechdel |>\n  filter(roi > 400) |>\n  select(title)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n  title                  \n  <chr>                  \n1 Paranormal Activity    \n2 The Blair Witch Project\n3 El Mariachi            \n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n## Code style tip {{< fa lightbulb >}} {.smaller}\n\n-   In data transformation pipelines, always use a\n    - space before `|>`\n    - line break after `|>`\n    - indent the next line of code\n\n. . .\n\n-   In data visualization layers, always use a\n    - space before `+`\n    - line break after `+`\n    - indent the next line of code\n\n## The pipe, in action {.smaller}\n\n::: task\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n:::\n\n. . .\n\nStart with the `bechdel` data frame:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbechdel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,615 × 7\n   title          year gross_2013 budget_2013    roi binary clean_test\n   <chr>         <dbl>      <dbl>       <dbl>  <dbl> <chr>  <chr>     \n 1 21 & Over      2013   67878146    13000000  5.22  FAIL   notalk    \n 2 Dredd 3D       2012   55078343    45658735  1.21  PASS   ok        \n 3 12 Years a S…  2013  211714070    20000000 10.6   FAIL   notalk    \n 4 2 Guns         2013  208105475    61000000  3.41  FAIL   notalk    \n 5 42             2013  190040426    40000000  4.75  FAIL   men       \n 6 47 Ronin       2013  184166317   225000000  0.819 FAIL   men       \n 7 A Good Day t…  2013  371598396    92000000  4.04  FAIL   notalk    \n 8 About Time     2013  102648667    12000000  8.55  PASS   ok        \n 9 Admission      2013   36014634    13000000  2.77  PASS   ok        \n10 After Earth    2013  304895295   130000000  2.35  FAIL   notalk    \n# ℹ 1,605 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## The pipe, in action {.smaller}\n\n::: task\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n:::\n\nFilter for rows where `binary` is equal to `\"PASS\"`:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nbechdel |>\n  filter(binary == \"PASS\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 753 × 7\n   title           year gross_2013 budget_2013   roi binary clean_test\n   <chr>          <dbl>      <dbl>       <dbl> <dbl> <chr>  <chr>     \n 1 Dredd 3D        2012   55078343    45658735  1.21 PASS   ok        \n 2 About Time      2013  102648667    12000000  8.55 PASS   ok        \n 3 Admission       2013   36014634    13000000  2.77 PASS   ok        \n 4 American Hust…  2013  397915817    40000000  9.95 PASS   ok        \n 5 August: Osage…  2013   87609748    25000000  3.50 PASS   ok        \n 6 Beautiful Cre…  2013   75392809    50000000  1.51 PASS   ok        \n 7 Blue Jasmine    2013  101793664    18000000  5.66 PASS   ok        \n 8 Carrie          2013  120268278    30000000  4.01 PASS   ok        \n 9 Despicable Me…  2013 1338831390    76000000 17.6  PASS   ok        \n10 Elysium         2013  379242208   120000000  3.16 PASS   ok        \n# ℹ 743 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## The pipe, in action {.smaller}\n\n::: task\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n:::\n\nArrange the rows in `desc`ending order of `roi`:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nbechdel |>\n  filter(binary == \"PASS\") |>\n  arrange(desc(roi))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 753 × 7\n   title           year gross_2013 budget_2013   roi binary clean_test\n   <chr>          <dbl>      <dbl>       <dbl> <dbl> <chr>  <chr>     \n 1 The Blair Wit…  1999  543776715      839077 648.  PASS   ok        \n 2 The Devil Ins…  2012  157289709     1014639 155.  PASS   ok        \n 3 My Big Fat Gr…  2002  768922942     6475896 119.  PASS   ok        \n 4 Chasing Amy     1997   39417963      362810 109.  PASS   ok        \n 5 Slacker         1991    4200140       39349 107.  PASS   ok        \n 6 Insidious       2010  164379554     1602348 103.  PASS   ok        \n 7 Paranormal Ac…  2010  280159759     3204696  87.4 PASS   ok        \n 8 Paranormal Ac…  2011  322170936     5178454  62.2 PASS   ok        \n 9 The Last Exor…  2010  118787648     1922817  61.8 PASS   ok        \n10 Cinderella      1997  246710482     4208591  58.6 PASS   ok        \n# ℹ 743 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## The pipe, in action {.smaller}\n\n::: task\nFind movies that pass the Bechdel test and display their titles and ROIs in descending order of ROI.\n:::\n\nSelect columns `title` and `roi`:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nbechdel |>\n  filter(binary == \"PASS\") |>\n  arrange(desc(roi)) |>\n  select(title, roi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 753 × 2\n   title                      roi\n   <chr>                    <dbl>\n 1 The Blair Witch Project  648. \n 2 The Devil Inside         155. \n 3 My Big Fat Greek Wedding 119. \n 4 Chasing Amy              109. \n 5 Slacker                  107. \n 6 Insidious                103. \n 7 Paranormal Activity 2     87.4\n 8 Paranormal Activity 3     62.2\n 9 The Last Exorcism         61.8\n10 Cinderella                58.6\n# ℹ 743 more rows\n```\n\n\n:::\n:::\n",
    "supporting": [
      "03-grammar-of-data-transformation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}