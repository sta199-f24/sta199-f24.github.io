{
  "hash": "c115cd58131b9187c77c3841a3672835",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear models with a single predictor\"\nsubtitle: \"Lecture 15\"\ndate: \"2024-10-24\"\nformat: \n  live-revealjs: \n    output-file: 15-linear-model-single-predictor-slides.html\nwebr:\n  cell-options:\n    autorun: false\n  packages:\n    - tidyverse\n    - tidymodels\n    - fivethirtyeight\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n<!-- begin: webr fodder -->\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(width = 60)\n\nmovie_scores <- fandango |>\n  rename(\n    critics = rottentomatoes, \n    audience = rottentomatoes_user\n  )\n```\n:::\n\n\n\n\n\n\n<!-- end: webr fodder -->\n\n<!-- begin: ae definition -->\n\n\n\n\n\n\n\n\n\n<!-- end: ae definition -->\n\n# Warm-up\n\n## While you wait... {.smaller}\n\n::: appex\n-   Go to your `ae` project in RStudio.\n\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   Click Pull to get today's application exercise file: *ae\\-13\\-modeling\\-penguins\\.qmd*.\n\n-   Wait till the you're prompted to work on the application exercise during class before editing the file.\n:::\n\n## Announcements\n\n-   AE 12 (Tuesday's AE) solutions posted for extra practice, AE 13 (today's AE) incorporates bits of AE 12 we didn't get to on Tuesday\n-   Academic misconduct issues so far:\n    -   Uncited use of outside materials, including (and especially) AI tools\n    -   Same work turned in by multiple students\n\n# Correlation vs. causation\n\n## Spurious correlations\n\n![](images/15/mozarella-ce-phd.png){fig-align=\"center\"}\n\n::: aside\nSource: [tylervigen.com/spurious-correlations](https://www.tylervigen.com/spurious-correlations)\n:::\n\n## Spurious correlations\n\n![](images/15/pool-nick-cage.png){fig-align=\"center\"}\n\n::: aside\nSource: [tylervigen.com/spurious-correlations](https://www.tylervigen.com/spurious-correlations)\n:::\n\n# Linear regression with a single predictor\n\n## Data prep\n\n-   Rename Rotten Tomatoes columns as `critics` and `audience`\n-   Rename the dataset as `movie_scores`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_scores <- fandango |>\n  rename(\n    critics = rottentomatoes, \n    audience = rottentomatoes_user\n  )\n```\n:::\n\n\n\n\n## Data overview\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_scores |>\n  select(critics, audience)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 146 Ã— 2\n   critics audience\n     <int>    <int>\n 1      74       86\n 2      85       80\n 3      80       90\n 4      18       84\n 5      14       28\n 6      63       62\n 7      42       53\n 8      86       64\n 9      99       82\n10      89       87\n# â„¹ 136 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Data visualization\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-linear-model-single-predictor_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n\n## Regression model {#regression-model-1}\n\nA **regression model** is a function that describes the relationship between the outcome, $Y$, and the predictor, $X$.\n\n$$\\begin{aligned} Y &= \\color{black}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{black}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{black}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon \\end{aligned}$$\n\n## Regression model\n\n::::: columns\n::: {.column width=\"30%\"}\n$$\n\\begin{aligned} Y &= \\color{#325b74}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{#325b74}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{#325b74}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon \n\\end{aligned}\n$$\n:::\n\n::: {.column width=\"70%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-linear-model-single-predictor_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Simple linear regression {.smaller}\n\nUse **simple linear regression** to model the relationship between a quantitative outcome ($Y$) and a single quantitative predictor ($X$): $$\\Large{Y = \\beta_0 + \\beta_1 X + \\epsilon}$$\n\n::: incremental\n-   $\\beta_1$: True slope of the relationship between $X$ and $Y$\n-   $\\beta_0$: True intercept of the relationship between $X$ and $Y$\n-   $\\epsilon$: Error (residual)\n:::\n\n## Simple linear regression\n\n$$\\Large{\\hat{Y} = b_0 + b_1 X}$$\n\n-   $b_1$: Estimated slope of the relationship between $X$ and $Y$\n-   $b_0$: Estimated intercept of the relationship between $X$ and $Y$\n-   No error term!\n\n## Choosing values for $b_1$ and $b_0$\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-linear-model-single-predictor_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n\n## Residuals\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](15-linear-model-single-predictor_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n$$\\text{residual} = \\text{observed} - \\text{predicted} = y - \\hat{y}$$\n\n## Least squares line {.smaller}\n\n-   The residual for the $i^{th}$ observation is\n\n$$e_i = \\text{observed} - \\text{predicted} = y_i - \\hat{y}_i$$\n\n-   The **sum of squared** residuals is\n\n$$e^2_1 + e^2_2 + \\dots + e^2_n$$\n\n-   The **least squares line** is the one that **minimizes the sum of squared residuals**\n\n## Least squares line {.scrollable}\n\n\n\n\n::: {.cell}\n```{webr}\nmovies_fit <- linear_reg() |>\n  fit(audience ~ critics, data = movie_scores)\n\ntidy(movies_fit)\n```\n:::\n\n\n\n\n# Slope and intercept\n\n## Properties of least squares regression\n\n::: incremental\n-   The regression line goes through the center of mass point (the coordinates corresponding to average $X$ and average $Y$): $b_0 = \\bar{Y} - b_1~\\bar{X}$\n\n-   Slope has the same sign as the correlation coefficient: $b_1 = r \\frac{s_Y}{s_X}$\n\n-   Sum of the residuals is zero: $\\sum_{i = 1}^n \\epsilon_i = 0$\n\n-   Residuals and $X$ values are uncorrelated\n:::\n\n## Interpreting the slope {.smaller}\n\n::::::: panel-tabset\n## Question\n\n::: poll\nThe slope of the model for predicting audience score from critics score is 0.519.\nWhich of the following is the best interpretation of this value?\n:::\n\n::::: columns\n::: {.column width=\"80%\"}\na.  For every one point increase in the critics score, the audience score goes up by 0.519 points, on average.\nb.  For every one point increase in the critics score, we expect the audience score to be higher by 0.519 points, on average.\nc.  For every one point increase in the critics score, the audience score goes up by 0.519 points.\nd.  For every one point increase in the audience score, the critics score goes up by 0.519 points, on average.\n:::\n\n::: {.column width=\"20%\"}\n![](images/15/slido-qr-2024-10-24.png)\n:::\n:::::\n\n## Submit\n\n<iframe src=\"https://app.sli.do/event/q455FV1ibTPoNGQBoMNMFJ\" height=\"100%\" width=\"100%\" frameBorder=\"0\" style=\"min-height: 500px;\" allow=\"clipboard-write\" title=\"Slido\"></iframe>\n:::::::\n\n## Interpreting slope & intercept\n\n$$\\widehat{\\text{audience}} = 32.3 + 0.519 \\times \\text{critics}$$\n\n::: incremental\n-   **Slope:** For every one point increase in the critics score, we expect the audience score to be higher by 0.519 points, on average.\n-   **Intercept:** If the critics score is 0 points, we expect the audience score to be 32.3 points.\n:::\n\n## Is the intercept meaningful?\n\nâœ… The intercept is meaningful in context of the data if\n\n-   the predictor can feasibly take values equal to or near zero or\n-   the predictor has values near zero in the observed data\n\n. . .\n\nðŸ›‘ Otherwise, it might not be meaningful!\n\n# Application exercise\n\n## ae\\-13\\-modeling\\-penguins {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-13\\-modeling\\-penguins\\.qmd*.\n\n-   Work through the application exercise in class, and render, commit, and push your edits.\n:::\n",
    "supporting": [
      "15-linear-model-single-predictor_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}