{
  "hash": "74d71c50f163dbee3ba385b6195904bd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grammar of Data Visualization\"\nsubtitle: \"Lecture 2\"\ndate: \"2024-09-03\"\nformat: \n  live-revealjs: \n    output-file: 02-grammar-of-data-visualization-slides.html\nwebr:\n  cell-options:\n    autorun: false\n  packages:\n    - palmerpenguins\n    - tibble\n---\n\n\n\n\n<!-- begin: webr fodder -->\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(width = 60)\n```\n:::\n\n\n\n\n<!-- end: webr fodder -->\n\n# Warm-up\n\n## Announcements\n\n...\n\n## Outline {.smaller}\n\n-   Last time:\n\n    -   We introduced you to the course toolkit.\n\n    -   You **cloned** your `ae` repositories and started making some updates in your Quarto documents.\n\n    -   You did not **commit and push** your changes back.\n\n. . .\n\n-   Today:\n\n    -   You will **commit** your changes from last time and **push** them to wrap up that application exercise.\n\n    -   We will introduce data visualization.\n\n    -   You will **pull** to get today's application exercise file.\n\n    -   You will work on the new application exercise on data visualization, **commit** your changes, and **push** them.\n\n# From last time\n\n## `ae-01-meet-the-penguins`\n\n::: appex\nGo to RStudio, confirm that you're in the `ae` project, and open the document `ae-01-meet-the-penguins.qmd`.\n:::\n\n## Tour recap: Quarto\n\n![](images/01/tour-quarto.png){fig-alt=\"RStudio IDE with a Quarto document, source code on the left and output on the right. Annotated to show the YAML, a link, a header, and a code chunk.\" fig-align=\"center\"}\n\n## Tour recap: Git + GitHub {.smaller}\n\nOnce we made changes to our Quarto document, we\n\n-   went to the Git pane in RStudio\n\n-   staged our changes by clicking the checkboxes next to the relevant files\n\n-   committed our changes with an informative commit message\n\n-   pushed our changes to our application exercise repos\n\n-   confirmed on GitHub that we could see our changes pushed from RStudio\n\n## How will we use Quarto?\n\n-   Every application exercise, lab, project, etc. is an Quarto document\n-   You'll always have a template Quarto document to start with\n-   The amount of scaffolding in the template will decrease over the semester\n\n## What's with all the hexes?\n\n![](images/01/hexes.jpeg){fig-alt=\"Hex logos for many packages\" fig-align=\"center\"}\n\n## We have hexes too!\n\n::: task\nGrab one before you leave!\n:::\n\n::: center-align\n![](images/logo.png){fig-alt=\"STA 199 hex logo\"}\n:::\n\n# Data visualization\n\n## Examining data visualization {.smaller}\n\n::: columns\n::: {.column width=\"60%\"}\nDiscuss the following for the visualization.\n\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/STA199S24?from=status-bar?\" width=\"100%\"></iframe>\n```\n\n\n\n:::\n\n\n\n\n{{< countdown minutes=4 >}}\n\n\n\n\n\n\n::: {.column width=\"40%\"}\n![Source: [Twitter](https://twitter.com/reina_sabah/status/1291509085855260672)](images/female-heights.png){fig-align=\"center\"}\n:::\n:::\n\n## `ae-02-bechdel-dataviz` {.smaller}\n\n::: appex\n-   Go to your `ae` project in RStudio.\n-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n-   Click **Pull** to get today's application exercise file.\n-   Work through the application exercise in class, and **render, commit, and push** your edits by the end of class.\n:::\n\n## Recap of AE {.smaller}\n\n-   Construct plots with `ggplot()`.\n-   Layers of ggplots are separated by `+`s.\n-   The formula is (almost) always as follows:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n```\n:::\n\n\n\n\n-   Aesthetic attributes of a geometries (color, size, transparency, etc.) can be **map**ped to variables in the data or **set** by the user, e.g. `color = binary` vs. `color = \"pink\"`.\n-   Use `facet_wrap()` when faceting (creating small multiples) by one variable and `facet_grid()` when faceting by two variables.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}