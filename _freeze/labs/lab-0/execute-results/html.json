{
  "hash": "c09556ed8c984558d2aa8b9ddcfbe0a5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 0 - Hello, World and STA 199!\"\ncategories: \"Lab\"\nexecute:\n  eval: false\n---\n\n\n\n\nThis lab will set you up for the computing workflow and give you an opportunity to introduce yourselves to each other and the teaching team.\n\n# `Hello, World!`\n\nYou may have heard/seen this phrase, `Hello, World!`, elsewhere before.\nIt's usually the first thing you learn in programming â€“ to learn to write a computer program to print this sentence to screen.\nThings will be different in this course, as it's not a programming, but a data science course.\nSo, starting tomorrow in class, you'll learn to use a computer program (called R) to work with data.\n\nBut today, we need to set you up for success!\nLet's first briefly review the components of the computational toolkit for the course:\n\n1.  R: The programming language you'll learn in this course.\n\n2.  RStudio: The piece of software (a.k.a. the integrated development environment, IDE) you'll use to write R code in.\n\n::: callout-note\nR is the name of the programming language itself and RStudio is a convenient interface.\n:::\n\n3.  Quarto: The tool you'll use to create reproducible computational documents that contain both your narrative (i.e., words in English) and your code (i.e., code in R). Every piece of assignment you hand in will be a Quarto document.\n\n::: callout-note\nYou might be familiar with word processors like MS Word or Google Docs.\nWe will not be using these in this class.\nInstead, the words you would write in such a document as well as the code will go into a Quarto document, and when you *render* the document (more on what this means later) you will get a document out that has your words, your code, and the output of that code.\nEverything in one place, beautifully formatted!\n:::\n\n4.  Git: Version control system.\n5.  GitHub: A web hosting service for the Git version control system that also allows for transparent collaboration between team members.\n\n::: callout-note\nGit is a version control system (like \"Track Changes\" features from Microsoft Word but more powerful) and GitHub is the home for your Git-based projects on the internet (like DropBox but much better).\n:::\n\n## Access R and RStudio\n\n-   Go to <https://cmgr.oit.duke.edu/containers> and login with your Duke NetID and Password.\n-   Click `STA198-199` to log into the Docker container. You should now see the RStudio environment.\n\nGo to <https://cmgr.oit.duke.edu/containers> and under *Reservations available* click on *reserve STA 198-199* to reserve a container for yourself.\n\n::: callout-note\nA container is a self-contained instance of RStudio for you, and you alone.\nYou will do all of your computing in your container.\n:::\n\nOnce you've reserved the container you'll see that it will show up under *My reservations*.\n\nTo launch your container click on it under My reservations, then click *Login*, and then *Start*.[^1]\n\n[^1]: Yes, it's too many steps.\n    I don't know why!\n    But it works, and you'll get used to it.\n    Trust me, it beats downloading and installing everything you need on your computers!\n\n## Create a GitHub account\n\nGo to <https://github.com/> and walk through the steps for creating an account.\nYou do not have to use your Duke email address, but I recommend doing so.[^2]\n\n[^2]: GitHub has some perks for students you can take advantage of later in the course or in your future work, and it helps to have a .edu address to get verified as a student.\n\n::: callout-note\nYou'll need to choose a user name.\nI recommend reviewing the user name advice at <https://happygitwithr.com/github-acct#username-advice> before choosing a username.\n:::\n\n::: {.callout-important collapse=\"true\"}\n## What if I already have a GitHub account?\n\nIf you already have a GitHub account, you do not need to create a new one for this course.\nJust log in to that account to make sure you still remember your username and password.\n:::\n\n## Set up your SSH key\n\nYou will authenticate GitHub using SSH (Secure Shell Protocol â€“ it doesn't really matter what this means for the purpose of this course).\nBelow is an outline of the authentication steps; you are encouraged to follow along as your TA demonstrates the steps.\n\n::: callout-note\nYou only need to do this authentication process one time on a single system.\n:::\n\n-   Go back to your RStudio container and type `credentials::ssh_setup_github()` into your console.\n-   R will ask \"No SSH key found. Generate one now?\" You should click 1 for yes.\n-   You will generate a key. It will begin with \"ssh-rsa....\" R will then ask \"Would you like to open a browser now?\" You should click 1 for yes.\n-   You may be asked to provide your GitHub username and password to log into GitHub. After entering this information, you should paste the key in and give it a name. You might name it in a way that indicates where the key will be used, e.g., `sta199`).\n\nYou can find more detailed instructions [here](https://github.com/DukeStatSci/github_auth_guide) if you're interested.\n\n## Configure Git\n\nThere is one more thing we need to do before getting started on the assignment.\nSpecifically, we need to configure your git so that RStudio can communicate with GitHub.\nThis requires two pieces of information: your name and email address.\n\nTo do so, you will use the `use_git_config()` function from the `usethis` package.\n\n::: callout-note\nYou'll hear about ðŸ“¦ packages a lot in the context of R â€“ basically they're how developers write functions and bundle them to distribute to the community (and more on this later too!).\n:::\n\nType the following lines of code in the **console** in RStudio filling in your name and the address associated with your GitHub account.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::use_git_config(\n  user.name = \"Your name\", \n  user.email = \"Email associated with your GitHub account\"\n)\n```\n:::\n\n\n\n\nFor example, mine would be\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::use_git_config(\n  user.name = \"Mine Ã‡etinkaya-Rundel\", \n  user.email = \"cetinkaya.mine@gmail.com\"\n)\n```\n:::\n\n\n\n\nYou are now ready interact with GitHub via RStudio!\n\nIf you don't do this, we won't be able to tell who you are and give you points for the work you do...\n\n::: {.callout-tip collapse=\"true\"}\n## Need a recap? Watch this video!\n\nThe following video walks you through the steps outlined in the SSH key generation and Git configuration sections above.\n\n\n\n\n{{< video https://youtu.be/3lONVzFw680 >}}\n\n\n\n\n\n:::\n\n# Hello STA 199!\n\nFill out the course \"Getting to know you\" survey on Canvas: <https://canvas.duke.edu/courses/39994/quizzes/25798>.\n\nWe will use the information collected in this survey for a variety of goals, from inviting you to the course GitHub organization (more on that later) to getting to know you as a person and your course goals and concerns.\n",
    "supporting": [
      "lab-0_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}